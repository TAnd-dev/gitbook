{
  "openapi": "3.0.0",
  "info": {
    "title": "AIML API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:4000"
    }
  ],
  "paths": {
    "/v1/responses": {
      "post": {
        "operationId": "_v1_responses",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "enum": [
                      "o1-pro",
                      "openai/o1-pro"
                    ]
                  },
                  "input": {
                    "anyOf": [
                      {
                        "type": "string",
                        "description": "A text input to the model, equivalent to a text input with the user role."
                      },
                      {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "message",
                                  "description": "The type of the message input. Always message."
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "user",
                                    "assistant",
                                    "system",
                                    "developer"
                                  ],
                                  "description": "The role of the message input."
                                },
                                "content": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "description": "A text input to the model."
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "input_text",
                                                "description": "The type of the input item. Always input_text."
                                              },
                                              "text": {
                                                "type": "string",
                                                "description": "The text input to the model."
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "text"
                                            ],
                                            "additionalProperties": false,
                                            "description": "A text input to the model."
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "input_image",
                                                "description": "The type of the input item. Always input_image."
                                              },
                                              "detail": {
                                                "type": "string",
                                                "enum": [
                                                  "high",
                                                  "low",
                                                  "auto"
                                                ],
                                                "default": "auto",
                                                "description": "The detail level of the image to be sent to the model. One of high, low, or auto."
                                              },
                                              "image_url": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL."
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "input_file",
                                                "description": "The type of the input item. Always input_file."
                                              },
                                              "file_data": {
                                                "type": "string",
                                                "description": "The content of the file to be sent to the model."
                                              },
                                              "filename": {
                                                "type": "string",
                                                "description": "The name of the file to be sent to the model."
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          }
                                        ]
                                      },
                                      "description": "A list of one or many input items to the model, containing different content types."
                                    }
                                  ],
                                  "description": "Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses."
                                }
                              },
                              "required": [
                                "role",
                                "content"
                              ],
                              "additionalProperties": false,
                              "description": "A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role. Messages with the assistant role are presumed to have been generated by the model in previous interactions."
                            },
                            {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "message",
                                      "description": "The type of the message input. Always message."
                                    },
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "user",
                                        "system",
                                        "developer"
                                      ],
                                      "description": "The role of the message input."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of item."
                                    },
                                    "content": {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/properties/input/anyOf/1/items/anyOf/0/properties/content/anyOf/1/items"
                                      },
                                      "description": "A list of one or many input items to the model, containing different content types."
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "content"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the output message."
                                    },
                                    "role": {
                                      "type": "string",
                                      "const": "assistant",
                                      "description": "The role of the output message. Always assistant."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the message input."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "message",
                                      "description": "The type of the output message. Always message."
                                    },
                                    "content": {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "annotations": {
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "end_index": {
                                                          "type": "integer",
                                                          "description": "The index of the last character of the URL citation in the message."
                                                        },
                                                        "start_index": {
                                                          "type": "integer",
                                                          "description": "The index of the first character of the URL citation in the message."
                                                        },
                                                        "title": {
                                                          "type": "string",
                                                          "description": "The title of the web resource."
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "const": "url_citation",
                                                          "description": "The type of the URL citation. Always url_citation."
                                                        },
                                                        "url": {
                                                          "type": "string",
                                                          "format": "uri",
                                                          "description": "The URL of the web resource."
                                                        }
                                                      },
                                                      "required": [
                                                        "end_index",
                                                        "start_index",
                                                        "title",
                                                        "type",
                                                        "url"
                                                      ],
                                                      "additionalProperties": false,
                                                      "description": "A citation for a web resource used to generate a model response."
                                                    }
                                                  ]
                                                },
                                                "description": "The annotations of the text output."
                                              },
                                              "text": {
                                                "type": "string",
                                                "description": "The text output from the model."
                                              },
                                              "type": {
                                                "type": "string",
                                                "const": "output_text",
                                                "description": "The type of the output text. Always output_text."
                                              },
                                              "logprobs": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "bytes": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "logprob": {
                                                      "type": "number"
                                                    },
                                                    "token": {
                                                      "type": "string"
                                                    },
                                                    "top_logprobs": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "bytes": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "integer"
                                                            }
                                                          },
                                                          "logprob": {
                                                            "type": "number"
                                                          },
                                                          "token": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "bytes",
                                                          "logprob",
                                                          "token"
                                                        ],
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "bytes",
                                                    "logprob",
                                                    "token",
                                                    "top_logprobs"
                                                  ],
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "required": [
                                              "annotations",
                                              "text",
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "refusal": {
                                                "type": "string",
                                                "description": "The refusal explanationfrom the model."
                                              },
                                              "type": {
                                                "type": "string",
                                                "const": "refusal",
                                                "description": "The type of the refusal. Always refusal."
                                              }
                                            },
                                            "required": [
                                              "refusal",
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          }
                                        ],
                                        "description": "The content of the output message."
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "role",
                                    "status",
                                    "type",
                                    "content"
                                  ],
                                  "additionalProperties": false,
                                  "description": "An output message from the model."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "action": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "button": {
                                              "type": "string",
                                              "enum": [
                                                "left",
                                                "right",
                                                "wheel",
                                                "back",
                                                "forward"
                                              ],
                                              "description": "Indicates which mouse button was pressed during the click."
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "click",
                                              "description": "Specifies the event type. For a click action, this property is always set to click."
                                            },
                                            "x": {
                                              "type": "integer",
                                              "description": "The x-coordinate where the click occurred."
                                            },
                                            "y": {
                                              "type": "integer",
                                              "description": "The y-coordinate where the click occurred."
                                            }
                                          },
                                          "required": [
                                            "button",
                                            "type",
                                            "x",
                                            "y"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A click action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "double_click",
                                              "description": "Specifies the event type. For a double click action, this property is always set to double_click."
                                            },
                                            "x": {
                                              "type": "integer",
                                              "description": "The x-coordinate where the double click occurred.."
                                            },
                                            "y": {
                                              "type": "integer",
                                              "description": "The y-coordinate where the double click occurred."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "x",
                                            "y"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A double click action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate."
                                                  }
                                                },
                                                "required": [
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false
                                              },
                                              "description": "An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg"
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "drag",
                                              "description": "Specifies the event type. For a drag action, this property is always set to drag."
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A drag action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "keys": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key."
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "keypress",
                                              "description": "Specifies the event type. For a keypress action, this property is always set to keypress."
                                            }
                                          },
                                          "required": [
                                            "keys",
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A collection of keypresses the model would like to perform."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "move",
                                              "description": "Specifies the event type. For a move action, this property is always set to move."
                                            },
                                            "x": {
                                              "type": "integer",
                                              "description": "The x-coordinate to move to."
                                            },
                                            "y": {
                                              "type": "integer",
                                              "description": "The y-coordinate to move to."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "x",
                                            "y"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A mouse move action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "screenshot",
                                              "description": "Specifies the event type. For a screenshot action, this property is always set to screenshot."
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A screenshot action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "scroll",
                                              "description": "Specifies the event type. For a scroll action, this property is always set to scroll."
                                            },
                                            "scroll_x": {
                                              "type": "integer",
                                              "description": "The horizontal scroll distance."
                                            },
                                            "scroll_y": {
                                              "type": "integer",
                                              "description": "The vertical scroll distance."
                                            },
                                            "x": {
                                              "type": "integer",
                                              "description": "The x-coordinate where the scroll occurred."
                                            },
                                            "y": {
                                              "type": "integer",
                                              "description": "The y-coordinate where the scroll occurred."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "scroll_x",
                                            "scroll_y",
                                            "x",
                                            "y"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A scroll action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "type",
                                              "description": "Specifies the event type. For a type action, this property is always set to type."
                                            },
                                            "text": {
                                              "type": "string",
                                              "description": "The text to type."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "text"
                                          ],
                                          "additionalProperties": false,
                                          "description": "An action to type in text."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "wait",
                                              "description": "Specifies the event type. For a wait action, this property is always set to wait."
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A wait action."
                                        }
                                      ]
                                    },
                                    "call_id": {
                                      "type": "string",
                                      "description": "An identifier used when responding to the tool call with output."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the computer call."
                                    },
                                    "pending_safety_checks": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "type": "string",
                                            "description": "The type of the pending safety check."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The ID of the pending safety check."
                                          },
                                          "message": {
                                            "type": "string",
                                            "description": "Details about the pending safety check."
                                          }
                                        },
                                        "required": [
                                          "code",
                                          "id",
                                          "message"
                                        ],
                                        "additionalProperties": false
                                      },
                                      "description": "The pending safety checks for the computer call."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the item."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "computer_call",
                                      "description": "The type of the computer call. Always computer_call."
                                    }
                                  },
                                  "required": [
                                    "action",
                                    "call_id",
                                    "id",
                                    "pending_safety_checks",
                                    "status",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A tool call to a computer use tool."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "call_id": {
                                      "type": "string",
                                      "description": "The ID of the computer tool call that produced the output."
                                    },
                                    "output": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "computer_screenshot",
                                          "description": "Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot."
                                        },
                                        "image_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The URL of the screenshot image."
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "description": "A computer screenshot image used with the computer use tool."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "computer_call_output",
                                      "description": "The type of the computer tool call output. Always computer_call_output."
                                    },
                                    "acknowledged_safety_checks": {
                                      "anyOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "The ID of the pending safety check."
                                              },
                                              "code": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "The type of the pending safety check."
                                              },
                                              "message": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Details about the pending safety check."
                                              }
                                            },
                                            "required": [
                                              "id"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The safety checks reported by the API that have been acknowledged by the developer."
                                    },
                                    "id": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The ID of the computer tool call output."
                                    },
                                    "status": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "in_progress",
                                            "completed",
                                            "incomplete"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The status of the message input."
                                    }
                                  },
                                  "required": [
                                    "call_id",
                                    "output",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "The output of a computer tool call."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the web search tool call."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "searching",
                                        "failed"
                                      ],
                                      "description": "The status of the web search tool call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "web_search_call",
                                      "description": "The type of the web search tool call. Always web_search_call."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "status",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "The results of a web search tool call."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "string",
                                      "description": "A JSON string of the arguments to pass to the function."
                                    },
                                    "call_id": {
                                      "type": "string",
                                      "description": "The unique ID of the function tool call generated by the model."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the function to run. "
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "function_call",
                                      "description": "The type of the function tool call. Always function_call."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the function tool call."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the item. "
                                    }
                                  },
                                  "required": [
                                    "arguments",
                                    "call_id",
                                    "name",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A tool call to run a function."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "call_id": {
                                      "type": "string",
                                      "description": "The unique ID of the function tool call generated by the model."
                                    },
                                    "output": {
                                      "type": "string",
                                      "description": "A JSON string of the output of the function tool call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "function_call_output",
                                      "description": "The type of the function tool call output. Always function_call_output."
                                    },
                                    "id": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The unique ID of the function tool call output. Populated when this item is returned via API."
                                    },
                                    "status": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "in_progress",
                                            "completed",
                                            "incomplete"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The status of the item. "
                                    }
                                  },
                                  "required": [
                                    "call_id",
                                    "output",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "The output of a function tool call."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique identifier of the reasoning content."
                                    },
                                    "summary": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "text": {
                                            "type": "string",
                                            "description": "A short summary of the reasoning used by the model when generating the response."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "summary_text",
                                            "description": "The type of the object. Always summary_text."
                                          }
                                        },
                                        "required": [
                                          "text",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      "description": "Reasoning text contents."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "reasoning",
                                      "description": "The type of the object. Always reasoning."
                                    },
                                    "encrypted_content": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the item."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "summary",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A description of the chain of thought used by a reasoning model while generating a response. "
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "The code to run, or null if not available."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the code interpreter tool call."
                                    },
                                    "outputs": {
                                      "anyOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "logs": {
                                                    "type": "string",
                                                    "description": "The logs output from the code interpreter."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "logs",
                                                    "description": "The type of the output. Always 'logs'."
                                                  }
                                                },
                                                "required": [
                                                  "logs",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "image"
                                                  },
                                                  "url": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "url"
                                                ],
                                                "additionalProperties": false
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The outputs generated by the code interpreter, such as logs or images. Can be null if no outputs are available."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "interpreting"
                                      ],
                                      "description": "The status of the code interpreter tool call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "code_interpreter_call",
                                      "description": "The type of the code interpreter tool call. Always code_interpreter_call."
                                    },
                                    "container_id": {
                                      "type": "string",
                                      "description": "The ID of the container used to run the code."
                                    }
                                  },
                                  "required": [
                                    "code",
                                    "id",
                                    "outputs",
                                    "status",
                                    "type",
                                    "container_id"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A tool call to run code."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "action": {
                                      "type": "object",
                                      "properties": {
                                        "command": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "The command to run."
                                        },
                                        "env": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          },
                                          "description": "Environment variables to set for the command."
                                        },
                                        "type": {
                                          "type": "string",
                                          "const": "exec",
                                          "description": "The type of the local shell action. Always exec."
                                        },
                                        "timeout_ms": {
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ],
                                          "description": "Optional timeout in milliseconds for the command."
                                        },
                                        "user": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "Optional user to run the command as."
                                        },
                                        "working_directory": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "Optional working directory to run the command in."
                                        }
                                      },
                                      "required": [
                                        "command",
                                        "env",
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "description": "Execute a shell command on the server."
                                    },
                                    "call_id": {
                                      "type": "string",
                                      "description": "The unique ID of the local shell tool call generated by the model."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the local shell call."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the local shell call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "local_shell_call",
                                      "description": "The type of the local shell call. Always local_shell_call."
                                    }
                                  },
                                  "required": [
                                    "action",
                                    "call_id",
                                    "id",
                                    "status",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A tool call to run a command on the local shell."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the local shell tool call generated by the model."
                                    },
                                    "output": {
                                      "type": "string",
                                      "description": "A JSON string of the output of the local shell tool call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "local_shell_call_output",
                                      "description": "The type of the local shell tool call output. Always local_shell_call_output."
                                    },
                                    "status": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "in_progress",
                                            "completed",
                                            "incomplete"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The status of the item."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "output",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "The output of a local shell tool call."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the list."
                                    },
                                    "server_label": {
                                      "type": "string",
                                      "description": "The label of the MCP server."
                                    },
                                    "tools": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "input_schema": {
                                            "type": "object",
                                            "additionalProperties": {},
                                            "description": "The JSON schema describing the tool's input."
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the tool."
                                          },
                                          "annotations": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": {}
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "Additional annotations about the tool."
                                          },
                                          "description": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The description of the tool."
                                          }
                                        },
                                        "required": [
                                          "input_schema",
                                          "name"
                                        ],
                                        "additionalProperties": false
                                      },
                                      "description": "The tools available on the server."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "mcp_list_tools",
                                      "description": "The type of the item. Always mcp_list_tools."
                                    },
                                    "error": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "Error message if the server could not list tools."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "server_label",
                                    "tools",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A list of tools available on an MCP server."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "string",
                                      "description": "A JSON string of arguments for the tool."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the approval request."
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "server_label": {
                                      "type": "string",
                                      "description": "The name of the tool to run."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "mcp_approval_request",
                                      "description": "The type of the item. Always mcp_approval_request."
                                    }
                                  },
                                  "required": [
                                    "arguments",
                                    "id",
                                    "name",
                                    "server_label",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A request for human approval of a tool invocation."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "approval_request_id": {
                                      "type": "string",
                                      "description": "The ID of the approval request being answered."
                                    },
                                    "approve": {
                                      "type": "boolean",
                                      "description": "Whether the request was approved."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "mcp_approval_response",
                                      "description": "The type of the item. Always mcp_approval_response."
                                    },
                                    "id": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The unique ID of the approval response"
                                    },
                                    "reason": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "Optional reason for the decision."
                                    }
                                  },
                                  "required": [
                                    "approval_request_id",
                                    "approve",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A response to an MCP approval request."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "string",
                                      "description": "A JSON string of the arguments passed to the tool."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the tool call."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the tool that was run."
                                    },
                                    "server_label": {
                                      "type": "string",
                                      "description": "The label of the MCP server running the tool."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "mcp_call",
                                      "description": "The type of the item. Always mcp_call."
                                    },
                                    "error": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The error from the tool call, if any."
                                    },
                                    "output": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The output from the tool call."
                                    }
                                  },
                                  "required": [
                                    "arguments",
                                    "id",
                                    "name",
                                    "server_label",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "An invocation of a tool on an MCP server."
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the item to reference."
                                },
                                "type": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "const": "item_reference"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "description": "The type of item to reference. Always item_reference."
                                }
                              },
                              "required": [
                                "id"
                              ],
                              "additionalProperties": false,
                              "description": "An internal identifier for an item to reference."
                            }
                          ]
                        },
                        "description": "A list of one or many input items to the model, containing different content types."
                      }
                    ],
                    "description": "Text, image, or file inputs to the model, used to generate a response."
                  },
                  "include": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "message.input_image.image_url",
                            "computer_call_output.output.image_url",
                            "reasoning.encrypted_content",
                            "code_interpreter_call.outputs"
                          ]
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Specify additional output data to include in the model response. Currently supported values are:\n    - code_interpreter_call.outputs: Includes the outputs of python code execution in code interpreter tool call items.\n    - computer_call_output.output.image_url: Include image urls from the computer call output.\n    - file_search_call.results: Include the search results of the file search tool call.\n    - message.output_text.logprobs: Include logprobs with assistant messages.\n    - reasoning.encrypted_content: Includes an encrypted version of reasoning tokens in reasoning item outputs. This enables reasoning items to be used in multi-turn conversations when using the Responses API statelessly (like when the store parameter is set to false, or when an organization is enrolled in the zero data retention program).\n"
                  },
                  "instructions": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A system (or developer) message inserted into the model's context.\n\nWhen using along with previous_response_id, the instructions from a previous response will not be carried over to the next response. This makes it simple to swap out system (or developer) messages in new responses."
                  },
                  "max_output_tokens": {
                    "type": "integer",
                    "description": "An upper bound for the number of tokens that can be generated for a response, including visible output tokens and reasoning tokens."
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters."
                  },
                  "parallel_tool_calls": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Whether to allow the model to run tool calls in parallel."
                  },
                  "previous_response_id": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The unique ID of the previous response to the model. Use this to create multi-turn conversations."
                  },
                  "prompt": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the prompt template to use."
                          },
                          "variables": {
                            "anyOf": [
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "$ref": "#/properties/input/anyOf/1/items/anyOf/0/properties/content/anyOf/1/items"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "Optional map of values to substitute in for variables in your prompt. The substitution values can either be strings, or other Response input types like images or files."
                          },
                          "version": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Optional version of the prompt template."
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Reference to a prompt template and its variables."
                  },
                  "reasoning": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "effort": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "low",
                                  "medium",
                                  "high"
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
                          },
                          "summary": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "auto",
                                  "concise",
                                  "detailed"
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process."
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "o-series models only\nConfiguration options for reasoning models."
                  },
                  "store": {
                    "anyOf": [
                      {
                        "type": "boolean",
                        "default": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Whether to store the generated model response for later retrieval via API."
                  },
                  "stream": {
                    "anyOf": [
                      {
                        "type": "boolean",
                        "default": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "If set to true, the model response data will be streamed to the client as it is generated using server-sent events. "
                  },
                  "temperature": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 2
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both."
                  },
                  "text": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "text",
                                "description": "The type of response format being defined. Always text."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "Default response format. Used to generate text responses."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "json_object",
                                "description": "The type of response format being defined. Always json_object."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "An older method of generating JSON responses. Using json_schema is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                              },
                              "schema": {
                                "type": "object",
                                "additionalProperties": {},
                                "description": "The schema for the response format, described as a JSON Schema object."
                              },
                              "type": {
                                "type": "string",
                                "const": "json_schema"
                              },
                              "strict": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Whether to enable strict schema adherence when generating the output. If set to True, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is True."
                              },
                              "description": {
                                "type": "string",
                                "description": "A description of what the response format is for, used by the model to determine how to respond in the format."
                              }
                            },
                            "required": [
                              "name",
                              "schema",
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "JSON Schema response format. Used to generate structured JSON responses."
                          }
                        ],
                        "description": "An object specifying the format that the model must output."
                      }
                    },
                    "required": [
                      "format"
                    ],
                    "additionalProperties": false,
                    "description": "Configuration options for a text response from the model. Can be plain text or structured JSON data."
                  },
                  "tool_choice": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "none",
                          "auto",
                          "required"
                        ],
                        "description": "Controls which (if any) tool is called by the model.\n\nnone means the model will not call any tool and instead generates a message.\n\nauto means the model can pick between generating a message or calling one or more tools.\n\nrequired means the model must call one or more tools."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "web_search_preview",
                              "web_search_preview_2025_03_11",
                              "computer_use_preview",
                              "code_interpreter",
                              "mcp"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false,
                        "description": "Indicates that the model should use a built-in tool to generate a response."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the function to call."
                          },
                          "type": {
                            "type": "string",
                            "const": "function",
                            "description": "For function calling, the type is always function."
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ],
                        "additionalProperties": false
                      }
                    ],
                    "description": "How the model should select which tool (or tools) to use when generating a response."
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "web_search_preview",
                                "web_search_preview_2025_03_11"
                              ],
                              "description": "The type of the web search tool. One of web_search_preview or web_search_preview_2025_03_11."
                            },
                            "search_context_size": {
                              "type": "string",
                              "enum": [
                                "low",
                                "medium",
                                "high"
                              ],
                              "description": "High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default."
                            },
                            "user_location": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "approximate",
                                      "description": "The type of location approximation. Always approximate."
                                    },
                                    "city": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "Free text input for the city of the user, e.g. San Francisco."
                                    },
                                    "country": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The two-letter ISO country code of the user, e.g. US."
                                    },
                                    "region": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "Free text input for the region of the user, e.g. California."
                                    },
                                    "timezone": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The IANA timezone of the user, e.g. America/Los_Angeles."
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The user's location"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "This tool searches the web for relevant results to use in a response."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "display_height": {
                              "type": "integer",
                              "description": "The height of the computer display."
                            },
                            "display_width": {
                              "type": "integer",
                              "description": "The width of the computer display."
                            },
                            "environment": {
                              "type": "string",
                              "enum": [
                                "windows",
                                "mac",
                                "linux",
                                "ubuntu",
                                "browser"
                              ],
                              "description": "The type of computer environment to control."
                            },
                            "type": {
                              "type": "string",
                              "const": "computer_use_preview",
                              "description": "The type of the computer use tool. Always computer_use_preview."
                            }
                          },
                          "required": [
                            "display_height",
                            "display_width",
                            "environment",
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "A tool that controls a virtual computer."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "server_label": {
                              "type": "string",
                              "description": "A label for this MCP server, used to identify it in tool calls."
                            },
                            "server_url": {
                              "type": "string",
                              "description": "The URL for the MCP server."
                            },
                            "type": {
                              "type": "string",
                              "const": "mcp",
                              "description": "The type of the MCP tool. Always mcp."
                            },
                            "allowed_tools": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A string array of allowed tool names"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_names": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "List of allowed tool names."
                                        }
                                      },
                                      "additionalProperties": false,
                                      "description": "A filter object to specify which tools are allowed."
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "List of allowed tool names or a filter object."
                            },
                            "headers": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "Optional HTTP headers to send to the MCP server. Use for authentication or other purposes."
                            },
                            "require_approval": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "always",
                                        "never"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "always": {
                                          "type": "object",
                                          "properties": {
                                            "tool_names": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "List of tools that require approval."
                                            }
                                          },
                                          "additionalProperties": false,
                                          "description": "A list of tools that always require approval."
                                        },
                                        "never": {
                                          "type": "object",
                                          "properties": {
                                            "tool_names": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "List of tools that do not require approval."
                                            }
                                          },
                                          "additionalProperties": false,
                                          "description": "A list of tools that never require approval."
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "Specify which of the MCP server's tools require approval."
                            }
                          },
                          "required": [
                            "server_label",
                            "server_url",
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "Give the model access to additional tools via remote Model Context Protocol (MCP) servers."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "code_interpreter",
                              "description": "The type of the code interpreter tool. Always code_interpreter."
                            },
                            "container": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "auto"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "description": "The container ID."
                            }
                          },
                          "required": [
                            "type",
                            "container"
                          ],
                          "additionalProperties": false,
                          "description": "A tool that runs Python code to help generate a response to a prompt."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "local_shell",
                              "description": "The type of the local shell tool. Always local_shell."
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "A tool that allows the model to execute shell commands in a local environment."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the function to call."
                            },
                            "parameters": {
                              "type": "object",
                              "additionalProperties": {},
                              "description": "A JSON schema object describing the parameters of the function."
                            },
                            "strict": {
                              "type": "boolean",
                              "description": "Whether to enforce strict parameter validation."
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "description": "The type of the function tool. Always function."
                            },
                            "description": {
                              "type": "string",
                              "description": "A description of the function. Used by the model to determine whether or not to call the function."
                            }
                          },
                          "required": [
                            "name",
                            "parameters",
                            "strict",
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "Defines a function in your own code the model can choose to call."
                        }
                      ]
                    },
                    "description": "An array of tools the model may call while generating a response. You can specify which tool to use by setting the tool_choice parameter."
                  },
                  "top_p": {
                    "type": [
                      "number",
                      "null"
                    ],
                    "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\nWe generally recommend altering this or temperature but not both."
                  },
                  "truncation": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "disabled"
                    ],
                    "default": "disabled",
                    "description": "The truncation strategy to use for the model response.\n\n    - auto: If the context of this response and previous ones exceeds the model's context window size, the model will truncate the response to fit the context window by dropping input items in the middle of the conversation.\n    - disabled (default): If a model response will exceed the context window size for a model, the request will fail with a 400 error.\n"
                  }
                },
                "required": [
                  "model",
                  "input"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "o1-pro, openai/o1-pro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "background": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "created_at": {
                      "type": "number"
                    },
                    "error": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "code",
                            "message"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "id": {
                      "type": "string"
                    },
                    "incomplete_details": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "reason": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "instructions": {
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "message",
                                        "description": "The type of the message input. Always message."
                                      },
                                      "role": {
                                        "type": "string",
                                        "enum": [
                                          "user",
                                          "assistant",
                                          "system",
                                          "developer"
                                        ],
                                        "description": "The role of the message input."
                                      },
                                      "content": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "A text input to the model."
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "input_text",
                                                      "description": "The type of the input item. Always input_text."
                                                    },
                                                    "text": {
                                                      "type": "string",
                                                      "description": "The text input to the model."
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "text"
                                                  ],
                                                  "additionalProperties": false,
                                                  "description": "A text input to the model."
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "input_image",
                                                      "description": "The type of the input item. Always input_image."
                                                    },
                                                    "detail": {
                                                      "type": "string",
                                                      "enum": [
                                                        "high",
                                                        "low",
                                                        "auto"
                                                      ],
                                                      "default": "auto",
                                                      "description": "The detail level of the image to be sent to the model. One of high, low, or auto."
                                                    },
                                                    "image_url": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ],
                                                      "description": "The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL."
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ],
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "input_file",
                                                      "description": "The type of the input item. Always input_file."
                                                    },
                                                    "file_data": {
                                                      "type": "string",
                                                      "description": "The content of the file to be sent to the model."
                                                    },
                                                    "filename": {
                                                      "type": "string",
                                                      "description": "The name of the file to be sent to the model."
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ],
                                                  "additionalProperties": false
                                                }
                                              ]
                                            },
                                            "description": "A list of one or many input items to the model, containing different content types."
                                          }
                                        ],
                                        "description": "Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses."
                                      }
                                    },
                                    "required": [
                                      "role",
                                      "content"
                                    ],
                                    "additionalProperties": false,
                                    "description": "A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role. Messages with the assistant role are presumed to have been generated by the model in previous interactions."
                                  },
                                  {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "message",
                                            "description": "The type of the message input. Always message."
                                          },
                                          "role": {
                                            "type": "string",
                                            "enum": [
                                              "user",
                                              "system",
                                              "developer"
                                            ],
                                            "description": "The role of the message input."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of item."
                                          },
                                          "content": {
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/0/properties/content/anyOf/1/items"
                                            },
                                            "description": "A list of one or many input items to the model, containing different content types."
                                          }
                                        },
                                        "required": [
                                          "role",
                                          "content"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the output message."
                                          },
                                          "role": {
                                            "type": "string",
                                            "const": "assistant",
                                            "description": "The role of the output message. Always assistant."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the message input."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "message",
                                            "description": "The type of the output message. Always message."
                                          },
                                          "content": {
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotations": {
                                                      "type": "array",
                                                      "items": {
                                                        "anyOf": [
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "end_index": {
                                                                "type": "integer",
                                                                "description": "The index of the last character of the URL citation in the message."
                                                              },
                                                              "start_index": {
                                                                "type": "integer",
                                                                "description": "The index of the first character of the URL citation in the message."
                                                              },
                                                              "title": {
                                                                "type": "string",
                                                                "description": "The title of the web resource."
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "const": "url_citation",
                                                                "description": "The type of the URL citation. Always url_citation."
                                                              },
                                                              "url": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "description": "The URL of the web resource."
                                                              }
                                                            },
                                                            "required": [
                                                              "end_index",
                                                              "start_index",
                                                              "title",
                                                              "type",
                                                              "url"
                                                            ],
                                                            "additionalProperties": false,
                                                            "description": "A citation for a web resource used to generate a model response."
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "file_id": {
                                                                "type": "string"
                                                              },
                                                              "index": {
                                                                "type": "integer"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "const": "file_citation"
                                                              }
                                                            },
                                                            "required": [
                                                              "file_id",
                                                              "index",
                                                              "type"
                                                            ],
                                                            "additionalProperties": false
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "container_id": {
                                                                "type": "string"
                                                              },
                                                              "start_index": {
                                                                "type": "integer"
                                                              },
                                                              "end_index": {
                                                                "type": "integer"
                                                              },
                                                              "file_id": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "const": "container_file_citation"
                                                              }
                                                            },
                                                            "required": [
                                                              "container_id",
                                                              "start_index",
                                                              "end_index",
                                                              "file_id",
                                                              "type"
                                                            ],
                                                            "additionalProperties": false
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "file_id": {
                                                                "type": "string"
                                                              },
                                                              "index": {
                                                                "type": "integer"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "const": "file_path"
                                                              }
                                                            },
                                                            "required": [
                                                              "file_id",
                                                              "index",
                                                              "type"
                                                            ],
                                                            "additionalProperties": false
                                                          }
                                                        ]
                                                      },
                                                      "description": "The annotations of the text output."
                                                    },
                                                    "text": {
                                                      "type": "string",
                                                      "description": "The text output from the model."
                                                    },
                                                    "type": {
                                                      "type": "string",
                                                      "const": "output_text",
                                                      "description": "The type of the output text. Always output_text."
                                                    },
                                                    "logprobs": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "bytes": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "integer"
                                                            }
                                                          },
                                                          "logprob": {
                                                            "type": "number"
                                                          },
                                                          "token": {
                                                            "type": "string"
                                                          },
                                                          "top_logprobs": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "bytes": {
                                                                  "type": "array",
                                                                  "items": {
                                                                    "type": "integer"
                                                                  }
                                                                },
                                                                "logprob": {
                                                                  "type": "number"
                                                                },
                                                                "token": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "bytes",
                                                                "logprob",
                                                                "token"
                                                              ],
                                                              "additionalProperties": false
                                                            }
                                                          }
                                                        },
                                                        "required": [
                                                          "bytes",
                                                          "logprob",
                                                          "token",
                                                          "top_logprobs"
                                                        ],
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "annotations",
                                                    "text",
                                                    "type"
                                                  ],
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "refusal": {
                                                      "type": "string",
                                                      "description": "The refusal explanationfrom the model."
                                                    },
                                                    "type": {
                                                      "type": "string",
                                                      "const": "refusal",
                                                      "description": "The type of the refusal. Always refusal."
                                                    }
                                                  },
                                                  "required": [
                                                    "refusal",
                                                    "type"
                                                  ],
                                                  "additionalProperties": false
                                                }
                                              ],
                                              "description": "The content of the output message."
                                            }
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "role",
                                          "status",
                                          "type",
                                          "content"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "queries": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "searching",
                                              "incomplete",
                                              "failed",
                                              "completed"
                                            ]
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "file_search_call"
                                          },
                                          "results": {
                                            "anyOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "attributes": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": [
                                                              "string",
                                                              "number",
                                                              "boolean"
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "null"
                                                        }
                                                      ]
                                                    },
                                                    "file_id": {
                                                      "type": "string"
                                                    },
                                                    "filename": {
                                                      "type": "string"
                                                    },
                                                    "score": {
                                                      "type": "number"
                                                    },
                                                    "text": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "queries",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "button": {
                                                    "type": "string",
                                                    "enum": [
                                                      "left",
                                                      "right",
                                                      "wheel",
                                                      "back",
                                                      "forward"
                                                    ],
                                                    "description": "Indicates which mouse button was pressed during the click."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "click",
                                                    "description": "Specifies the event type. For a click action, this property is always set to click."
                                                  },
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The x-coordinate where the click occurred."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate where the click occurred."
                                                  }
                                                },
                                                "required": [
                                                  "button",
                                                  "type",
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A click action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "double_click",
                                                    "description": "Specifies the event type. For a double click action, this property is always set to double_click."
                                                  },
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The x-coordinate where the double click occurred.."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate where the double click occurred."
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A double click action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "x": {
                                                          "type": "integer",
                                                          "description": "The y-coordinate."
                                                        },
                                                        "y": {
                                                          "type": "integer",
                                                          "description": "The y-coordinate."
                                                        }
                                                      },
                                                      "required": [
                                                        "x",
                                                        "y"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    "description": "An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "drag",
                                                    "description": "Specifies the event type. For a drag action, this property is always set to drag."
                                                  }
                                                },
                                                "required": [
                                                  "path",
                                                  "type"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A drag action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "keys": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "description": "The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "keypress",
                                                    "description": "Specifies the event type. For a keypress action, this property is always set to keypress."
                                                  }
                                                },
                                                "required": [
                                                  "keys",
                                                  "type"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A collection of keypresses the model would like to perform."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "move",
                                                    "description": "Specifies the event type. For a move action, this property is always set to move."
                                                  },
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The x-coordinate to move to."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate to move to."
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A mouse move action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "screenshot",
                                                    "description": "Specifies the event type. For a screenshot action, this property is always set to screenshot."
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A screenshot action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "scroll",
                                                    "description": "Specifies the event type. For a scroll action, this property is always set to scroll."
                                                  },
                                                  "scroll_x": {
                                                    "type": "integer",
                                                    "description": "The horizontal scroll distance."
                                                  },
                                                  "scroll_y": {
                                                    "type": "integer",
                                                    "description": "The vertical scroll distance."
                                                  },
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The x-coordinate where the scroll occurred."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate where the scroll occurred."
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "scroll_x",
                                                  "scroll_y",
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A scroll action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "type",
                                                    "description": "Specifies the event type. For a type action, this property is always set to type."
                                                  },
                                                  "text": {
                                                    "type": "string",
                                                    "description": "The text to type."
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "text"
                                                ],
                                                "additionalProperties": false,
                                                "description": "An action to type in text."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "wait",
                                                    "description": "Specifies the event type. For a wait action, this property is always set to wait."
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A wait action."
                                              }
                                            ]
                                          },
                                          "call_id": {
                                            "type": "string",
                                            "description": "An identifier used when responding to the tool call with output."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the computer call."
                                          },
                                          "pending_safety_checks": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "code": {
                                                  "type": "string",
                                                  "description": "The type of the pending safety check."
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "description": "The ID of the pending safety check."
                                                },
                                                "message": {
                                                  "type": "string",
                                                  "description": "Details about the pending safety check."
                                                }
                                              },
                                              "required": [
                                                "code",
                                                "id",
                                                "message"
                                              ],
                                              "additionalProperties": false
                                            },
                                            "description": "The pending safety checks for the computer call."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the item."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "computer_call",
                                            "description": "The type of the computer call. Always computer_call."
                                          }
                                        },
                                        "required": [
                                          "action",
                                          "call_id",
                                          "id",
                                          "pending_safety_checks",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "call_id": {
                                            "type": "string",
                                            "description": "The ID of the computer tool call that produced the output."
                                          },
                                          "output": {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "computer_screenshot",
                                                "description": "Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot."
                                              },
                                              "image_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "The URL of the screenshot image."
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false,
                                            "description": "A computer screenshot image used with the computer use tool."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "computer_call_output",
                                            "description": "The type of the computer tool call output. Always computer_call_output."
                                          },
                                          "acknowledged_safety_checks": {
                                            "anyOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "string",
                                                      "description": "The ID of the pending safety check."
                                                    },
                                                    "code": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ],
                                                      "description": "The type of the pending safety check."
                                                    },
                                                    "message": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ],
                                                      "description": "Details about the pending safety check."
                                                    }
                                                  },
                                                  "required": [
                                                    "id"
                                                  ],
                                                  "additionalProperties": false
                                                }
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The safety checks reported by the API that have been acknowledged by the developer."
                                          },
                                          "id": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The ID of the computer tool call output."
                                          },
                                          "status": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "in_progress",
                                                  "completed",
                                                  "incomplete"
                                                ]
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The status of the message input."
                                          }
                                        },
                                        "required": [
                                          "call_id",
                                          "output",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the web search tool call."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "searching",
                                              "failed"
                                            ],
                                            "description": "The status of the web search tool call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "web_search_call",
                                            "description": "The type of the web search tool call. Always web_search_call."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "arguments": {
                                            "type": "string",
                                            "description": "A JSON string of the arguments to pass to the function."
                                          },
                                          "call_id": {
                                            "type": "string",
                                            "description": "The unique ID of the function tool call generated by the model."
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the function to run. "
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "function_call",
                                            "description": "The type of the function tool call. Always function_call."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the function tool call."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the item. "
                                          }
                                        },
                                        "required": [
                                          "arguments",
                                          "call_id",
                                          "name",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "call_id": {
                                            "type": "string",
                                            "description": "The unique ID of the function tool call generated by the model."
                                          },
                                          "output": {
                                            "type": "string",
                                            "description": "A JSON string of the output of the function tool call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "function_call_output",
                                            "description": "The type of the function tool call output. Always function_call_output."
                                          },
                                          "id": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The unique ID of the function tool call output. Populated when this item is returned via API."
                                          },
                                          "status": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "in_progress",
                                                  "completed",
                                                  "incomplete"
                                                ]
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The status of the item. "
                                          }
                                        },
                                        "required": [
                                          "call_id",
                                          "output",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique identifier of the reasoning content."
                                          },
                                          "summary": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "text": {
                                                  "type": "string",
                                                  "description": "A short summary of the reasoning used by the model when generating the response."
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "const": "summary_text",
                                                  "description": "The type of the object. Always summary_text."
                                                }
                                              },
                                              "required": [
                                                "text",
                                                "type"
                                              ],
                                              "additionalProperties": false
                                            },
                                            "description": "Reasoning text contents."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "reasoning",
                                            "description": "The type of the object. Always reasoning."
                                          },
                                          "encrypted_content": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the item."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "summary",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "result": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "failed",
                                              "generating"
                                            ]
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "image_generation_call"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "result",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The code to run, or null if not available."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the code interpreter tool call."
                                          },
                                          "outputs": {
                                            "anyOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "logs": {
                                                          "type": "string",
                                                          "description": "The logs output from the code interpreter."
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "const": "logs",
                                                          "description": "The type of the output. Always 'logs'."
                                                        }
                                                      },
                                                      "required": [
                                                        "logs",
                                                        "type"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "image"
                                                        },
                                                        "url": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "url"
                                                      ],
                                                      "additionalProperties": false
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The outputs generated by the code interpreter, such as logs or images. Can be null if no outputs are available."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete",
                                              "interpreting",
                                              "failed"
                                            ],
                                            "description": "The status of the code interpreter tool call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "code_interpreter_call",
                                            "description": "The type of the code interpreter tool call. Always code_interpreter_call."
                                          },
                                          "container_id": {
                                            "type": "string",
                                            "description": "The ID of the container used to run the code."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "status",
                                          "type",
                                          "container_id"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "object",
                                            "properties": {
                                              "command": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "The command to run."
                                              },
                                              "env": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "description": "Environment variables to set for the command."
                                              },
                                              "type": {
                                                "type": "string",
                                                "const": "exec",
                                                "description": "The type of the local shell action. Always exec."
                                              },
                                              "timeout_ms": {
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "null"
                                                  }
                                                ],
                                                "description": "Optional timeout in milliseconds for the command."
                                              },
                                              "user": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Optional user to run the command as."
                                              },
                                              "working_directory": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Optional working directory to run the command in."
                                              }
                                            },
                                            "required": [
                                              "command",
                                              "env",
                                              "type"
                                            ],
                                            "additionalProperties": false,
                                            "description": "Execute a shell command on the server."
                                          },
                                          "call_id": {
                                            "type": "string",
                                            "description": "The unique ID of the local shell tool call generated by the model."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the local shell call."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the local shell call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "local_shell_call",
                                            "description": "The type of the local shell call. Always local_shell_call."
                                          }
                                        },
                                        "required": [
                                          "action",
                                          "call_id",
                                          "id",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the local shell tool call generated by the model."
                                          },
                                          "output": {
                                            "type": "string",
                                            "description": "A JSON string of the output of the local shell tool call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "local_shell_call_output",
                                            "description": "The type of the local shell tool call output. Always local_shell_call_output."
                                          },
                                          "status": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "in_progress",
                                                  "completed",
                                                  "incomplete"
                                                ]
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The status of the item."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "output",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the list."
                                          },
                                          "server_label": {
                                            "type": "string",
                                            "description": "The label of the MCP server."
                                          },
                                          "tools": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "input_schema": {},
                                                "name": {
                                                  "type": "string",
                                                  "description": "The name of the tool."
                                                },
                                                "annotations": {},
                                                "description": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ],
                                                  "description": "The description of the tool."
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ],
                                              "additionalProperties": false
                                            }
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "mcp_list_tools",
                                            "description": "The type of the item. Always mcp_list_tools."
                                          },
                                          "error": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "Error message if the server could not list tools."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "server_label",
                                          "tools",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "arguments": {
                                            "type": "string",
                                            "description": "A JSON string of arguments for the tool."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the approval request."
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "server_label": {
                                            "type": "string",
                                            "description": "The name of the tool to run."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "mcp_approval_request",
                                            "description": "The type of the item. Always mcp_approval_request."
                                          }
                                        },
                                        "required": [
                                          "arguments",
                                          "id",
                                          "name",
                                          "server_label",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "approval_request_id": {
                                            "type": "string",
                                            "description": "The ID of the approval request being answered."
                                          },
                                          "approve": {
                                            "type": "boolean",
                                            "description": "Whether the request was approved."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "mcp_approval_response",
                                            "description": "The type of the item. Always mcp_approval_response."
                                          },
                                          "id": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The unique ID of the approval response"
                                          },
                                          "reason": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "Optional reason for the decision."
                                          }
                                        },
                                        "required": [
                                          "approval_request_id",
                                          "approve",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "arguments": {
                                            "type": "string",
                                            "description": "A JSON string of the arguments passed to the tool."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the tool call."
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the tool that was run."
                                          },
                                          "server_label": {
                                            "type": "string",
                                            "description": "The label of the MCP server running the tool."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "mcp_call",
                                            "description": "The type of the item. Always mcp_call."
                                          },
                                          "error": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The error from the tool call, if any."
                                          },
                                          "output": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The output from the tool call."
                                          }
                                        },
                                        "required": [
                                          "arguments",
                                          "id",
                                          "name",
                                          "server_label",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the item to reference."
                                      },
                                      "type": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "const": "item_reference"
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "The type of item to reference. Always item_reference."
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ],
                                    "additionalProperties": false,
                                    "description": "An internal identifier for an item to reference."
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "max_output_tokens": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "model": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string",
                      "const": "response"
                    },
                    "output": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/role"
                              },
                              "type": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/type"
                              },
                              "content": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/content"
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "content"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/id"
                              },
                              "queries": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/queries"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "searching",
                                  "incomplete",
                                  "failed",
                                  "completed"
                                ]
                              },
                              "type": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/type"
                              },
                              "results": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/results"
                              }
                            },
                            "required": [
                              "id",
                              "queries",
                              "status",
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/3"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/4"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/5"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/6"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/8"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/9"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/10"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/11"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/id"
                              },
                              "server_label": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/server_label"
                              },
                              "tools": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/tools/items"
                                }
                              },
                              "type": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/type"
                              },
                              "error": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/error"
                              }
                            },
                            "required": [
                              "id",
                              "server_label",
                              "tools",
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/14"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/16"
                          }
                        ]
                      }
                    },
                    "output_text": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "parallel_tool_calls": {
                      "type": "boolean"
                    },
                    "previous_response_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "prompt": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "variables": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "version": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "reasoning": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "effort": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "low",
                                    "medium",
                                    "high"
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
                            },
                            "summary": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto",
                                    "concise",
                                    "detailed"
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process."
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "service_tier": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "completed",
                        "failed",
                        "in_progress",
                        "cancelled",
                        "queued",
                        "incomplete"
                      ]
                    },
                    "temperature": {
                      "anyOf": [
                        {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 2
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "text": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "format": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "text",
                                      "description": "The type of response format being defined. Always text."
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "Default response format. Used to generate text responses."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "json_object",
                                      "description": "The type of response format being defined. Always json_object."
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "An older method of generating JSON responses. Using json_schema is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                                    },
                                    "schema": {
                                      "type": "object",
                                      "additionalProperties": {},
                                      "description": "The schema for the response format, described as a JSON Schema object."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "json_schema"
                                    },
                                    "strict": {
                                      "type": [
                                        "boolean",
                                        "null"
                                      ],
                                      "description": "Whether to enable strict schema adherence when generating the output. If set to True, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is True."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A description of what the response format is for, used by the model to determine how to respond in the format."
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "schema",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "JSON Schema response format. Used to generate structured JSON responses."
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "tool_choice": {
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "none",
                                "auto",
                                "required"
                              ],
                              "description": "Controls which (if any) tool is called by the model.\n\nnone means the model will not call any tool and instead generates a message.\n\nauto means the model can pick between generating a message or calling one or more tools.\n\nrequired means the model must call one or more tools."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "web_search_preview",
                                    "web_search_preview_2025_03_11",
                                    "computer_use_preview",
                                    "code_interpreter",
                                    "mcp",
                                    "file_search",
                                    "image_generation"
                                  ]
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "additionalProperties": false,
                              "description": "Indicates that the model should use a built-in tool to generate a response."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the function to call."
                                },
                                "type": {
                                  "type": "string",
                                  "const": "function",
                                  "description": "For function calling, the type is always function."
                                }
                              },
                              "required": [
                                "name",
                                "type"
                              ],
                              "additionalProperties": false,
                              "description": "Use this option to force the model to call a specific function."
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "tools": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "web_search_preview",
                                  "web_search_preview_2025_03_11"
                                ],
                                "description": "The type of the web search tool. One of web_search_preview or web_search_preview_2025_03_11."
                              },
                              "search_context_size": {
                                "type": "string",
                                "enum": [
                                  "low",
                                  "medium",
                                  "high"
                                ],
                                "description": "High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default."
                              },
                              "user_location": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "approximate",
                                        "description": "The type of location approximation. Always approximate."
                                      },
                                      "city": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "Free text input for the city of the user, e.g. San Francisco."
                                      },
                                      "country": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "The two-letter ISO country code of the user, e.g. US."
                                      },
                                      "region": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "Free text input for the region of the user, e.g. California."
                                      },
                                      "timezone": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "The IANA timezone of the user, e.g. America/Los_Angeles."
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "The user's location"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "This tool searches the web for relevant results to use in a response."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "display_height": {
                                "type": "integer",
                                "description": "The height of the computer display."
                              },
                              "display_width": {
                                "type": "integer",
                                "description": "The width of the computer display."
                              },
                              "environment": {
                                "type": "string",
                                "enum": [
                                  "windows",
                                  "mac",
                                  "linux",
                                  "ubuntu",
                                  "browser"
                                ],
                                "description": "The type of computer environment to control."
                              },
                              "type": {
                                "type": "string",
                                "const": "computer_use_preview",
                                "description": "The type of the computer use tool. Always computer_use_preview."
                              }
                            },
                            "required": [
                              "display_height",
                              "display_width",
                              "environment",
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "A tool that controls a virtual computer."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "server_label": {
                                "type": "string",
                                "description": "A label for this MCP server, used to identify it in tool calls."
                              },
                              "server_url": {
                                "type": "string",
                                "description": "The URL for the MCP server."
                              },
                              "type": {
                                "type": "string",
                                "const": "mcp",
                                "description": "The type of the MCP tool. Always mcp."
                              },
                              "allowed_tools": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "A string array of allowed tool names"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "tool_names": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "description": "List of allowed tool names."
                                          }
                                        },
                                        "additionalProperties": false,
                                        "description": "A filter object to specify which tools are allowed."
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "List of allowed tool names or a filter object."
                              },
                              "headers": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "Optional HTTP headers to send to the MCP server. Use for authentication or other purposes."
                              },
                              "require_approval": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "always": {
                                            "type": "object",
                                            "properties": {
                                              "tool_names": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "List of tools that require approval."
                                              }
                                            },
                                            "additionalProperties": false,
                                            "description": "A list of tools that always require approval."
                                          },
                                          "never": {
                                            "type": "object",
                                            "properties": {
                                              "tool_names": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "List of tools that do not require approval."
                                              }
                                            },
                                            "additionalProperties": false,
                                            "description": "A list of tools that never require approval."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "Specify which of the MCP server's tools require approval."
                              }
                            },
                            "required": [
                              "server_label",
                              "server_url",
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "Give the model access to additional tools via remote Model Context Protocol (MCP) servers."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "code_interpreter",
                                "description": "The type of the code interpreter tool. Always code_interpreter."
                              },
                              "container": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "auto"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ],
                                "description": "The container ID."
                              }
                            },
                            "required": [
                              "type",
                              "container"
                            ],
                            "additionalProperties": false,
                            "description": "A tool that runs Python code to help generate a response to a prompt."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "local_shell",
                                "description": "The type of the local shell tool. Always local_shell."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "A tool that allows the model to execute shell commands in a local environment."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the function to call."
                              },
                              "parameters": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": {}
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "A JSON schema object describing the parameters of the function."
                              },
                              "strict": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Whether to enforce strict parameter validation."
                              },
                              "type": {
                                "type": "string",
                                "const": "function",
                                "description": "The type of the function tool. Always function."
                              },
                              "description": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "not": {}
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "A description of the function. Used by the model to determine whether or not to call the function."
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "file_search"
                              },
                              "vector_store_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "filters": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "eq",
                                          "ne",
                                          "gt",
                                          "gte",
                                          "lt",
                                          "lte"
                                        ]
                                      },
                                      "value": {
                                        "type": [
                                          "string",
                                          "number",
                                          "boolean"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "type",
                                      "value"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "and",
                                          "or"
                                        ]
                                      },
                                      "filters": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "$ref": "#/properties/tools/items/anyOf/6/properties/filters/anyOf/0"
                                            },
                                            {
                                              "$ref": "#/properties/tools/items/anyOf/6/properties/filters/anyOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "filters"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              "max_num_results": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 50
                              },
                              "ranking_options": {
                                "type": "object",
                                "properties": {
                                  "ranker": {
                                    "type": "string",
                                    "enum": [
                                      "auto",
                                      "default-2024-11-15"
                                    ]
                                  },
                                  "score_threshold": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 1
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "type",
                              "vector_store_ids"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "image_generation"
                              },
                              "background": {
                                "type": "string",
                                "enum": [
                                  "transparent",
                                  "opaque",
                                  "auto"
                                ]
                              },
                              "input_image_mask": {
                                "type": "object",
                                "properties": {
                                  "file_id": {
                                    "type": "string"
                                  },
                                  "image_url": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "model": {
                                "type": "string",
                                "const": "gpt-image-1"
                              },
                              "moderation": {
                                "type": "string",
                                "enum": [
                                  "auto",
                                  "low"
                                ]
                              },
                              "output_compression": {
                                "type": "number"
                              },
                              "output_format": {
                                "type": "string",
                                "enum": [
                                  "png",
                                  "webp",
                                  "jpeg"
                                ]
                              },
                              "partial_images": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 3
                              },
                              "quality": {
                                "type": "string",
                                "enum": [
                                  "low",
                                  "medium",
                                  "high",
                                  "auto"
                                ]
                              },
                              "size": {
                                "type": "string",
                                "enum": [
                                  "1024x1024",
                                  "1024x1536",
                                  "1536x1024",
                                  "auto"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "top_p": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "truncation": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "auto",
                            "disabled"
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "input_tokens": {
                          "type": "integer"
                        },
                        "input_tokens_details": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "cached_tokens": {
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "cached_tokens"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "output_tokens": {
                          "type": "integer"
                        },
                        "output_tokens_details": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "reasoning_tokens": {
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "reasoning_tokens"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "total_tokens": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "input_tokens",
                        "output_tokens",
                        "total_tokens"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "model",
                    "object",
                    "output",
                    "parallel_tool_calls"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                }
              },
              "text/event-stream": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.audio.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.audio.done"
                        }
                      },
                      "required": [
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.audio.transcript.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.audio.transcript.done"
                        }
                      },
                      "required": [
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call_code.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call_code.done"
                        }
                      },
                      "required": [
                        "code",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call.interpreting"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "background": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "created_at": {
                              "type": "number"
                            },
                            "error": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "message": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "code",
                                    "message"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "id": {
                              "type": "string"
                            },
                            "incomplete_details": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "reason": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "instructions": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "message",
                                                "description": "The type of the message input. Always message."
                                              },
                                              "role": {
                                                "type": "string",
                                                "enum": [
                                                  "user",
                                                  "assistant",
                                                  "system",
                                                  "developer"
                                                ],
                                                "description": "The role of the message input."
                                              },
                                              "content": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "description": "A text input to the model."
                                                  },
                                                  {
                                                    "type": "array",
                                                    "items": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "input_text",
                                                              "description": "The type of the input item. Always input_text."
                                                            },
                                                            "text": {
                                                              "type": "string",
                                                              "description": "The text input to the model."
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "text"
                                                          ],
                                                          "additionalProperties": false,
                                                          "description": "A text input to the model."
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "input_image",
                                                              "description": "The type of the input item. Always input_image."
                                                            },
                                                            "detail": {
                                                              "type": "string",
                                                              "enum": [
                                                                "high",
                                                                "low",
                                                                "auto"
                                                              ],
                                                              "default": "auto",
                                                              "description": "The detail level of the image to be sent to the model. One of high, low, or auto."
                                                            },
                                                            "image_url": {
                                                              "type": [
                                                                "string",
                                                                "null"
                                                              ],
                                                              "description": "The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL."
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ],
                                                          "additionalProperties": false
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "input_file",
                                                              "description": "The type of the input item. Always input_file."
                                                            },
                                                            "file_data": {
                                                              "type": "string",
                                                              "description": "The content of the file to be sent to the model."
                                                            },
                                                            "filename": {
                                                              "type": "string",
                                                              "description": "The name of the file to be sent to the model."
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ],
                                                          "additionalProperties": false
                                                        }
                                                      ]
                                                    },
                                                    "description": "A list of one or many input items to the model, containing different content types."
                                                  }
                                                ],
                                                "description": "Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses."
                                              }
                                            },
                                            "required": [
                                              "role",
                                              "content"
                                            ],
                                            "additionalProperties": false,
                                            "description": "A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role. Messages with the assistant role are presumed to have been generated by the model in previous interactions."
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "message",
                                                    "description": "The type of the message input. Always message."
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "enum": [
                                                      "user",
                                                      "system",
                                                      "developer"
                                                    ],
                                                    "description": "The role of the message input."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of item."
                                                  },
                                                  "content": {
                                                    "type": "array",
                                                    "items": {
                                                      "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/0/properties/content/anyOf/1/items"
                                                    },
                                                    "description": "A list of one or many input items to the model, containing different content types."
                                                  }
                                                },
                                                "required": [
                                                  "role",
                                                  "content"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the output message."
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "const": "assistant",
                                                    "description": "The role of the output message. Always assistant."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the message input."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "message",
                                                    "description": "The type of the output message. Always message."
                                                  },
                                                  "content": {
                                                    "type": "array",
                                                    "items": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotations": {
                                                              "type": "array",
                                                              "items": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "end_index": {
                                                                        "type": "integer",
                                                                        "description": "The index of the last character of the URL citation in the message."
                                                                      },
                                                                      "start_index": {
                                                                        "type": "integer",
                                                                        "description": "The index of the first character of the URL citation in the message."
                                                                      },
                                                                      "title": {
                                                                        "type": "string",
                                                                        "description": "The title of the web resource."
                                                                      },
                                                                      "type": {
                                                                        "type": "string",
                                                                        "const": "url_citation",
                                                                        "description": "The type of the URL citation. Always url_citation."
                                                                      },
                                                                      "url": {
                                                                        "type": "string",
                                                                        "format": "uri",
                                                                        "description": "The URL of the web resource."
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "end_index",
                                                                      "start_index",
                                                                      "title",
                                                                      "type",
                                                                      "url"
                                                                    ],
                                                                    "additionalProperties": false,
                                                                    "description": "A citation for a web resource used to generate a model response."
                                                                  },
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "file_id": {
                                                                        "type": "string"
                                                                      },
                                                                      "index": {
                                                                        "type": "integer"
                                                                      },
                                                                      "type": {
                                                                        "type": "string",
                                                                        "const": "file_citation"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "file_id",
                                                                      "index",
                                                                      "type"
                                                                    ],
                                                                    "additionalProperties": false
                                                                  },
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "container_id": {
                                                                        "type": "string"
                                                                      },
                                                                      "start_index": {
                                                                        "type": "integer"
                                                                      },
                                                                      "end_index": {
                                                                        "type": "integer"
                                                                      },
                                                                      "file_id": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "type": "string",
                                                                        "const": "container_file_citation"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "container_id",
                                                                      "start_index",
                                                                      "end_index",
                                                                      "file_id",
                                                                      "type"
                                                                    ],
                                                                    "additionalProperties": false
                                                                  },
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "file_id": {
                                                                        "type": "string"
                                                                      },
                                                                      "index": {
                                                                        "type": "integer"
                                                                      },
                                                                      "type": {
                                                                        "type": "string",
                                                                        "const": "file_path"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "file_id",
                                                                      "index",
                                                                      "type"
                                                                    ],
                                                                    "additionalProperties": false
                                                                  }
                                                                ]
                                                              },
                                                              "description": "The annotations of the text output."
                                                            },
                                                            "text": {
                                                              "type": "string",
                                                              "description": "The text output from the model."
                                                            },
                                                            "type": {
                                                              "type": "string",
                                                              "const": "output_text",
                                                              "description": "The type of the output text. Always output_text."
                                                            },
                                                            "logprobs": {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "bytes": {
                                                                    "type": "array",
                                                                    "items": {
                                                                      "type": "integer"
                                                                    }
                                                                  },
                                                                  "logprob": {
                                                                    "type": "number"
                                                                  },
                                                                  "token": {
                                                                    "type": "string"
                                                                  },
                                                                  "top_logprobs": {
                                                                    "type": "array",
                                                                    "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                        "bytes": {
                                                                          "type": "array",
                                                                          "items": {
                                                                            "type": "integer"
                                                                          }
                                                                        },
                                                                        "logprob": {
                                                                          "type": "number"
                                                                        },
                                                                        "token": {
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "bytes",
                                                                        "logprob",
                                                                        "token"
                                                                      ],
                                                                      "additionalProperties": false
                                                                    }
                                                                  }
                                                                },
                                                                "required": [
                                                                  "bytes",
                                                                  "logprob",
                                                                  "token",
                                                                  "top_logprobs"
                                                                ],
                                                                "additionalProperties": false
                                                              }
                                                            }
                                                          },
                                                          "required": [
                                                            "annotations",
                                                            "text",
                                                            "type"
                                                          ],
                                                          "additionalProperties": false
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "refusal": {
                                                              "type": "string",
                                                              "description": "The refusal explanationfrom the model."
                                                            },
                                                            "type": {
                                                              "type": "string",
                                                              "const": "refusal",
                                                              "description": "The type of the refusal. Always refusal."
                                                            }
                                                          },
                                                          "required": [
                                                            "refusal",
                                                            "type"
                                                          ],
                                                          "additionalProperties": false
                                                        }
                                                      ],
                                                      "description": "The content of the output message."
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "role",
                                                  "status",
                                                  "type",
                                                  "content"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "queries": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "searching",
                                                      "incomplete",
                                                      "failed",
                                                      "completed"
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "file_search_call"
                                                  },
                                                  "results": {
                                                    "anyOf": [
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "attributes": {
                                                              "anyOf": [
                                                                {
                                                                  "type": "object",
                                                                  "additionalProperties": {
                                                                    "type": [
                                                                      "string",
                                                                      "number",
                                                                      "boolean"
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "null"
                                                                }
                                                              ]
                                                            },
                                                            "file_id": {
                                                              "type": "string"
                                                            },
                                                            "filename": {
                                                              "type": "string"
                                                            },
                                                            "score": {
                                                              "type": "number"
                                                            },
                                                            "text": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "queries",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "action": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "button": {
                                                            "type": "string",
                                                            "enum": [
                                                              "left",
                                                              "right",
                                                              "wheel",
                                                              "back",
                                                              "forward"
                                                            ],
                                                            "description": "Indicates which mouse button was pressed during the click."
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "const": "click",
                                                            "description": "Specifies the event type. For a click action, this property is always set to click."
                                                          },
                                                          "x": {
                                                            "type": "integer",
                                                            "description": "The x-coordinate where the click occurred."
                                                          },
                                                          "y": {
                                                            "type": "integer",
                                                            "description": "The y-coordinate where the click occurred."
                                                          }
                                                        },
                                                        "required": [
                                                          "button",
                                                          "type",
                                                          "x",
                                                          "y"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A click action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "double_click",
                                                            "description": "Specifies the event type. For a double click action, this property is always set to double_click."
                                                          },
                                                          "x": {
                                                            "type": "integer",
                                                            "description": "The x-coordinate where the double click occurred.."
                                                          },
                                                          "y": {
                                                            "type": "integer",
                                                            "description": "The y-coordinate where the double click occurred."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "x",
                                                          "y"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A double click action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "path": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "x": {
                                                                  "type": "integer",
                                                                  "description": "The y-coordinate."
                                                                },
                                                                "y": {
                                                                  "type": "integer",
                                                                  "description": "The y-coordinate."
                                                                }
                                                              },
                                                              "required": [
                                                                "x",
                                                                "y"
                                                              ],
                                                              "additionalProperties": false
                                                            },
                                                            "description": "An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg"
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "const": "drag",
                                                            "description": "Specifies the event type. For a drag action, this property is always set to drag."
                                                          }
                                                        },
                                                        "required": [
                                                          "path",
                                                          "type"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A drag action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "keys": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "description": "The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key."
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "const": "keypress",
                                                            "description": "Specifies the event type. For a keypress action, this property is always set to keypress."
                                                          }
                                                        },
                                                        "required": [
                                                          "keys",
                                                          "type"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A collection of keypresses the model would like to perform."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "move",
                                                            "description": "Specifies the event type. For a move action, this property is always set to move."
                                                          },
                                                          "x": {
                                                            "type": "integer",
                                                            "description": "The x-coordinate to move to."
                                                          },
                                                          "y": {
                                                            "type": "integer",
                                                            "description": "The y-coordinate to move to."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "x",
                                                          "y"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A mouse move action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "screenshot",
                                                            "description": "Specifies the event type. For a screenshot action, this property is always set to screenshot."
                                                          }
                                                        },
                                                        "required": [
                                                          "type"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A screenshot action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "scroll",
                                                            "description": "Specifies the event type. For a scroll action, this property is always set to scroll."
                                                          },
                                                          "scroll_x": {
                                                            "type": "integer",
                                                            "description": "The horizontal scroll distance."
                                                          },
                                                          "scroll_y": {
                                                            "type": "integer",
                                                            "description": "The vertical scroll distance."
                                                          },
                                                          "x": {
                                                            "type": "integer",
                                                            "description": "The x-coordinate where the scroll occurred."
                                                          },
                                                          "y": {
                                                            "type": "integer",
                                                            "description": "The y-coordinate where the scroll occurred."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "scroll_x",
                                                          "scroll_y",
                                                          "x",
                                                          "y"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A scroll action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "type",
                                                            "description": "Specifies the event type. For a type action, this property is always set to type."
                                                          },
                                                          "text": {
                                                            "type": "string",
                                                            "description": "The text to type."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "text"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "An action to type in text."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "wait",
                                                            "description": "Specifies the event type. For a wait action, this property is always set to wait."
                                                          }
                                                        },
                                                        "required": [
                                                          "type"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A wait action."
                                                      }
                                                    ]
                                                  },
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "An identifier used when responding to the tool call with output."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the computer call."
                                                  },
                                                  "pending_safety_checks": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The type of the pending safety check."
                                                        },
                                                        "id": {
                                                          "type": "string",
                                                          "description": "The ID of the pending safety check."
                                                        },
                                                        "message": {
                                                          "type": "string",
                                                          "description": "Details about the pending safety check."
                                                        }
                                                      },
                                                      "required": [
                                                        "code",
                                                        "id",
                                                        "message"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    "description": "The pending safety checks for the computer call."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the item."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "computer_call",
                                                    "description": "The type of the computer call. Always computer_call."
                                                  }
                                                },
                                                "required": [
                                                  "action",
                                                  "call_id",
                                                  "id",
                                                  "pending_safety_checks",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "The ID of the computer tool call that produced the output."
                                                  },
                                                  "output": {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "const": "computer_screenshot",
                                                        "description": "Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot."
                                                      },
                                                      "image_url": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "The URL of the screenshot image."
                                                      }
                                                    },
                                                    "required": [
                                                      "type"
                                                    ],
                                                    "additionalProperties": false,
                                                    "description": "A computer screenshot image used with the computer use tool."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "computer_call_output",
                                                    "description": "The type of the computer tool call output. Always computer_call_output."
                                                  },
                                                  "acknowledged_safety_checks": {
                                                    "anyOf": [
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string",
                                                              "description": "The ID of the pending safety check."
                                                            },
                                                            "code": {
                                                              "type": [
                                                                "string",
                                                                "null"
                                                              ],
                                                              "description": "The type of the pending safety check."
                                                            },
                                                            "message": {
                                                              "type": [
                                                                "string",
                                                                "null"
                                                              ],
                                                              "description": "Details about the pending safety check."
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ],
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The safety checks reported by the API that have been acknowledged by the developer."
                                                  },
                                                  "id": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The ID of the computer tool call output."
                                                  },
                                                  "status": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "in_progress",
                                                          "completed",
                                                          "incomplete"
                                                        ]
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The status of the message input."
                                                  }
                                                },
                                                "required": [
                                                  "call_id",
                                                  "output",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the web search tool call."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "searching",
                                                      "failed"
                                                    ],
                                                    "description": "The status of the web search tool call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "web_search_call",
                                                    "description": "The type of the web search tool call. Always web_search_call."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "arguments": {
                                                    "type": "string",
                                                    "description": "A JSON string of the arguments to pass to the function."
                                                  },
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the function tool call generated by the model."
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the function to run. "
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "function_call",
                                                    "description": "The type of the function tool call. Always function_call."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the function tool call."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the item. "
                                                  }
                                                },
                                                "required": [
                                                  "arguments",
                                                  "call_id",
                                                  "name",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the function tool call generated by the model."
                                                  },
                                                  "output": {
                                                    "type": "string",
                                                    "description": "A JSON string of the output of the function tool call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "function_call_output",
                                                    "description": "The type of the function tool call output. Always function_call_output."
                                                  },
                                                  "id": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The unique ID of the function tool call output. Populated when this item is returned via API."
                                                  },
                                                  "status": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "in_progress",
                                                          "completed",
                                                          "incomplete"
                                                        ]
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The status of the item. "
                                                  }
                                                },
                                                "required": [
                                                  "call_id",
                                                  "output",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique identifier of the reasoning content."
                                                  },
                                                  "summary": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "text": {
                                                          "type": "string",
                                                          "description": "A short summary of the reasoning used by the model when generating the response."
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "const": "summary_text",
                                                          "description": "The type of the object. Always summary_text."
                                                        }
                                                      },
                                                      "required": [
                                                        "text",
                                                        "type"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    "description": "Reasoning text contents."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "reasoning",
                                                    "description": "The type of the object. Always reasoning."
                                                  },
                                                  "encrypted_content": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the item."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "summary",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "result": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "failed",
                                                      "generating"
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "image_generation_call"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "result",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The code to run, or null if not available."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the code interpreter tool call."
                                                  },
                                                  "outputs": {
                                                    "anyOf": [
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "anyOf": [
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "logs": {
                                                                  "type": "string",
                                                                  "description": "The logs output from the code interpreter."
                                                                },
                                                                "type": {
                                                                  "type": "string",
                                                                  "const": "logs",
                                                                  "description": "The type of the output. Always 'logs'."
                                                                }
                                                              },
                                                              "required": [
                                                                "logs",
                                                                "type"
                                                              ],
                                                              "additionalProperties": false
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string",
                                                                  "const": "image"
                                                                },
                                                                "url": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "type",
                                                                "url"
                                                              ],
                                                              "additionalProperties": false
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The outputs generated by the code interpreter, such as logs or images. Can be null if no outputs are available."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete",
                                                      "interpreting",
                                                      "failed"
                                                    ],
                                                    "description": "The status of the code interpreter tool call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "code_interpreter_call",
                                                    "description": "The type of the code interpreter tool call. Always code_interpreter_call."
                                                  },
                                                  "container_id": {
                                                    "type": "string",
                                                    "description": "The ID of the container used to run the code."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "status",
                                                  "type",
                                                  "container_id"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "action": {
                                                    "type": "object",
                                                    "properties": {
                                                      "command": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "description": "The command to run."
                                                      },
                                                      "env": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "type": "string"
                                                        },
                                                        "description": "Environment variables to set for the command."
                                                      },
                                                      "type": {
                                                        "type": "string",
                                                        "const": "exec",
                                                        "description": "The type of the local shell action. Always exec."
                                                      },
                                                      "timeout_ms": {
                                                        "anyOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "null"
                                                          }
                                                        ],
                                                        "description": "Optional timeout in milliseconds for the command."
                                                      },
                                                      "user": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ],
                                                        "description": "Optional user to run the command as."
                                                      },
                                                      "working_directory": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ],
                                                        "description": "Optional working directory to run the command in."
                                                      }
                                                    },
                                                    "required": [
                                                      "command",
                                                      "env",
                                                      "type"
                                                    ],
                                                    "additionalProperties": false,
                                                    "description": "Execute a shell command on the server."
                                                  },
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the local shell tool call generated by the model."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the local shell call."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the local shell call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "local_shell_call",
                                                    "description": "The type of the local shell call. Always local_shell_call."
                                                  }
                                                },
                                                "required": [
                                                  "action",
                                                  "call_id",
                                                  "id",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the local shell tool call generated by the model."
                                                  },
                                                  "output": {
                                                    "type": "string",
                                                    "description": "A JSON string of the output of the local shell tool call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "local_shell_call_output",
                                                    "description": "The type of the local shell tool call output. Always local_shell_call_output."
                                                  },
                                                  "status": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "in_progress",
                                                          "completed",
                                                          "incomplete"
                                                        ]
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The status of the item."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "output",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the list."
                                                  },
                                                  "server_label": {
                                                    "type": "string",
                                                    "description": "The label of the MCP server."
                                                  },
                                                  "tools": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "input_schema": {},
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The name of the tool."
                                                        },
                                                        "annotations": {},
                                                        "description": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ],
                                                          "description": "The description of the tool."
                                                        }
                                                      },
                                                      "required": [
                                                        "name"
                                                      ],
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "mcp_list_tools",
                                                    "description": "The type of the item. Always mcp_list_tools."
                                                  },
                                                  "error": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "Error message if the server could not list tools."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "server_label",
                                                  "tools",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "arguments": {
                                                    "type": "string",
                                                    "description": "A JSON string of arguments for the tool."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the approval request."
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "server_label": {
                                                    "type": "string",
                                                    "description": "The name of the tool to run."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "mcp_approval_request",
                                                    "description": "The type of the item. Always mcp_approval_request."
                                                  }
                                                },
                                                "required": [
                                                  "arguments",
                                                  "id",
                                                  "name",
                                                  "server_label",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "approval_request_id": {
                                                    "type": "string",
                                                    "description": "The ID of the approval request being answered."
                                                  },
                                                  "approve": {
                                                    "type": "boolean",
                                                    "description": "Whether the request was approved."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "mcp_approval_response",
                                                    "description": "The type of the item. Always mcp_approval_response."
                                                  },
                                                  "id": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The unique ID of the approval response"
                                                  },
                                                  "reason": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "Optional reason for the decision."
                                                  }
                                                },
                                                "required": [
                                                  "approval_request_id",
                                                  "approve",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "arguments": {
                                                    "type": "string",
                                                    "description": "A JSON string of the arguments passed to the tool."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the tool call."
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the tool that was run."
                                                  },
                                                  "server_label": {
                                                    "type": "string",
                                                    "description": "The label of the MCP server running the tool."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "mcp_call",
                                                    "description": "The type of the item. Always mcp_call."
                                                  },
                                                  "error": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The error from the tool call, if any."
                                                  },
                                                  "output": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The output from the tool call."
                                                  }
                                                },
                                                "required": [
                                                  "arguments",
                                                  "id",
                                                  "name",
                                                  "server_label",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              }
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "The ID of the item to reference."
                                              },
                                              "type": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "const": "item_reference"
                                                  },
                                                  {
                                                    "type": "null"
                                                  }
                                                ],
                                                "description": "The type of item to reference. Always item_reference."
                                              }
                                            },
                                            "required": [
                                              "id"
                                            ],
                                            "additionalProperties": false,
                                            "description": "An internal identifier for an item to reference."
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "max_output_tokens": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "metadata": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "model": {
                              "type": "string"
                            },
                            "object": {
                              "type": "string",
                              "const": "response"
                            },
                            "output": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "role": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/role"
                                      },
                                      "type": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/type"
                                      },
                                      "content": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/content"
                                      }
                                    },
                                    "required": [
                                      "role",
                                      "type",
                                      "content"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/id"
                                      },
                                      "queries": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/queries"
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "in_progress",
                                          "searching",
                                          "incomplete",
                                          "failed",
                                          "completed"
                                        ]
                                      },
                                      "type": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/type"
                                      },
                                      "results": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/results"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "queries",
                                      "status",
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/3"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/4"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/5"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/6"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/8"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/9"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/10"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/11"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/id"
                                      },
                                      "server_label": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/server_label"
                                      },
                                      "tools": {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/tools/items"
                                        }
                                      },
                                      "type": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/type"
                                      },
                                      "error": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/error"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "server_label",
                                      "tools",
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/14"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/16"
                                  }
                                ]
                              }
                            },
                            "output_text": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "parallel_tool_calls": {
                              "type": "boolean"
                            },
                            "previous_response_id": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "prompt": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "variables": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "additionalProperties": {}
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "version": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "reasoning": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "effort": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
                                    },
                                    "summary": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "auto",
                                            "concise",
                                            "detailed"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process."
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "service_tier": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "completed",
                                "failed",
                                "in_progress",
                                "cancelled",
                                "queued",
                                "incomplete"
                              ]
                            },
                            "temperature": {
                              "anyOf": [
                                {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 2
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "text": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "format": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "text",
                                              "description": "The type of response format being defined. Always text."
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "Default response format. Used to generate text responses."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "json_object",
                                              "description": "The type of response format being defined. Always json_object."
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "An older method of generating JSON responses. Using json_schema is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                                            },
                                            "schema": {
                                              "type": "object",
                                              "additionalProperties": {},
                                              "description": "The schema for the response format, described as a JSON Schema object."
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "json_schema"
                                            },
                                            "strict": {
                                              "type": [
                                                "boolean",
                                                "null"
                                              ],
                                              "description": "Whether to enable strict schema adherence when generating the output. If set to True, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is True."
                                            },
                                            "description": {
                                              "type": "string",
                                              "description": "A description of what the response format is for, used by the model to determine how to respond in the format."
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "schema",
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "JSON Schema response format. Used to generate structured JSON responses."
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "tool_choice": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "auto",
                                        "required"
                                      ],
                                      "description": "Controls which (if any) tool is called by the model.\n\nnone means the model will not call any tool and instead generates a message.\n\nauto means the model can pick between generating a message or calling one or more tools.\n\nrequired means the model must call one or more tools."
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "web_search_preview",
                                            "web_search_preview_2025_03_11",
                                            "computer_use_preview",
                                            "code_interpreter",
                                            "mcp",
                                            "file_search",
                                            "image_generation"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "description": "Indicates that the model should use a built-in tool to generate a response."
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the function to call."
                                        },
                                        "type": {
                                          "type": "string",
                                          "const": "function",
                                          "description": "For function calling, the type is always function."
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "description": "Use this option to force the model to call a specific function."
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "tools": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "web_search_preview",
                                          "web_search_preview_2025_03_11"
                                        ],
                                        "description": "The type of the web search tool. One of web_search_preview or web_search_preview_2025_03_11."
                                      },
                                      "search_context_size": {
                                        "type": "string",
                                        "enum": [
                                          "low",
                                          "medium",
                                          "high"
                                        ],
                                        "description": "High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default."
                                      },
                                      "user_location": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "approximate",
                                                "description": "The type of location approximation. Always approximate."
                                              },
                                              "city": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Free text input for the city of the user, e.g. San Francisco."
                                              },
                                              "country": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "The two-letter ISO country code of the user, e.g. US."
                                              },
                                              "region": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Free text input for the region of the user, e.g. California."
                                              },
                                              "timezone": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "The IANA timezone of the user, e.g. America/Los_Angeles."
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "The user's location"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false,
                                    "description": "This tool searches the web for relevant results to use in a response."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "display_height": {
                                        "type": "integer",
                                        "description": "The height of the computer display."
                                      },
                                      "display_width": {
                                        "type": "integer",
                                        "description": "The width of the computer display."
                                      },
                                      "environment": {
                                        "type": "string",
                                        "enum": [
                                          "windows",
                                          "mac",
                                          "linux",
                                          "ubuntu",
                                          "browser"
                                        ],
                                        "description": "The type of computer environment to control."
                                      },
                                      "type": {
                                        "type": "string",
                                        "const": "computer_use_preview",
                                        "description": "The type of the computer use tool. Always computer_use_preview."
                                      }
                                    },
                                    "required": [
                                      "display_height",
                                      "display_width",
                                      "environment",
                                      "type"
                                    ],
                                    "additionalProperties": false,
                                    "description": "A tool that controls a virtual computer."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "server_label": {
                                        "type": "string",
                                        "description": "A label for this MCP server, used to identify it in tool calls."
                                      },
                                      "server_url": {
                                        "type": "string",
                                        "description": "The URL for the MCP server."
                                      },
                                      "type": {
                                        "type": "string",
                                        "const": "mcp",
                                        "description": "The type of the MCP tool. Always mcp."
                                      },
                                      "allowed_tools": {
                                        "anyOf": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "A string array of allowed tool names"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "tool_names": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "description": "List of allowed tool names."
                                                  }
                                                },
                                                "additionalProperties": false,
                                                "description": "A filter object to specify which tools are allowed."
                                              }
                                            ]
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "List of allowed tool names or a filter object."
                                      },
                                      "headers": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "Optional HTTP headers to send to the MCP server. Use for authentication or other purposes."
                                      },
                                      "require_approval": {
                                        "anyOf": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "always",
                                                  "never"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "always": {
                                                    "type": "object",
                                                    "properties": {
                                                      "tool_names": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "description": "List of tools that require approval."
                                                      }
                                                    },
                                                    "additionalProperties": false,
                                                    "description": "A list of tools that always require approval."
                                                  },
                                                  "never": {
                                                    "type": "object",
                                                    "properties": {
                                                      "tool_names": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "description": "List of tools that do not require approval."
                                                      }
                                                    },
                                                    "additionalProperties": false,
                                                    "description": "A list of tools that never require approval."
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            ]
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "Specify which of the MCP server's tools require approval."
                                      }
                                    },
                                    "required": [
                                      "server_label",
                                      "server_url",
                                      "type"
                                    ],
                                    "additionalProperties": false,
                                    "description": "Give the model access to additional tools via remote Model Context Protocol (MCP) servers."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "code_interpreter",
                                        "description": "The type of the code interpreter tool. Always code_interpreter."
                                      },
                                      "container": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "auto"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          }
                                        ],
                                        "description": "The container ID."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "container"
                                    ],
                                    "additionalProperties": false,
                                    "description": "A tool that runs Python code to help generate a response to a prompt."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "local_shell",
                                        "description": "The type of the local shell tool. Always local_shell."
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false,
                                    "description": "A tool that allows the model to execute shell commands in a local environment."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the function to call."
                                      },
                                      "parameters": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "additionalProperties": {}
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "A JSON schema object describing the parameters of the function."
                                      },
                                      "strict": {
                                        "type": [
                                          "boolean",
                                          "null"
                                        ],
                                        "description": "Whether to enforce strict parameter validation."
                                      },
                                      "type": {
                                        "type": "string",
                                        "const": "function",
                                        "description": "The type of the function tool. Always function."
                                      },
                                      "description": {
                                        "anyOf": [
                                          {
                                            "anyOf": [
                                              {
                                                "not": {}
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "A description of the function. Used by the model to determine whether or not to call the function."
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "file_search"
                                      },
                                      "vector_store_ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "filters": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "eq",
                                                  "ne",
                                                  "gt",
                                                  "gte",
                                                  "lt",
                                                  "lte"
                                                ]
                                              },
                                              "value": {
                                                "type": [
                                                  "string",
                                                  "number",
                                                  "boolean"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "key",
                                              "type",
                                              "value"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "and",
                                                  "or"
                                                ]
                                              },
                                              "filters": {
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/anyOf/9/properties/response/properties/tools/items/anyOf/6/properties/filters/anyOf/0"
                                                    },
                                                    {
                                                      "$ref": "#/anyOf/9/properties/response/properties/tools/items/anyOf/6/properties/filters/anyOf/1"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "filters"
                                            ],
                                            "additionalProperties": false
                                          }
                                        ]
                                      },
                                      "max_num_results": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 50
                                      },
                                      "ranking_options": {
                                        "type": "object",
                                        "properties": {
                                          "ranker": {
                                            "type": "string",
                                            "enum": [
                                              "auto",
                                              "default-2024-11-15"
                                            ]
                                          },
                                          "score_threshold": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "vector_store_ids"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "image_generation"
                                      },
                                      "background": {
                                        "type": "string",
                                        "enum": [
                                          "transparent",
                                          "opaque",
                                          "auto"
                                        ]
                                      },
                                      "input_image_mask": {
                                        "type": "object",
                                        "properties": {
                                          "file_id": {
                                            "type": "string"
                                          },
                                          "image_url": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "model": {
                                        "type": "string",
                                        "const": "gpt-image-1"
                                      },
                                      "moderation": {
                                        "type": "string",
                                        "enum": [
                                          "auto",
                                          "low"
                                        ]
                                      },
                                      "output_compression": {
                                        "type": "number"
                                      },
                                      "output_format": {
                                        "type": "string",
                                        "enum": [
                                          "png",
                                          "webp",
                                          "jpeg"
                                        ]
                                      },
                                      "partial_images": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 3
                                      },
                                      "quality": {
                                        "type": "string",
                                        "enum": [
                                          "low",
                                          "medium",
                                          "high",
                                          "auto"
                                        ]
                                      },
                                      "size": {
                                        "type": "string",
                                        "enum": [
                                          "1024x1024",
                                          "1024x1536",
                                          "1536x1024",
                                          "auto"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "top_p": {
                              "type": [
                                "number",
                                "null"
                              ]
                            },
                            "truncation": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto",
                                    "disabled"
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "usage": {
                              "type": "object",
                              "properties": {
                                "input_tokens": {
                                  "type": "integer"
                                },
                                "input_tokens_details": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "cached_tokens": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "cached_tokens"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "output_tokens": {
                                  "type": "integer"
                                },
                                "output_tokens_details": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "reasoning_tokens": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "reasoning_tokens"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "total_tokens": {
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "input_tokens",
                                "output_tokens",
                                "total_tokens"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "created_at",
                            "id",
                            "model",
                            "object",
                            "output",
                            "parallel_tool_calls"
                          ],
                          "additionalProperties": false
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.completed"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "param": {
                          "type": "string"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "error"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "param",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.file_search_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.file_search_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.file_search_call.searching"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.function_call_arguments.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "arguments": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.function_call_arguments.done"
                        }
                      },
                      "required": [
                        "arguments",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.in_progress"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.failed"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.incomplete"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item": {
                          "$ref": "#/anyOf/9/properties/response/properties/output/items"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_item.added"
                        }
                      },
                      "required": [
                        "item",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item": {
                          "$ref": "#/anyOf/9/properties/response/properties/output/items"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_item.done"
                        }
                      },
                      "required": [
                        "item",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "summary_index": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_summary_text.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "summary_index",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "summary_index": {
                          "type": "number"
                        },
                        "text": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_summary_text.done"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "summary_index",
                        "text",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_text.delta"
                        }
                      },
                      "required": [
                        "content_index",
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "text": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_text.done"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "text",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.refusal.delta"
                        }
                      },
                      "required": [
                        "content_index",
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "refusal": {
                          "type": "string"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.refusal.done"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "output_index",
                        "refusal",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.web_search_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.web_search_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.web_search_call.searching"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.image_generation_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.image_generation_call.generating"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.image_generation_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "partial_image_b64": {
                          "type": "string"
                        },
                        "partial_image_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.image_generation_call.partial_image"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "partial_image_b64",
                        "partial_image_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call_arguments.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "arguments": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call_arguments.done"
                        }
                      },
                      "required": [
                        "arguments",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call.failed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_list_tools.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_list_tools.failed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_list_tools.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "annotation": {},
                        "annotation_index": {
                          "type": "number"
                        },
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_text.annotation.added"
                        }
                      },
                      "required": [
                        "annotation_index",
                        "content_index",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.queued"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.custom_tool_call_input.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "input": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.custom_tool_call_input.done"
                        }
                      },
                      "required": [
                        "input",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "part": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "const": "summary_text"
                            }
                          },
                          "required": [
                            "text",
                            "type"
                          ],
                          "additionalProperties": false
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "summary_index": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_summary_part.done"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "part",
                        "sequence_number",
                        "summary_index",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "logprobs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "token": {
                                "type": "string"
                              },
                              "bytes": {
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "logprob": {
                                "type": "number"
                              },
                              "top_logprobs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "token": {
                                      "type": "string"
                                    },
                                    "bytes": {
                                      "type": "array",
                                      "items": {
                                        "type": "number"
                                      }
                                    },
                                    "logprob": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "token",
                                    "bytes",
                                    "logprob"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            "required": [
                              "token",
                              "bytes",
                              "logprob",
                              "top_logprobs"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "text": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_text.done"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "logprobs",
                        "output_index",
                        "sequence_number",
                        "text",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "part": {
                          "$ref": "#/anyOf/46/properties/part"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "summary_index": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_summary_part.added"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "part",
                        "sequence_number",
                        "summary_index",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "logprobs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/anyOf/47/properties/logprobs/items"
                          }
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_text.delta"
                        }
                      },
                      "required": [
                        "content_index",
                        "delta",
                        "item_id",
                        "logprobs",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "part": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "file_id": {
                                            "type": "string"
                                          },
                                          "filename": {
                                            "type": "string"
                                          },
                                          "index": {
                                            "type": "number"
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "file_citation"
                                          }
                                        },
                                        "required": [
                                          "file_id",
                                          "filename",
                                          "index",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "end_index": {
                                            "type": "number"
                                          },
                                          "start_index": {
                                            "type": "number"
                                          },
                                          "title": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "url_citation"
                                          },
                                          "url": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "end_index",
                                          "start_index",
                                          "title",
                                          "type",
                                          "url"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "container_id": {
                                            "type": "string"
                                          },
                                          "end_index": {
                                            "type": "number"
                                          },
                                          "file_id": {
                                            "type": "string"
                                          },
                                          "filename": {
                                            "type": "string"
                                          },
                                          "start_index": {
                                            "type": "number"
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "container_file_citation"
                                          }
                                        },
                                        "required": [
                                          "container_id",
                                          "end_index",
                                          "file_id",
                                          "filename",
                                          "start_index",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "file_id": {
                                            "type": "string"
                                          },
                                          "index": {
                                            "type": "number"
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "file_path"
                                          }
                                        },
                                        "required": [
                                          "file_id",
                                          "index",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "text": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "const": "output_text"
                                },
                                "logprobs": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/anyOf/47/properties/logprobs/items"
                                  }
                                }
                              },
                              "required": [
                                "annotations",
                                "text",
                                "type",
                                "logprobs"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "refusal": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "const": "refusal"
                                }
                              },
                              "required": [
                                "refusal",
                                "type"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "const": "reasoning_text"
                                }
                              },
                              "required": [
                                "text",
                                "type"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.content_part.done"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "output_index",
                        "part",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.created"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "part": {
                          "anyOf": [
                            {
                              "$ref": "#/anyOf/50/properties/part/anyOf/0"
                            },
                            {
                              "$ref": "#/anyOf/50/properties/part/anyOf/1"
                            },
                            {
                              "$ref": "#/anyOf/50/properties/part/anyOf/2"
                            }
                          ]
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.content_part.added"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "output_index",
                        "part",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    }
                  ],
                  "$schema": "http://json-schema.org/draft-07/schema#"
                }
              }
            }
          }
        },
        "x-hideTryItPanel": true,
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "async function main() {\n  const response = await fetch('https://api.aimlapi.com/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer <YOUR_AIMLAPI_KEY>',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      model: 'openai/gpt-4o',\n      messages:[\n          {\n              role:'user',\n              content: 'Hello'\n          }\n      ],\n      modalities: ['text', 'audio'],\n      audio: { voice: 'alloy', format: 'pcm16' },\n    }),\n  });\n\n  const data = await response.json();\n  console.log(JSON.stringify(data, null, 2));\n}\n\nmain();"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    \"https://api.aimlapi.com/v1/chat/completions\",\n    headers={\n        \"Content-Type\":\"application/json\", \n        \"Authorization\":\"Bearer <YOUR_AIMLAPI_KEY>\",\n    },\n    json={\n        \"model\":\"openai/gpt-4o\",\n        \"messages\":[\n            {\n                \"role\":\"user\",\n                \"content\":\"Hello\"\n            }\n        ],\n        \"modalities\": [\"text\", \"audio\"],\n        \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n    }\n)\n\ndata = response.json()\nprint(data)"
          },
          {
            "lang": "cURL",
            "source": "curl -L \\\n  --request POST \\\n  --url 'https://api.aimlapi.com/v1/chat/completions' \\\n  --header 'Authorization: Bearer <YOUR_AIMLAPI_KEY>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"model\": \"openai/gpt-4o\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"hi\"\n      }\n    ],\n    \"modalities\": [\"text\", \"audio\"], \n    \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n  }'"
          },
          {
            "lang": "HTTP",
            "source": "POST /v1/chat/completions HTTP/1.1\nHost: api.aimlapi.com\nAuthorization: Bearer <YOUR_AIMLAPI_KEY>\nContent-Type: application/json\nAccept: */*\nContent-Length: 59\n\n{\n  \"model\": \"openai/gpt-4o\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"hi\"\n    }\n  ],\n  \"modalities\": [\"text\", \"audio\"], \n  \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n}"
          }
        ]
      }
    },
    "/responses": {
      "post": {
        "operationId": "_responses",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "enum": [
                      "o1-pro",
                      "openai/o1-pro"
                    ]
                  },
                  "input": {
                    "anyOf": [
                      {
                        "type": "string",
                        "description": "A text input to the model, equivalent to a text input with the user role."
                      },
                      {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "message",
                                  "description": "The type of the message input. Always message."
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "user",
                                    "assistant",
                                    "system",
                                    "developer"
                                  ],
                                  "description": "The role of the message input."
                                },
                                "content": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "description": "A text input to the model."
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "input_text",
                                                "description": "The type of the input item. Always input_text."
                                              },
                                              "text": {
                                                "type": "string",
                                                "description": "The text input to the model."
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "text"
                                            ],
                                            "additionalProperties": false,
                                            "description": "A text input to the model."
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "input_image",
                                                "description": "The type of the input item. Always input_image."
                                              },
                                              "detail": {
                                                "type": "string",
                                                "enum": [
                                                  "high",
                                                  "low",
                                                  "auto"
                                                ],
                                                "default": "auto",
                                                "description": "The detail level of the image to be sent to the model. One of high, low, or auto."
                                              },
                                              "image_url": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL."
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "input_file",
                                                "description": "The type of the input item. Always input_file."
                                              },
                                              "file_data": {
                                                "type": "string",
                                                "description": "The content of the file to be sent to the model."
                                              },
                                              "filename": {
                                                "type": "string",
                                                "description": "The name of the file to be sent to the model."
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          }
                                        ]
                                      },
                                      "description": "A list of one or many input items to the model, containing different content types."
                                    }
                                  ],
                                  "description": "Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses."
                                }
                              },
                              "required": [
                                "role",
                                "content"
                              ],
                              "additionalProperties": false,
                              "description": "A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role. Messages with the assistant role are presumed to have been generated by the model in previous interactions."
                            },
                            {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "message",
                                      "description": "The type of the message input. Always message."
                                    },
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "user",
                                        "system",
                                        "developer"
                                      ],
                                      "description": "The role of the message input."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of item."
                                    },
                                    "content": {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/properties/input/anyOf/1/items/anyOf/0/properties/content/anyOf/1/items"
                                      },
                                      "description": "A list of one or many input items to the model, containing different content types."
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "content"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the output message."
                                    },
                                    "role": {
                                      "type": "string",
                                      "const": "assistant",
                                      "description": "The role of the output message. Always assistant."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the message input."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "message",
                                      "description": "The type of the output message. Always message."
                                    },
                                    "content": {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "annotations": {
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "end_index": {
                                                          "type": "integer",
                                                          "description": "The index of the last character of the URL citation in the message."
                                                        },
                                                        "start_index": {
                                                          "type": "integer",
                                                          "description": "The index of the first character of the URL citation in the message."
                                                        },
                                                        "title": {
                                                          "type": "string",
                                                          "description": "The title of the web resource."
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "const": "url_citation",
                                                          "description": "The type of the URL citation. Always url_citation."
                                                        },
                                                        "url": {
                                                          "type": "string",
                                                          "format": "uri",
                                                          "description": "The URL of the web resource."
                                                        }
                                                      },
                                                      "required": [
                                                        "end_index",
                                                        "start_index",
                                                        "title",
                                                        "type",
                                                        "url"
                                                      ],
                                                      "additionalProperties": false,
                                                      "description": "A citation for a web resource used to generate a model response."
                                                    }
                                                  ]
                                                },
                                                "description": "The annotations of the text output."
                                              },
                                              "text": {
                                                "type": "string",
                                                "description": "The text output from the model."
                                              },
                                              "type": {
                                                "type": "string",
                                                "const": "output_text",
                                                "description": "The type of the output text. Always output_text."
                                              },
                                              "logprobs": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "bytes": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "logprob": {
                                                      "type": "number"
                                                    },
                                                    "token": {
                                                      "type": "string"
                                                    },
                                                    "top_logprobs": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "bytes": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "integer"
                                                            }
                                                          },
                                                          "logprob": {
                                                            "type": "number"
                                                          },
                                                          "token": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "bytes",
                                                          "logprob",
                                                          "token"
                                                        ],
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "bytes",
                                                    "logprob",
                                                    "token",
                                                    "top_logprobs"
                                                  ],
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "required": [
                                              "annotations",
                                              "text",
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "refusal": {
                                                "type": "string",
                                                "description": "The refusal explanationfrom the model."
                                              },
                                              "type": {
                                                "type": "string",
                                                "const": "refusal",
                                                "description": "The type of the refusal. Always refusal."
                                              }
                                            },
                                            "required": [
                                              "refusal",
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          }
                                        ],
                                        "description": "The content of the output message."
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "role",
                                    "status",
                                    "type",
                                    "content"
                                  ],
                                  "additionalProperties": false,
                                  "description": "An output message from the model."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "action": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "button": {
                                              "type": "string",
                                              "enum": [
                                                "left",
                                                "right",
                                                "wheel",
                                                "back",
                                                "forward"
                                              ],
                                              "description": "Indicates which mouse button was pressed during the click."
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "click",
                                              "description": "Specifies the event type. For a click action, this property is always set to click."
                                            },
                                            "x": {
                                              "type": "integer",
                                              "description": "The x-coordinate where the click occurred."
                                            },
                                            "y": {
                                              "type": "integer",
                                              "description": "The y-coordinate where the click occurred."
                                            }
                                          },
                                          "required": [
                                            "button",
                                            "type",
                                            "x",
                                            "y"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A click action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "double_click",
                                              "description": "Specifies the event type. For a double click action, this property is always set to double_click."
                                            },
                                            "x": {
                                              "type": "integer",
                                              "description": "The x-coordinate where the double click occurred.."
                                            },
                                            "y": {
                                              "type": "integer",
                                              "description": "The y-coordinate where the double click occurred."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "x",
                                            "y"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A double click action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate."
                                                  }
                                                },
                                                "required": [
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false
                                              },
                                              "description": "An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg"
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "drag",
                                              "description": "Specifies the event type. For a drag action, this property is always set to drag."
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A drag action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "keys": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key."
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "keypress",
                                              "description": "Specifies the event type. For a keypress action, this property is always set to keypress."
                                            }
                                          },
                                          "required": [
                                            "keys",
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A collection of keypresses the model would like to perform."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "move",
                                              "description": "Specifies the event type. For a move action, this property is always set to move."
                                            },
                                            "x": {
                                              "type": "integer",
                                              "description": "The x-coordinate to move to."
                                            },
                                            "y": {
                                              "type": "integer",
                                              "description": "The y-coordinate to move to."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "x",
                                            "y"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A mouse move action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "screenshot",
                                              "description": "Specifies the event type. For a screenshot action, this property is always set to screenshot."
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A screenshot action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "scroll",
                                              "description": "Specifies the event type. For a scroll action, this property is always set to scroll."
                                            },
                                            "scroll_x": {
                                              "type": "integer",
                                              "description": "The horizontal scroll distance."
                                            },
                                            "scroll_y": {
                                              "type": "integer",
                                              "description": "The vertical scroll distance."
                                            },
                                            "x": {
                                              "type": "integer",
                                              "description": "The x-coordinate where the scroll occurred."
                                            },
                                            "y": {
                                              "type": "integer",
                                              "description": "The y-coordinate where the scroll occurred."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "scroll_x",
                                            "scroll_y",
                                            "x",
                                            "y"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A scroll action."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "type",
                                              "description": "Specifies the event type. For a type action, this property is always set to type."
                                            },
                                            "text": {
                                              "type": "string",
                                              "description": "The text to type."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "text"
                                          ],
                                          "additionalProperties": false,
                                          "description": "An action to type in text."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "wait",
                                              "description": "Specifies the event type. For a wait action, this property is always set to wait."
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "A wait action."
                                        }
                                      ]
                                    },
                                    "call_id": {
                                      "type": "string",
                                      "description": "An identifier used when responding to the tool call with output."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the computer call."
                                    },
                                    "pending_safety_checks": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "type": "string",
                                            "description": "The type of the pending safety check."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The ID of the pending safety check."
                                          },
                                          "message": {
                                            "type": "string",
                                            "description": "Details about the pending safety check."
                                          }
                                        },
                                        "required": [
                                          "code",
                                          "id",
                                          "message"
                                        ],
                                        "additionalProperties": false
                                      },
                                      "description": "The pending safety checks for the computer call."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the item."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "computer_call",
                                      "description": "The type of the computer call. Always computer_call."
                                    }
                                  },
                                  "required": [
                                    "action",
                                    "call_id",
                                    "id",
                                    "pending_safety_checks",
                                    "status",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A tool call to a computer use tool."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "call_id": {
                                      "type": "string",
                                      "description": "The ID of the computer tool call that produced the output."
                                    },
                                    "output": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "computer_screenshot",
                                          "description": "Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot."
                                        },
                                        "image_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The URL of the screenshot image."
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "description": "A computer screenshot image used with the computer use tool."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "computer_call_output",
                                      "description": "The type of the computer tool call output. Always computer_call_output."
                                    },
                                    "acknowledged_safety_checks": {
                                      "anyOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "The ID of the pending safety check."
                                              },
                                              "code": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "The type of the pending safety check."
                                              },
                                              "message": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Details about the pending safety check."
                                              }
                                            },
                                            "required": [
                                              "id"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The safety checks reported by the API that have been acknowledged by the developer."
                                    },
                                    "id": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The ID of the computer tool call output."
                                    },
                                    "status": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "in_progress",
                                            "completed",
                                            "incomplete"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The status of the message input."
                                    }
                                  },
                                  "required": [
                                    "call_id",
                                    "output",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "The output of a computer tool call."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the web search tool call."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "searching",
                                        "failed"
                                      ],
                                      "description": "The status of the web search tool call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "web_search_call",
                                      "description": "The type of the web search tool call. Always web_search_call."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "status",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "The results of a web search tool call."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "string",
                                      "description": "A JSON string of the arguments to pass to the function."
                                    },
                                    "call_id": {
                                      "type": "string",
                                      "description": "The unique ID of the function tool call generated by the model."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the function to run. "
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "function_call",
                                      "description": "The type of the function tool call. Always function_call."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the function tool call."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the item. "
                                    }
                                  },
                                  "required": [
                                    "arguments",
                                    "call_id",
                                    "name",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A tool call to run a function."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "call_id": {
                                      "type": "string",
                                      "description": "The unique ID of the function tool call generated by the model."
                                    },
                                    "output": {
                                      "type": "string",
                                      "description": "A JSON string of the output of the function tool call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "function_call_output",
                                      "description": "The type of the function tool call output. Always function_call_output."
                                    },
                                    "id": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The unique ID of the function tool call output. Populated when this item is returned via API."
                                    },
                                    "status": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "in_progress",
                                            "completed",
                                            "incomplete"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The status of the item. "
                                    }
                                  },
                                  "required": [
                                    "call_id",
                                    "output",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "The output of a function tool call."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique identifier of the reasoning content."
                                    },
                                    "summary": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "text": {
                                            "type": "string",
                                            "description": "A short summary of the reasoning used by the model when generating the response."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "summary_text",
                                            "description": "The type of the object. Always summary_text."
                                          }
                                        },
                                        "required": [
                                          "text",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      "description": "Reasoning text contents."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "reasoning",
                                      "description": "The type of the object. Always reasoning."
                                    },
                                    "encrypted_content": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the item."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "summary",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A description of the chain of thought used by a reasoning model while generating a response. "
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "The code to run, or null if not available."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the code interpreter tool call."
                                    },
                                    "outputs": {
                                      "anyOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "logs": {
                                                    "type": "string",
                                                    "description": "The logs output from the code interpreter."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "logs",
                                                    "description": "The type of the output. Always 'logs'."
                                                  }
                                                },
                                                "required": [
                                                  "logs",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "image"
                                                  },
                                                  "url": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "url"
                                                ],
                                                "additionalProperties": false
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The outputs generated by the code interpreter, such as logs or images. Can be null if no outputs are available."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "interpreting"
                                      ],
                                      "description": "The status of the code interpreter tool call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "code_interpreter_call",
                                      "description": "The type of the code interpreter tool call. Always code_interpreter_call."
                                    },
                                    "container_id": {
                                      "type": "string",
                                      "description": "The ID of the container used to run the code."
                                    }
                                  },
                                  "required": [
                                    "code",
                                    "id",
                                    "outputs",
                                    "status",
                                    "type",
                                    "container_id"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A tool call to run code."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "action": {
                                      "type": "object",
                                      "properties": {
                                        "command": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "The command to run."
                                        },
                                        "env": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          },
                                          "description": "Environment variables to set for the command."
                                        },
                                        "type": {
                                          "type": "string",
                                          "const": "exec",
                                          "description": "The type of the local shell action. Always exec."
                                        },
                                        "timeout_ms": {
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ],
                                          "description": "Optional timeout in milliseconds for the command."
                                        },
                                        "user": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "Optional user to run the command as."
                                        },
                                        "working_directory": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "Optional working directory to run the command in."
                                        }
                                      },
                                      "required": [
                                        "command",
                                        "env",
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "description": "Execute a shell command on the server."
                                    },
                                    "call_id": {
                                      "type": "string",
                                      "description": "The unique ID of the local shell tool call generated by the model."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the local shell call."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "incomplete"
                                      ],
                                      "description": "The status of the local shell call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "local_shell_call",
                                      "description": "The type of the local shell call. Always local_shell_call."
                                    }
                                  },
                                  "required": [
                                    "action",
                                    "call_id",
                                    "id",
                                    "status",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A tool call to run a command on the local shell."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the local shell tool call generated by the model."
                                    },
                                    "output": {
                                      "type": "string",
                                      "description": "A JSON string of the output of the local shell tool call."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "local_shell_call_output",
                                      "description": "The type of the local shell tool call output. Always local_shell_call_output."
                                    },
                                    "status": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "in_progress",
                                            "completed",
                                            "incomplete"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The status of the item."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "output",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "The output of a local shell tool call."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the list."
                                    },
                                    "server_label": {
                                      "type": "string",
                                      "description": "The label of the MCP server."
                                    },
                                    "tools": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "input_schema": {
                                            "type": "object",
                                            "additionalProperties": {},
                                            "description": "The JSON schema describing the tool's input."
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the tool."
                                          },
                                          "annotations": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": {}
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "Additional annotations about the tool."
                                          },
                                          "description": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The description of the tool."
                                          }
                                        },
                                        "required": [
                                          "input_schema",
                                          "name"
                                        ],
                                        "additionalProperties": false
                                      },
                                      "description": "The tools available on the server."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "mcp_list_tools",
                                      "description": "The type of the item. Always mcp_list_tools."
                                    },
                                    "error": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "Error message if the server could not list tools."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "server_label",
                                    "tools",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A list of tools available on an MCP server."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "string",
                                      "description": "A JSON string of arguments for the tool."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the approval request."
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "server_label": {
                                      "type": "string",
                                      "description": "The name of the tool to run."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "mcp_approval_request",
                                      "description": "The type of the item. Always mcp_approval_request."
                                    }
                                  },
                                  "required": [
                                    "arguments",
                                    "id",
                                    "name",
                                    "server_label",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A request for human approval of a tool invocation."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "approval_request_id": {
                                      "type": "string",
                                      "description": "The ID of the approval request being answered."
                                    },
                                    "approve": {
                                      "type": "boolean",
                                      "description": "Whether the request was approved."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "mcp_approval_response",
                                      "description": "The type of the item. Always mcp_approval_response."
                                    },
                                    "id": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The unique ID of the approval response"
                                    },
                                    "reason": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "Optional reason for the decision."
                                    }
                                  },
                                  "required": [
                                    "approval_request_id",
                                    "approve",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A response to an MCP approval request."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "arguments": {
                                      "type": "string",
                                      "description": "A JSON string of the arguments passed to the tool."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The unique ID of the tool call."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the tool that was run."
                                    },
                                    "server_label": {
                                      "type": "string",
                                      "description": "The label of the MCP server running the tool."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "mcp_call",
                                      "description": "The type of the item. Always mcp_call."
                                    },
                                    "error": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The error from the tool call, if any."
                                    },
                                    "output": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The output from the tool call."
                                    }
                                  },
                                  "required": [
                                    "arguments",
                                    "id",
                                    "name",
                                    "server_label",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "An invocation of a tool on an MCP server."
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the item to reference."
                                },
                                "type": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "const": "item_reference"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "description": "The type of item to reference. Always item_reference."
                                }
                              },
                              "required": [
                                "id"
                              ],
                              "additionalProperties": false,
                              "description": "An internal identifier for an item to reference."
                            }
                          ]
                        },
                        "description": "A list of one or many input items to the model, containing different content types."
                      }
                    ],
                    "description": "Text, image, or file inputs to the model, used to generate a response."
                  },
                  "include": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "message.input_image.image_url",
                            "computer_call_output.output.image_url",
                            "reasoning.encrypted_content",
                            "code_interpreter_call.outputs"
                          ]
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Specify additional output data to include in the model response. Currently supported values are:\n    - code_interpreter_call.outputs: Includes the outputs of python code execution in code interpreter tool call items.\n    - computer_call_output.output.image_url: Include image urls from the computer call output.\n    - file_search_call.results: Include the search results of the file search tool call.\n    - message.output_text.logprobs: Include logprobs with assistant messages.\n    - reasoning.encrypted_content: Includes an encrypted version of reasoning tokens in reasoning item outputs. This enables reasoning items to be used in multi-turn conversations when using the Responses API statelessly (like when the store parameter is set to false, or when an organization is enrolled in the zero data retention program).\n"
                  },
                  "instructions": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A system (or developer) message inserted into the model's context.\n\nWhen using along with previous_response_id, the instructions from a previous response will not be carried over to the next response. This makes it simple to swap out system (or developer) messages in new responses."
                  },
                  "max_output_tokens": {
                    "type": "integer",
                    "description": "An upper bound for the number of tokens that can be generated for a response, including visible output tokens and reasoning tokens."
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters."
                  },
                  "parallel_tool_calls": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Whether to allow the model to run tool calls in parallel."
                  },
                  "previous_response_id": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The unique ID of the previous response to the model. Use this to create multi-turn conversations."
                  },
                  "prompt": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the prompt template to use."
                          },
                          "variables": {
                            "anyOf": [
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "$ref": "#/properties/input/anyOf/1/items/anyOf/0/properties/content/anyOf/1/items"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "Optional map of values to substitute in for variables in your prompt. The substitution values can either be strings, or other Response input types like images or files."
                          },
                          "version": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Optional version of the prompt template."
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Reference to a prompt template and its variables."
                  },
                  "reasoning": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "effort": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "low",
                                  "medium",
                                  "high"
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
                          },
                          "summary": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "auto",
                                  "concise",
                                  "detailed"
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process."
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "o-series models only\nConfiguration options for reasoning models."
                  },
                  "store": {
                    "anyOf": [
                      {
                        "type": "boolean",
                        "default": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Whether to store the generated model response for later retrieval via API."
                  },
                  "stream": {
                    "anyOf": [
                      {
                        "type": "boolean",
                        "default": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "If set to true, the model response data will be streamed to the client as it is generated using server-sent events. "
                  },
                  "temperature": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 2
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both."
                  },
                  "text": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "text",
                                "description": "The type of response format being defined. Always text."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "Default response format. Used to generate text responses."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "json_object",
                                "description": "The type of response format being defined. Always json_object."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "An older method of generating JSON responses. Using json_schema is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                              },
                              "schema": {
                                "type": "object",
                                "additionalProperties": {},
                                "description": "The schema for the response format, described as a JSON Schema object."
                              },
                              "type": {
                                "type": "string",
                                "const": "json_schema"
                              },
                              "strict": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Whether to enable strict schema adherence when generating the output. If set to True, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is True."
                              },
                              "description": {
                                "type": "string",
                                "description": "A description of what the response format is for, used by the model to determine how to respond in the format."
                              }
                            },
                            "required": [
                              "name",
                              "schema",
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "JSON Schema response format. Used to generate structured JSON responses."
                          }
                        ],
                        "description": "An object specifying the format that the model must output."
                      }
                    },
                    "required": [
                      "format"
                    ],
                    "additionalProperties": false,
                    "description": "Configuration options for a text response from the model. Can be plain text or structured JSON data."
                  },
                  "tool_choice": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "none",
                          "auto",
                          "required"
                        ],
                        "description": "Controls which (if any) tool is called by the model.\n\nnone means the model will not call any tool and instead generates a message.\n\nauto means the model can pick between generating a message or calling one or more tools.\n\nrequired means the model must call one or more tools."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "web_search_preview",
                              "web_search_preview_2025_03_11",
                              "computer_use_preview",
                              "code_interpreter",
                              "mcp"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false,
                        "description": "Indicates that the model should use a built-in tool to generate a response."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the function to call."
                          },
                          "type": {
                            "type": "string",
                            "const": "function",
                            "description": "For function calling, the type is always function."
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ],
                        "additionalProperties": false
                      }
                    ],
                    "description": "How the model should select which tool (or tools) to use when generating a response."
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "web_search_preview",
                                "web_search_preview_2025_03_11"
                              ],
                              "description": "The type of the web search tool. One of web_search_preview or web_search_preview_2025_03_11."
                            },
                            "search_context_size": {
                              "type": "string",
                              "enum": [
                                "low",
                                "medium",
                                "high"
                              ],
                              "description": "High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default."
                            },
                            "user_location": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "approximate",
                                      "description": "The type of location approximation. Always approximate."
                                    },
                                    "city": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "Free text input for the city of the user, e.g. San Francisco."
                                    },
                                    "country": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The two-letter ISO country code of the user, e.g. US."
                                    },
                                    "region": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "Free text input for the region of the user, e.g. California."
                                    },
                                    "timezone": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The IANA timezone of the user, e.g. America/Los_Angeles."
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The user's location"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "This tool searches the web for relevant results to use in a response."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "display_height": {
                              "type": "integer",
                              "description": "The height of the computer display."
                            },
                            "display_width": {
                              "type": "integer",
                              "description": "The width of the computer display."
                            },
                            "environment": {
                              "type": "string",
                              "enum": [
                                "windows",
                                "mac",
                                "linux",
                                "ubuntu",
                                "browser"
                              ],
                              "description": "The type of computer environment to control."
                            },
                            "type": {
                              "type": "string",
                              "const": "computer_use_preview",
                              "description": "The type of the computer use tool. Always computer_use_preview."
                            }
                          },
                          "required": [
                            "display_height",
                            "display_width",
                            "environment",
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "A tool that controls a virtual computer."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "server_label": {
                              "type": "string",
                              "description": "A label for this MCP server, used to identify it in tool calls."
                            },
                            "server_url": {
                              "type": "string",
                              "description": "The URL for the MCP server."
                            },
                            "type": {
                              "type": "string",
                              "const": "mcp",
                              "description": "The type of the MCP tool. Always mcp."
                            },
                            "allowed_tools": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A string array of allowed tool names"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_names": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "List of allowed tool names."
                                        }
                                      },
                                      "additionalProperties": false,
                                      "description": "A filter object to specify which tools are allowed."
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "List of allowed tool names or a filter object."
                            },
                            "headers": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "Optional HTTP headers to send to the MCP server. Use for authentication or other purposes."
                            },
                            "require_approval": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "always",
                                        "never"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "always": {
                                          "type": "object",
                                          "properties": {
                                            "tool_names": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "List of tools that require approval."
                                            }
                                          },
                                          "additionalProperties": false,
                                          "description": "A list of tools that always require approval."
                                        },
                                        "never": {
                                          "type": "object",
                                          "properties": {
                                            "tool_names": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "List of tools that do not require approval."
                                            }
                                          },
                                          "additionalProperties": false,
                                          "description": "A list of tools that never require approval."
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "Specify which of the MCP server's tools require approval."
                            }
                          },
                          "required": [
                            "server_label",
                            "server_url",
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "Give the model access to additional tools via remote Model Context Protocol (MCP) servers."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "code_interpreter",
                              "description": "The type of the code interpreter tool. Always code_interpreter."
                            },
                            "container": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "auto"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false
                                }
                              ],
                              "description": "The container ID."
                            }
                          },
                          "required": [
                            "type",
                            "container"
                          ],
                          "additionalProperties": false,
                          "description": "A tool that runs Python code to help generate a response to a prompt."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "local_shell",
                              "description": "The type of the local shell tool. Always local_shell."
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "A tool that allows the model to execute shell commands in a local environment."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the function to call."
                            },
                            "parameters": {
                              "type": "object",
                              "additionalProperties": {},
                              "description": "A JSON schema object describing the parameters of the function."
                            },
                            "strict": {
                              "type": "boolean",
                              "description": "Whether to enforce strict parameter validation."
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "description": "The type of the function tool. Always function."
                            },
                            "description": {
                              "type": "string",
                              "description": "A description of the function. Used by the model to determine whether or not to call the function."
                            }
                          },
                          "required": [
                            "name",
                            "parameters",
                            "strict",
                            "type"
                          ],
                          "additionalProperties": false,
                          "description": "Defines a function in your own code the model can choose to call."
                        }
                      ]
                    },
                    "description": "An array of tools the model may call while generating a response. You can specify which tool to use by setting the tool_choice parameter."
                  },
                  "top_p": {
                    "type": [
                      "number",
                      "null"
                    ],
                    "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\nWe generally recommend altering this or temperature but not both."
                  },
                  "truncation": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "disabled"
                    ],
                    "default": "disabled",
                    "description": "The truncation strategy to use for the model response.\n\n    - auto: If the context of this response and previous ones exceeds the model's context window size, the model will truncate the response to fit the context window by dropping input items in the middle of the conversation.\n    - disabled (default): If a model response will exceed the context window size for a model, the request will fail with a 400 error.\n"
                  }
                },
                "required": [
                  "model",
                  "input"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "o1-pro, openai/o1-pro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "background": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "created_at": {
                      "type": "number"
                    },
                    "error": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "code",
                            "message"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "id": {
                      "type": "string"
                    },
                    "incomplete_details": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "reason": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "instructions": {
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "message",
                                        "description": "The type of the message input. Always message."
                                      },
                                      "role": {
                                        "type": "string",
                                        "enum": [
                                          "user",
                                          "assistant",
                                          "system",
                                          "developer"
                                        ],
                                        "description": "The role of the message input."
                                      },
                                      "content": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "A text input to the model."
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "input_text",
                                                      "description": "The type of the input item. Always input_text."
                                                    },
                                                    "text": {
                                                      "type": "string",
                                                      "description": "The text input to the model."
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "text"
                                                  ],
                                                  "additionalProperties": false,
                                                  "description": "A text input to the model."
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "input_image",
                                                      "description": "The type of the input item. Always input_image."
                                                    },
                                                    "detail": {
                                                      "type": "string",
                                                      "enum": [
                                                        "high",
                                                        "low",
                                                        "auto"
                                                      ],
                                                      "default": "auto",
                                                      "description": "The detail level of the image to be sent to the model. One of high, low, or auto."
                                                    },
                                                    "image_url": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ],
                                                      "description": "The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL."
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ],
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "input_file",
                                                      "description": "The type of the input item. Always input_file."
                                                    },
                                                    "file_data": {
                                                      "type": "string",
                                                      "description": "The content of the file to be sent to the model."
                                                    },
                                                    "filename": {
                                                      "type": "string",
                                                      "description": "The name of the file to be sent to the model."
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ],
                                                  "additionalProperties": false
                                                }
                                              ]
                                            },
                                            "description": "A list of one or many input items to the model, containing different content types."
                                          }
                                        ],
                                        "description": "Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses."
                                      }
                                    },
                                    "required": [
                                      "role",
                                      "content"
                                    ],
                                    "additionalProperties": false,
                                    "description": "A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role. Messages with the assistant role are presumed to have been generated by the model in previous interactions."
                                  },
                                  {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "message",
                                            "description": "The type of the message input. Always message."
                                          },
                                          "role": {
                                            "type": "string",
                                            "enum": [
                                              "user",
                                              "system",
                                              "developer"
                                            ],
                                            "description": "The role of the message input."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of item."
                                          },
                                          "content": {
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/0/properties/content/anyOf/1/items"
                                            },
                                            "description": "A list of one or many input items to the model, containing different content types."
                                          }
                                        },
                                        "required": [
                                          "role",
                                          "content"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the output message."
                                          },
                                          "role": {
                                            "type": "string",
                                            "const": "assistant",
                                            "description": "The role of the output message. Always assistant."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the message input."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "message",
                                            "description": "The type of the output message. Always message."
                                          },
                                          "content": {
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "annotations": {
                                                      "type": "array",
                                                      "items": {
                                                        "anyOf": [
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "end_index": {
                                                                "type": "integer",
                                                                "description": "The index of the last character of the URL citation in the message."
                                                              },
                                                              "start_index": {
                                                                "type": "integer",
                                                                "description": "The index of the first character of the URL citation in the message."
                                                              },
                                                              "title": {
                                                                "type": "string",
                                                                "description": "The title of the web resource."
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "const": "url_citation",
                                                                "description": "The type of the URL citation. Always url_citation."
                                                              },
                                                              "url": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "description": "The URL of the web resource."
                                                              }
                                                            },
                                                            "required": [
                                                              "end_index",
                                                              "start_index",
                                                              "title",
                                                              "type",
                                                              "url"
                                                            ],
                                                            "additionalProperties": false,
                                                            "description": "A citation for a web resource used to generate a model response."
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "file_id": {
                                                                "type": "string"
                                                              },
                                                              "index": {
                                                                "type": "integer"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "const": "file_citation"
                                                              }
                                                            },
                                                            "required": [
                                                              "file_id",
                                                              "index",
                                                              "type"
                                                            ],
                                                            "additionalProperties": false
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "container_id": {
                                                                "type": "string"
                                                              },
                                                              "start_index": {
                                                                "type": "integer"
                                                              },
                                                              "end_index": {
                                                                "type": "integer"
                                                              },
                                                              "file_id": {
                                                                "type": "string"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "const": "container_file_citation"
                                                              }
                                                            },
                                                            "required": [
                                                              "container_id",
                                                              "start_index",
                                                              "end_index",
                                                              "file_id",
                                                              "type"
                                                            ],
                                                            "additionalProperties": false
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "file_id": {
                                                                "type": "string"
                                                              },
                                                              "index": {
                                                                "type": "integer"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "const": "file_path"
                                                              }
                                                            },
                                                            "required": [
                                                              "file_id",
                                                              "index",
                                                              "type"
                                                            ],
                                                            "additionalProperties": false
                                                          }
                                                        ]
                                                      },
                                                      "description": "The annotations of the text output."
                                                    },
                                                    "text": {
                                                      "type": "string",
                                                      "description": "The text output from the model."
                                                    },
                                                    "type": {
                                                      "type": "string",
                                                      "const": "output_text",
                                                      "description": "The type of the output text. Always output_text."
                                                    },
                                                    "logprobs": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "bytes": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "integer"
                                                            }
                                                          },
                                                          "logprob": {
                                                            "type": "number"
                                                          },
                                                          "token": {
                                                            "type": "string"
                                                          },
                                                          "top_logprobs": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "bytes": {
                                                                  "type": "array",
                                                                  "items": {
                                                                    "type": "integer"
                                                                  }
                                                                },
                                                                "logprob": {
                                                                  "type": "number"
                                                                },
                                                                "token": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "bytes",
                                                                "logprob",
                                                                "token"
                                                              ],
                                                              "additionalProperties": false
                                                            }
                                                          }
                                                        },
                                                        "required": [
                                                          "bytes",
                                                          "logprob",
                                                          "token",
                                                          "top_logprobs"
                                                        ],
                                                        "additionalProperties": false
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "annotations",
                                                    "text",
                                                    "type"
                                                  ],
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "refusal": {
                                                      "type": "string",
                                                      "description": "The refusal explanationfrom the model."
                                                    },
                                                    "type": {
                                                      "type": "string",
                                                      "const": "refusal",
                                                      "description": "The type of the refusal. Always refusal."
                                                    }
                                                  },
                                                  "required": [
                                                    "refusal",
                                                    "type"
                                                  ],
                                                  "additionalProperties": false
                                                }
                                              ],
                                              "description": "The content of the output message."
                                            }
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "role",
                                          "status",
                                          "type",
                                          "content"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "queries": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "searching",
                                              "incomplete",
                                              "failed",
                                              "completed"
                                            ]
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "file_search_call"
                                          },
                                          "results": {
                                            "anyOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "attributes": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": [
                                                              "string",
                                                              "number",
                                                              "boolean"
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "null"
                                                        }
                                                      ]
                                                    },
                                                    "file_id": {
                                                      "type": "string"
                                                    },
                                                    "filename": {
                                                      "type": "string"
                                                    },
                                                    "score": {
                                                      "type": "number"
                                                    },
                                                    "text": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "queries",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "button": {
                                                    "type": "string",
                                                    "enum": [
                                                      "left",
                                                      "right",
                                                      "wheel",
                                                      "back",
                                                      "forward"
                                                    ],
                                                    "description": "Indicates which mouse button was pressed during the click."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "click",
                                                    "description": "Specifies the event type. For a click action, this property is always set to click."
                                                  },
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The x-coordinate where the click occurred."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate where the click occurred."
                                                  }
                                                },
                                                "required": [
                                                  "button",
                                                  "type",
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A click action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "double_click",
                                                    "description": "Specifies the event type. For a double click action, this property is always set to double_click."
                                                  },
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The x-coordinate where the double click occurred.."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate where the double click occurred."
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A double click action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "x": {
                                                          "type": "integer",
                                                          "description": "The y-coordinate."
                                                        },
                                                        "y": {
                                                          "type": "integer",
                                                          "description": "The y-coordinate."
                                                        }
                                                      },
                                                      "required": [
                                                        "x",
                                                        "y"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    "description": "An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "drag",
                                                    "description": "Specifies the event type. For a drag action, this property is always set to drag."
                                                  }
                                                },
                                                "required": [
                                                  "path",
                                                  "type"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A drag action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "keys": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "description": "The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "keypress",
                                                    "description": "Specifies the event type. For a keypress action, this property is always set to keypress."
                                                  }
                                                },
                                                "required": [
                                                  "keys",
                                                  "type"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A collection of keypresses the model would like to perform."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "move",
                                                    "description": "Specifies the event type. For a move action, this property is always set to move."
                                                  },
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The x-coordinate to move to."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate to move to."
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A mouse move action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "screenshot",
                                                    "description": "Specifies the event type. For a screenshot action, this property is always set to screenshot."
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A screenshot action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "scroll",
                                                    "description": "Specifies the event type. For a scroll action, this property is always set to scroll."
                                                  },
                                                  "scroll_x": {
                                                    "type": "integer",
                                                    "description": "The horizontal scroll distance."
                                                  },
                                                  "scroll_y": {
                                                    "type": "integer",
                                                    "description": "The vertical scroll distance."
                                                  },
                                                  "x": {
                                                    "type": "integer",
                                                    "description": "The x-coordinate where the scroll occurred."
                                                  },
                                                  "y": {
                                                    "type": "integer",
                                                    "description": "The y-coordinate where the scroll occurred."
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "scroll_x",
                                                  "scroll_y",
                                                  "x",
                                                  "y"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A scroll action."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "type",
                                                    "description": "Specifies the event type. For a type action, this property is always set to type."
                                                  },
                                                  "text": {
                                                    "type": "string",
                                                    "description": "The text to type."
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "text"
                                                ],
                                                "additionalProperties": false,
                                                "description": "An action to type in text."
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "wait",
                                                    "description": "Specifies the event type. For a wait action, this property is always set to wait."
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "additionalProperties": false,
                                                "description": "A wait action."
                                              }
                                            ]
                                          },
                                          "call_id": {
                                            "type": "string",
                                            "description": "An identifier used when responding to the tool call with output."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the computer call."
                                          },
                                          "pending_safety_checks": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "code": {
                                                  "type": "string",
                                                  "description": "The type of the pending safety check."
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "description": "The ID of the pending safety check."
                                                },
                                                "message": {
                                                  "type": "string",
                                                  "description": "Details about the pending safety check."
                                                }
                                              },
                                              "required": [
                                                "code",
                                                "id",
                                                "message"
                                              ],
                                              "additionalProperties": false
                                            },
                                            "description": "The pending safety checks for the computer call."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the item."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "computer_call",
                                            "description": "The type of the computer call. Always computer_call."
                                          }
                                        },
                                        "required": [
                                          "action",
                                          "call_id",
                                          "id",
                                          "pending_safety_checks",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "call_id": {
                                            "type": "string",
                                            "description": "The ID of the computer tool call that produced the output."
                                          },
                                          "output": {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "computer_screenshot",
                                                "description": "Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot."
                                              },
                                              "image_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "The URL of the screenshot image."
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false,
                                            "description": "A computer screenshot image used with the computer use tool."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "computer_call_output",
                                            "description": "The type of the computer tool call output. Always computer_call_output."
                                          },
                                          "acknowledged_safety_checks": {
                                            "anyOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "string",
                                                      "description": "The ID of the pending safety check."
                                                    },
                                                    "code": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ],
                                                      "description": "The type of the pending safety check."
                                                    },
                                                    "message": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ],
                                                      "description": "Details about the pending safety check."
                                                    }
                                                  },
                                                  "required": [
                                                    "id"
                                                  ],
                                                  "additionalProperties": false
                                                }
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The safety checks reported by the API that have been acknowledged by the developer."
                                          },
                                          "id": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The ID of the computer tool call output."
                                          },
                                          "status": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "in_progress",
                                                  "completed",
                                                  "incomplete"
                                                ]
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The status of the message input."
                                          }
                                        },
                                        "required": [
                                          "call_id",
                                          "output",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the web search tool call."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "searching",
                                              "failed"
                                            ],
                                            "description": "The status of the web search tool call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "web_search_call",
                                            "description": "The type of the web search tool call. Always web_search_call."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "arguments": {
                                            "type": "string",
                                            "description": "A JSON string of the arguments to pass to the function."
                                          },
                                          "call_id": {
                                            "type": "string",
                                            "description": "The unique ID of the function tool call generated by the model."
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the function to run. "
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "function_call",
                                            "description": "The type of the function tool call. Always function_call."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the function tool call."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the item. "
                                          }
                                        },
                                        "required": [
                                          "arguments",
                                          "call_id",
                                          "name",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "call_id": {
                                            "type": "string",
                                            "description": "The unique ID of the function tool call generated by the model."
                                          },
                                          "output": {
                                            "type": "string",
                                            "description": "A JSON string of the output of the function tool call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "function_call_output",
                                            "description": "The type of the function tool call output. Always function_call_output."
                                          },
                                          "id": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The unique ID of the function tool call output. Populated when this item is returned via API."
                                          },
                                          "status": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "in_progress",
                                                  "completed",
                                                  "incomplete"
                                                ]
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The status of the item. "
                                          }
                                        },
                                        "required": [
                                          "call_id",
                                          "output",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique identifier of the reasoning content."
                                          },
                                          "summary": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "text": {
                                                  "type": "string",
                                                  "description": "A short summary of the reasoning used by the model when generating the response."
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "const": "summary_text",
                                                  "description": "The type of the object. Always summary_text."
                                                }
                                              },
                                              "required": [
                                                "text",
                                                "type"
                                              ],
                                              "additionalProperties": false
                                            },
                                            "description": "Reasoning text contents."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "reasoning",
                                            "description": "The type of the object. Always reasoning."
                                          },
                                          "encrypted_content": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the item."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "summary",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "result": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "failed",
                                              "generating"
                                            ]
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "image_generation_call"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "result",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The code to run, or null if not available."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the code interpreter tool call."
                                          },
                                          "outputs": {
                                            "anyOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "logs": {
                                                          "type": "string",
                                                          "description": "The logs output from the code interpreter."
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "const": "logs",
                                                          "description": "The type of the output. Always 'logs'."
                                                        }
                                                      },
                                                      "required": [
                                                        "logs",
                                                        "type"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "image"
                                                        },
                                                        "url": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "url"
                                                      ],
                                                      "additionalProperties": false
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The outputs generated by the code interpreter, such as logs or images. Can be null if no outputs are available."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete",
                                              "interpreting",
                                              "failed"
                                            ],
                                            "description": "The status of the code interpreter tool call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "code_interpreter_call",
                                            "description": "The type of the code interpreter tool call. Always code_interpreter_call."
                                          },
                                          "container_id": {
                                            "type": "string",
                                            "description": "The ID of the container used to run the code."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "status",
                                          "type",
                                          "container_id"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "object",
                                            "properties": {
                                              "command": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "The command to run."
                                              },
                                              "env": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "description": "Environment variables to set for the command."
                                              },
                                              "type": {
                                                "type": "string",
                                                "const": "exec",
                                                "description": "The type of the local shell action. Always exec."
                                              },
                                              "timeout_ms": {
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "null"
                                                  }
                                                ],
                                                "description": "Optional timeout in milliseconds for the command."
                                              },
                                              "user": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Optional user to run the command as."
                                              },
                                              "working_directory": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Optional working directory to run the command in."
                                              }
                                            },
                                            "required": [
                                              "command",
                                              "env",
                                              "type"
                                            ],
                                            "additionalProperties": false,
                                            "description": "Execute a shell command on the server."
                                          },
                                          "call_id": {
                                            "type": "string",
                                            "description": "The unique ID of the local shell tool call generated by the model."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the local shell call."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "incomplete"
                                            ],
                                            "description": "The status of the local shell call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "local_shell_call",
                                            "description": "The type of the local shell call. Always local_shell_call."
                                          }
                                        },
                                        "required": [
                                          "action",
                                          "call_id",
                                          "id",
                                          "status",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the local shell tool call generated by the model."
                                          },
                                          "output": {
                                            "type": "string",
                                            "description": "A JSON string of the output of the local shell tool call."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "local_shell_call_output",
                                            "description": "The type of the local shell tool call output. Always local_shell_call_output."
                                          },
                                          "status": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "in_progress",
                                                  "completed",
                                                  "incomplete"
                                                ]
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ],
                                            "description": "The status of the item."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "output",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the list."
                                          },
                                          "server_label": {
                                            "type": "string",
                                            "description": "The label of the MCP server."
                                          },
                                          "tools": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "input_schema": {},
                                                "name": {
                                                  "type": "string",
                                                  "description": "The name of the tool."
                                                },
                                                "annotations": {},
                                                "description": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ],
                                                  "description": "The description of the tool."
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ],
                                              "additionalProperties": false
                                            }
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "mcp_list_tools",
                                            "description": "The type of the item. Always mcp_list_tools."
                                          },
                                          "error": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "Error message if the server could not list tools."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "server_label",
                                          "tools",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "arguments": {
                                            "type": "string",
                                            "description": "A JSON string of arguments for the tool."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the approval request."
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "server_label": {
                                            "type": "string",
                                            "description": "The name of the tool to run."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "mcp_approval_request",
                                            "description": "The type of the item. Always mcp_approval_request."
                                          }
                                        },
                                        "required": [
                                          "arguments",
                                          "id",
                                          "name",
                                          "server_label",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "approval_request_id": {
                                            "type": "string",
                                            "description": "The ID of the approval request being answered."
                                          },
                                          "approve": {
                                            "type": "boolean",
                                            "description": "Whether the request was approved."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "mcp_approval_response",
                                            "description": "The type of the item. Always mcp_approval_response."
                                          },
                                          "id": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The unique ID of the approval response"
                                          },
                                          "reason": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "Optional reason for the decision."
                                          }
                                        },
                                        "required": [
                                          "approval_request_id",
                                          "approve",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "arguments": {
                                            "type": "string",
                                            "description": "A JSON string of the arguments passed to the tool."
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The unique ID of the tool call."
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the tool that was run."
                                          },
                                          "server_label": {
                                            "type": "string",
                                            "description": "The label of the MCP server running the tool."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "mcp_call",
                                            "description": "The type of the item. Always mcp_call."
                                          },
                                          "error": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The error from the tool call, if any."
                                          },
                                          "output": {
                                            "type": [
                                              "string",
                                              "null"
                                            ],
                                            "description": "The output from the tool call."
                                          }
                                        },
                                        "required": [
                                          "arguments",
                                          "id",
                                          "name",
                                          "server_label",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the item to reference."
                                      },
                                      "type": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "const": "item_reference"
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "The type of item to reference. Always item_reference."
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ],
                                    "additionalProperties": false,
                                    "description": "An internal identifier for an item to reference."
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "max_output_tokens": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "model": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string",
                      "const": "response"
                    },
                    "output": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "role": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/role"
                              },
                              "type": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/type"
                              },
                              "content": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/content"
                              }
                            },
                            "required": [
                              "role",
                              "type",
                              "content"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/id"
                              },
                              "queries": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/queries"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "searching",
                                  "incomplete",
                                  "failed",
                                  "completed"
                                ]
                              },
                              "type": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/type"
                              },
                              "results": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/results"
                              }
                            },
                            "required": [
                              "id",
                              "queries",
                              "status",
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/3"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/4"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/5"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/6"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/8"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/9"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/10"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/11"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/id"
                              },
                              "server_label": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/server_label"
                              },
                              "tools": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/tools/items"
                                }
                              },
                              "type": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/type"
                              },
                              "error": {
                                "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/error"
                              }
                            },
                            "required": [
                              "id",
                              "server_label",
                              "tools",
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/14"
                          },
                          {
                            "$ref": "#/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/16"
                          }
                        ]
                      }
                    },
                    "output_text": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "parallel_tool_calls": {
                      "type": "boolean"
                    },
                    "previous_response_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "prompt": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "variables": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "version": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "reasoning": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "effort": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "low",
                                    "medium",
                                    "high"
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
                            },
                            "summary": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto",
                                    "concise",
                                    "detailed"
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process."
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "service_tier": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "completed",
                        "failed",
                        "in_progress",
                        "cancelled",
                        "queued",
                        "incomplete"
                      ]
                    },
                    "temperature": {
                      "anyOf": [
                        {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 2
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "text": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "format": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "text",
                                      "description": "The type of response format being defined. Always text."
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "Default response format. Used to generate text responses."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "json_object",
                                      "description": "The type of response format being defined. Always json_object."
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "An older method of generating JSON responses. Using json_schema is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                                    },
                                    "schema": {
                                      "type": "object",
                                      "additionalProperties": {},
                                      "description": "The schema for the response format, described as a JSON Schema object."
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "json_schema"
                                    },
                                    "strict": {
                                      "type": [
                                        "boolean",
                                        "null"
                                      ],
                                      "description": "Whether to enable strict schema adherence when generating the output. If set to True, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is True."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A description of what the response format is for, used by the model to determine how to respond in the format."
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "schema",
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "description": "JSON Schema response format. Used to generate structured JSON responses."
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "tool_choice": {
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "none",
                                "auto",
                                "required"
                              ],
                              "description": "Controls which (if any) tool is called by the model.\n\nnone means the model will not call any tool and instead generates a message.\n\nauto means the model can pick between generating a message or calling one or more tools.\n\nrequired means the model must call one or more tools."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "web_search_preview",
                                    "web_search_preview_2025_03_11",
                                    "computer_use_preview",
                                    "code_interpreter",
                                    "mcp",
                                    "file_search",
                                    "image_generation"
                                  ]
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "additionalProperties": false,
                              "description": "Indicates that the model should use a built-in tool to generate a response."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the function to call."
                                },
                                "type": {
                                  "type": "string",
                                  "const": "function",
                                  "description": "For function calling, the type is always function."
                                }
                              },
                              "required": [
                                "name",
                                "type"
                              ],
                              "additionalProperties": false,
                              "description": "Use this option to force the model to call a specific function."
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "tools": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "web_search_preview",
                                  "web_search_preview_2025_03_11"
                                ],
                                "description": "The type of the web search tool. One of web_search_preview or web_search_preview_2025_03_11."
                              },
                              "search_context_size": {
                                "type": "string",
                                "enum": [
                                  "low",
                                  "medium",
                                  "high"
                                ],
                                "description": "High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default."
                              },
                              "user_location": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "approximate",
                                        "description": "The type of location approximation. Always approximate."
                                      },
                                      "city": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "Free text input for the city of the user, e.g. San Francisco."
                                      },
                                      "country": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "The two-letter ISO country code of the user, e.g. US."
                                      },
                                      "region": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "Free text input for the region of the user, e.g. California."
                                      },
                                      "timezone": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "The IANA timezone of the user, e.g. America/Los_Angeles."
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "The user's location"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "This tool searches the web for relevant results to use in a response."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "display_height": {
                                "type": "integer",
                                "description": "The height of the computer display."
                              },
                              "display_width": {
                                "type": "integer",
                                "description": "The width of the computer display."
                              },
                              "environment": {
                                "type": "string",
                                "enum": [
                                  "windows",
                                  "mac",
                                  "linux",
                                  "ubuntu",
                                  "browser"
                                ],
                                "description": "The type of computer environment to control."
                              },
                              "type": {
                                "type": "string",
                                "const": "computer_use_preview",
                                "description": "The type of the computer use tool. Always computer_use_preview."
                              }
                            },
                            "required": [
                              "display_height",
                              "display_width",
                              "environment",
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "A tool that controls a virtual computer."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "server_label": {
                                "type": "string",
                                "description": "A label for this MCP server, used to identify it in tool calls."
                              },
                              "server_url": {
                                "type": "string",
                                "description": "The URL for the MCP server."
                              },
                              "type": {
                                "type": "string",
                                "const": "mcp",
                                "description": "The type of the MCP tool. Always mcp."
                              },
                              "allowed_tools": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "A string array of allowed tool names"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "tool_names": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "description": "List of allowed tool names."
                                          }
                                        },
                                        "additionalProperties": false,
                                        "description": "A filter object to specify which tools are allowed."
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "List of allowed tool names or a filter object."
                              },
                              "headers": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "Optional HTTP headers to send to the MCP server. Use for authentication or other purposes."
                              },
                              "require_approval": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "always": {
                                            "type": "object",
                                            "properties": {
                                              "tool_names": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "List of tools that require approval."
                                              }
                                            },
                                            "additionalProperties": false,
                                            "description": "A list of tools that always require approval."
                                          },
                                          "never": {
                                            "type": "object",
                                            "properties": {
                                              "tool_names": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "List of tools that do not require approval."
                                              }
                                            },
                                            "additionalProperties": false,
                                            "description": "A list of tools that never require approval."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "Specify which of the MCP server's tools require approval."
                              }
                            },
                            "required": [
                              "server_label",
                              "server_url",
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "Give the model access to additional tools via remote Model Context Protocol (MCP) servers."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "code_interpreter",
                                "description": "The type of the code interpreter tool. Always code_interpreter."
                              },
                              "container": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "auto"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ],
                                "description": "The container ID."
                              }
                            },
                            "required": [
                              "type",
                              "container"
                            ],
                            "additionalProperties": false,
                            "description": "A tool that runs Python code to help generate a response to a prompt."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "local_shell",
                                "description": "The type of the local shell tool. Always local_shell."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false,
                            "description": "A tool that allows the model to execute shell commands in a local environment."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the function to call."
                              },
                              "parameters": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": {}
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "A JSON schema object describing the parameters of the function."
                              },
                              "strict": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Whether to enforce strict parameter validation."
                              },
                              "type": {
                                "type": "string",
                                "const": "function",
                                "description": "The type of the function tool. Always function."
                              },
                              "description": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "not": {}
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "A description of the function. Used by the model to determine whether or not to call the function."
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "file_search"
                              },
                              "vector_store_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "filters": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "eq",
                                          "ne",
                                          "gt",
                                          "gte",
                                          "lt",
                                          "lte"
                                        ]
                                      },
                                      "value": {
                                        "type": [
                                          "string",
                                          "number",
                                          "boolean"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "type",
                                      "value"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "and",
                                          "or"
                                        ]
                                      },
                                      "filters": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "$ref": "#/properties/tools/items/anyOf/6/properties/filters/anyOf/0"
                                            },
                                            {
                                              "$ref": "#/properties/tools/items/anyOf/6/properties/filters/anyOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "filters"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              "max_num_results": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 50
                              },
                              "ranking_options": {
                                "type": "object",
                                "properties": {
                                  "ranker": {
                                    "type": "string",
                                    "enum": [
                                      "auto",
                                      "default-2024-11-15"
                                    ]
                                  },
                                  "score_threshold": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 1
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "type",
                              "vector_store_ids"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "image_generation"
                              },
                              "background": {
                                "type": "string",
                                "enum": [
                                  "transparent",
                                  "opaque",
                                  "auto"
                                ]
                              },
                              "input_image_mask": {
                                "type": "object",
                                "properties": {
                                  "file_id": {
                                    "type": "string"
                                  },
                                  "image_url": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "model": {
                                "type": "string",
                                "const": "gpt-image-1"
                              },
                              "moderation": {
                                "type": "string",
                                "enum": [
                                  "auto",
                                  "low"
                                ]
                              },
                              "output_compression": {
                                "type": "number"
                              },
                              "output_format": {
                                "type": "string",
                                "enum": [
                                  "png",
                                  "webp",
                                  "jpeg"
                                ]
                              },
                              "partial_images": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 3
                              },
                              "quality": {
                                "type": "string",
                                "enum": [
                                  "low",
                                  "medium",
                                  "high",
                                  "auto"
                                ]
                              },
                              "size": {
                                "type": "string",
                                "enum": [
                                  "1024x1024",
                                  "1024x1536",
                                  "1536x1024",
                                  "auto"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "top_p": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "truncation": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "auto",
                            "disabled"
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "input_tokens": {
                          "type": "integer"
                        },
                        "input_tokens_details": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "cached_tokens": {
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "cached_tokens"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "output_tokens": {
                          "type": "integer"
                        },
                        "output_tokens_details": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "reasoning_tokens": {
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "reasoning_tokens"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "total_tokens": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "input_tokens",
                        "output_tokens",
                        "total_tokens"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "model",
                    "object",
                    "output",
                    "parallel_tool_calls"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                }
              },
              "text/event-stream": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.audio.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.audio.done"
                        }
                      },
                      "required": [
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.audio.transcript.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.audio.transcript.done"
                        }
                      },
                      "required": [
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call_code.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call_code.done"
                        }
                      },
                      "required": [
                        "code",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.code_interpreter_call.interpreting"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "background": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "created_at": {
                              "type": "number"
                            },
                            "error": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "message": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "code",
                                    "message"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "id": {
                              "type": "string"
                            },
                            "incomplete_details": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "reason": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "instructions": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "message",
                                                "description": "The type of the message input. Always message."
                                              },
                                              "role": {
                                                "type": "string",
                                                "enum": [
                                                  "user",
                                                  "assistant",
                                                  "system",
                                                  "developer"
                                                ],
                                                "description": "The role of the message input."
                                              },
                                              "content": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "description": "A text input to the model."
                                                  },
                                                  {
                                                    "type": "array",
                                                    "items": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "input_text",
                                                              "description": "The type of the input item. Always input_text."
                                                            },
                                                            "text": {
                                                              "type": "string",
                                                              "description": "The text input to the model."
                                                            }
                                                          },
                                                          "required": [
                                                            "type",
                                                            "text"
                                                          ],
                                                          "additionalProperties": false,
                                                          "description": "A text input to the model."
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "input_image",
                                                              "description": "The type of the input item. Always input_image."
                                                            },
                                                            "detail": {
                                                              "type": "string",
                                                              "enum": [
                                                                "high",
                                                                "low",
                                                                "auto"
                                                              ],
                                                              "default": "auto",
                                                              "description": "The detail level of the image to be sent to the model. One of high, low, or auto."
                                                            },
                                                            "image_url": {
                                                              "type": [
                                                                "string",
                                                                "null"
                                                              ],
                                                              "description": "The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL."
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ],
                                                          "additionalProperties": false
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "input_file",
                                                              "description": "The type of the input item. Always input_file."
                                                            },
                                                            "file_data": {
                                                              "type": "string",
                                                              "description": "The content of the file to be sent to the model."
                                                            },
                                                            "filename": {
                                                              "type": "string",
                                                              "description": "The name of the file to be sent to the model."
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ],
                                                          "additionalProperties": false
                                                        }
                                                      ]
                                                    },
                                                    "description": "A list of one or many input items to the model, containing different content types."
                                                  }
                                                ],
                                                "description": "Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses."
                                              }
                                            },
                                            "required": [
                                              "role",
                                              "content"
                                            ],
                                            "additionalProperties": false,
                                            "description": "A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role. Messages with the assistant role are presumed to have been generated by the model in previous interactions."
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "message",
                                                    "description": "The type of the message input. Always message."
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "enum": [
                                                      "user",
                                                      "system",
                                                      "developer"
                                                    ],
                                                    "description": "The role of the message input."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of item."
                                                  },
                                                  "content": {
                                                    "type": "array",
                                                    "items": {
                                                      "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/0/properties/content/anyOf/1/items"
                                                    },
                                                    "description": "A list of one or many input items to the model, containing different content types."
                                                  }
                                                },
                                                "required": [
                                                  "role",
                                                  "content"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the output message."
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "const": "assistant",
                                                    "description": "The role of the output message. Always assistant."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the message input."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "message",
                                                    "description": "The type of the output message. Always message."
                                                  },
                                                  "content": {
                                                    "type": "array",
                                                    "items": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "annotations": {
                                                              "type": "array",
                                                              "items": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "end_index": {
                                                                        "type": "integer",
                                                                        "description": "The index of the last character of the URL citation in the message."
                                                                      },
                                                                      "start_index": {
                                                                        "type": "integer",
                                                                        "description": "The index of the first character of the URL citation in the message."
                                                                      },
                                                                      "title": {
                                                                        "type": "string",
                                                                        "description": "The title of the web resource."
                                                                      },
                                                                      "type": {
                                                                        "type": "string",
                                                                        "const": "url_citation",
                                                                        "description": "The type of the URL citation. Always url_citation."
                                                                      },
                                                                      "url": {
                                                                        "type": "string",
                                                                        "format": "uri",
                                                                        "description": "The URL of the web resource."
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "end_index",
                                                                      "start_index",
                                                                      "title",
                                                                      "type",
                                                                      "url"
                                                                    ],
                                                                    "additionalProperties": false,
                                                                    "description": "A citation for a web resource used to generate a model response."
                                                                  },
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "file_id": {
                                                                        "type": "string"
                                                                      },
                                                                      "index": {
                                                                        "type": "integer"
                                                                      },
                                                                      "type": {
                                                                        "type": "string",
                                                                        "const": "file_citation"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "file_id",
                                                                      "index",
                                                                      "type"
                                                                    ],
                                                                    "additionalProperties": false
                                                                  },
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "container_id": {
                                                                        "type": "string"
                                                                      },
                                                                      "start_index": {
                                                                        "type": "integer"
                                                                      },
                                                                      "end_index": {
                                                                        "type": "integer"
                                                                      },
                                                                      "file_id": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": {
                                                                        "type": "string",
                                                                        "const": "container_file_citation"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "container_id",
                                                                      "start_index",
                                                                      "end_index",
                                                                      "file_id",
                                                                      "type"
                                                                    ],
                                                                    "additionalProperties": false
                                                                  },
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "file_id": {
                                                                        "type": "string"
                                                                      },
                                                                      "index": {
                                                                        "type": "integer"
                                                                      },
                                                                      "type": {
                                                                        "type": "string",
                                                                        "const": "file_path"
                                                                      }
                                                                    },
                                                                    "required": [
                                                                      "file_id",
                                                                      "index",
                                                                      "type"
                                                                    ],
                                                                    "additionalProperties": false
                                                                  }
                                                                ]
                                                              },
                                                              "description": "The annotations of the text output."
                                                            },
                                                            "text": {
                                                              "type": "string",
                                                              "description": "The text output from the model."
                                                            },
                                                            "type": {
                                                              "type": "string",
                                                              "const": "output_text",
                                                              "description": "The type of the output text. Always output_text."
                                                            },
                                                            "logprobs": {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "bytes": {
                                                                    "type": "array",
                                                                    "items": {
                                                                      "type": "integer"
                                                                    }
                                                                  },
                                                                  "logprob": {
                                                                    "type": "number"
                                                                  },
                                                                  "token": {
                                                                    "type": "string"
                                                                  },
                                                                  "top_logprobs": {
                                                                    "type": "array",
                                                                    "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                        "bytes": {
                                                                          "type": "array",
                                                                          "items": {
                                                                            "type": "integer"
                                                                          }
                                                                        },
                                                                        "logprob": {
                                                                          "type": "number"
                                                                        },
                                                                        "token": {
                                                                          "type": "string"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "bytes",
                                                                        "logprob",
                                                                        "token"
                                                                      ],
                                                                      "additionalProperties": false
                                                                    }
                                                                  }
                                                                },
                                                                "required": [
                                                                  "bytes",
                                                                  "logprob",
                                                                  "token",
                                                                  "top_logprobs"
                                                                ],
                                                                "additionalProperties": false
                                                              }
                                                            }
                                                          },
                                                          "required": [
                                                            "annotations",
                                                            "text",
                                                            "type"
                                                          ],
                                                          "additionalProperties": false
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "refusal": {
                                                              "type": "string",
                                                              "description": "The refusal explanationfrom the model."
                                                            },
                                                            "type": {
                                                              "type": "string",
                                                              "const": "refusal",
                                                              "description": "The type of the refusal. Always refusal."
                                                            }
                                                          },
                                                          "required": [
                                                            "refusal",
                                                            "type"
                                                          ],
                                                          "additionalProperties": false
                                                        }
                                                      ],
                                                      "description": "The content of the output message."
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "role",
                                                  "status",
                                                  "type",
                                                  "content"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "queries": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "searching",
                                                      "incomplete",
                                                      "failed",
                                                      "completed"
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "file_search_call"
                                                  },
                                                  "results": {
                                                    "anyOf": [
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "attributes": {
                                                              "anyOf": [
                                                                {
                                                                  "type": "object",
                                                                  "additionalProperties": {
                                                                    "type": [
                                                                      "string",
                                                                      "number",
                                                                      "boolean"
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "null"
                                                                }
                                                              ]
                                                            },
                                                            "file_id": {
                                                              "type": "string"
                                                            },
                                                            "filename": {
                                                              "type": "string"
                                                            },
                                                            "score": {
                                                              "type": "number"
                                                            },
                                                            "text": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "queries",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "action": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "button": {
                                                            "type": "string",
                                                            "enum": [
                                                              "left",
                                                              "right",
                                                              "wheel",
                                                              "back",
                                                              "forward"
                                                            ],
                                                            "description": "Indicates which mouse button was pressed during the click."
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "const": "click",
                                                            "description": "Specifies the event type. For a click action, this property is always set to click."
                                                          },
                                                          "x": {
                                                            "type": "integer",
                                                            "description": "The x-coordinate where the click occurred."
                                                          },
                                                          "y": {
                                                            "type": "integer",
                                                            "description": "The y-coordinate where the click occurred."
                                                          }
                                                        },
                                                        "required": [
                                                          "button",
                                                          "type",
                                                          "x",
                                                          "y"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A click action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "double_click",
                                                            "description": "Specifies the event type. For a double click action, this property is always set to double_click."
                                                          },
                                                          "x": {
                                                            "type": "integer",
                                                            "description": "The x-coordinate where the double click occurred.."
                                                          },
                                                          "y": {
                                                            "type": "integer",
                                                            "description": "The y-coordinate where the double click occurred."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "x",
                                                          "y"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A double click action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "path": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "x": {
                                                                  "type": "integer",
                                                                  "description": "The y-coordinate."
                                                                },
                                                                "y": {
                                                                  "type": "integer",
                                                                  "description": "The y-coordinate."
                                                                }
                                                              },
                                                              "required": [
                                                                "x",
                                                                "y"
                                                              ],
                                                              "additionalProperties": false
                                                            },
                                                            "description": "An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg"
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "const": "drag",
                                                            "description": "Specifies the event type. For a drag action, this property is always set to drag."
                                                          }
                                                        },
                                                        "required": [
                                                          "path",
                                                          "type"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A drag action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "keys": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "description": "The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key."
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "const": "keypress",
                                                            "description": "Specifies the event type. For a keypress action, this property is always set to keypress."
                                                          }
                                                        },
                                                        "required": [
                                                          "keys",
                                                          "type"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A collection of keypresses the model would like to perform."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "move",
                                                            "description": "Specifies the event type. For a move action, this property is always set to move."
                                                          },
                                                          "x": {
                                                            "type": "integer",
                                                            "description": "The x-coordinate to move to."
                                                          },
                                                          "y": {
                                                            "type": "integer",
                                                            "description": "The y-coordinate to move to."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "x",
                                                          "y"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A mouse move action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "screenshot",
                                                            "description": "Specifies the event type. For a screenshot action, this property is always set to screenshot."
                                                          }
                                                        },
                                                        "required": [
                                                          "type"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A screenshot action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "scroll",
                                                            "description": "Specifies the event type. For a scroll action, this property is always set to scroll."
                                                          },
                                                          "scroll_x": {
                                                            "type": "integer",
                                                            "description": "The horizontal scroll distance."
                                                          },
                                                          "scroll_y": {
                                                            "type": "integer",
                                                            "description": "The vertical scroll distance."
                                                          },
                                                          "x": {
                                                            "type": "integer",
                                                            "description": "The x-coordinate where the scroll occurred."
                                                          },
                                                          "y": {
                                                            "type": "integer",
                                                            "description": "The y-coordinate where the scroll occurred."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "scroll_x",
                                                          "scroll_y",
                                                          "x",
                                                          "y"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A scroll action."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "type",
                                                            "description": "Specifies the event type. For a type action, this property is always set to type."
                                                          },
                                                          "text": {
                                                            "type": "string",
                                                            "description": "The text to type."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "text"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "An action to type in text."
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "wait",
                                                            "description": "Specifies the event type. For a wait action, this property is always set to wait."
                                                          }
                                                        },
                                                        "required": [
                                                          "type"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A wait action."
                                                      }
                                                    ]
                                                  },
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "An identifier used when responding to the tool call with output."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the computer call."
                                                  },
                                                  "pending_safety_checks": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The type of the pending safety check."
                                                        },
                                                        "id": {
                                                          "type": "string",
                                                          "description": "The ID of the pending safety check."
                                                        },
                                                        "message": {
                                                          "type": "string",
                                                          "description": "Details about the pending safety check."
                                                        }
                                                      },
                                                      "required": [
                                                        "code",
                                                        "id",
                                                        "message"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    "description": "The pending safety checks for the computer call."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the item."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "computer_call",
                                                    "description": "The type of the computer call. Always computer_call."
                                                  }
                                                },
                                                "required": [
                                                  "action",
                                                  "call_id",
                                                  "id",
                                                  "pending_safety_checks",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "The ID of the computer tool call that produced the output."
                                                  },
                                                  "output": {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "const": "computer_screenshot",
                                                        "description": "Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot."
                                                      },
                                                      "image_url": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "The URL of the screenshot image."
                                                      }
                                                    },
                                                    "required": [
                                                      "type"
                                                    ],
                                                    "additionalProperties": false,
                                                    "description": "A computer screenshot image used with the computer use tool."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "computer_call_output",
                                                    "description": "The type of the computer tool call output. Always computer_call_output."
                                                  },
                                                  "acknowledged_safety_checks": {
                                                    "anyOf": [
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "type": "string",
                                                              "description": "The ID of the pending safety check."
                                                            },
                                                            "code": {
                                                              "type": [
                                                                "string",
                                                                "null"
                                                              ],
                                                              "description": "The type of the pending safety check."
                                                            },
                                                            "message": {
                                                              "type": [
                                                                "string",
                                                                "null"
                                                              ],
                                                              "description": "Details about the pending safety check."
                                                            }
                                                          },
                                                          "required": [
                                                            "id"
                                                          ],
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The safety checks reported by the API that have been acknowledged by the developer."
                                                  },
                                                  "id": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The ID of the computer tool call output."
                                                  },
                                                  "status": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "in_progress",
                                                          "completed",
                                                          "incomplete"
                                                        ]
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The status of the message input."
                                                  }
                                                },
                                                "required": [
                                                  "call_id",
                                                  "output",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the web search tool call."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "searching",
                                                      "failed"
                                                    ],
                                                    "description": "The status of the web search tool call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "web_search_call",
                                                    "description": "The type of the web search tool call. Always web_search_call."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "arguments": {
                                                    "type": "string",
                                                    "description": "A JSON string of the arguments to pass to the function."
                                                  },
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the function tool call generated by the model."
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the function to run. "
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "function_call",
                                                    "description": "The type of the function tool call. Always function_call."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the function tool call."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the item. "
                                                  }
                                                },
                                                "required": [
                                                  "arguments",
                                                  "call_id",
                                                  "name",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the function tool call generated by the model."
                                                  },
                                                  "output": {
                                                    "type": "string",
                                                    "description": "A JSON string of the output of the function tool call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "function_call_output",
                                                    "description": "The type of the function tool call output. Always function_call_output."
                                                  },
                                                  "id": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The unique ID of the function tool call output. Populated when this item is returned via API."
                                                  },
                                                  "status": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "in_progress",
                                                          "completed",
                                                          "incomplete"
                                                        ]
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The status of the item. "
                                                  }
                                                },
                                                "required": [
                                                  "call_id",
                                                  "output",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique identifier of the reasoning content."
                                                  },
                                                  "summary": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "text": {
                                                          "type": "string",
                                                          "description": "A short summary of the reasoning used by the model when generating the response."
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "const": "summary_text",
                                                          "description": "The type of the object. Always summary_text."
                                                        }
                                                      },
                                                      "required": [
                                                        "text",
                                                        "type"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    "description": "Reasoning text contents."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "reasoning",
                                                    "description": "The type of the object. Always reasoning."
                                                  },
                                                  "encrypted_content": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the item."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "summary",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "result": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "failed",
                                                      "generating"
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "image_generation_call"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "result",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The code to run, or null if not available."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the code interpreter tool call."
                                                  },
                                                  "outputs": {
                                                    "anyOf": [
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "anyOf": [
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "logs": {
                                                                  "type": "string",
                                                                  "description": "The logs output from the code interpreter."
                                                                },
                                                                "type": {
                                                                  "type": "string",
                                                                  "const": "logs",
                                                                  "description": "The type of the output. Always 'logs'."
                                                                }
                                                              },
                                                              "required": [
                                                                "logs",
                                                                "type"
                                                              ],
                                                              "additionalProperties": false
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string",
                                                                  "const": "image"
                                                                },
                                                                "url": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "type",
                                                                "url"
                                                              ],
                                                              "additionalProperties": false
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The outputs generated by the code interpreter, such as logs or images. Can be null if no outputs are available."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete",
                                                      "interpreting",
                                                      "failed"
                                                    ],
                                                    "description": "The status of the code interpreter tool call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "code_interpreter_call",
                                                    "description": "The type of the code interpreter tool call. Always code_interpreter_call."
                                                  },
                                                  "container_id": {
                                                    "type": "string",
                                                    "description": "The ID of the container used to run the code."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "status",
                                                  "type",
                                                  "container_id"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "action": {
                                                    "type": "object",
                                                    "properties": {
                                                      "command": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "description": "The command to run."
                                                      },
                                                      "env": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "type": "string"
                                                        },
                                                        "description": "Environment variables to set for the command."
                                                      },
                                                      "type": {
                                                        "type": "string",
                                                        "const": "exec",
                                                        "description": "The type of the local shell action. Always exec."
                                                      },
                                                      "timeout_ms": {
                                                        "anyOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "null"
                                                          }
                                                        ],
                                                        "description": "Optional timeout in milliseconds for the command."
                                                      },
                                                      "user": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ],
                                                        "description": "Optional user to run the command as."
                                                      },
                                                      "working_directory": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ],
                                                        "description": "Optional working directory to run the command in."
                                                      }
                                                    },
                                                    "required": [
                                                      "command",
                                                      "env",
                                                      "type"
                                                    ],
                                                    "additionalProperties": false,
                                                    "description": "Execute a shell command on the server."
                                                  },
                                                  "call_id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the local shell tool call generated by the model."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the local shell call."
                                                  },
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "in_progress",
                                                      "completed",
                                                      "incomplete"
                                                    ],
                                                    "description": "The status of the local shell call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "local_shell_call",
                                                    "description": "The type of the local shell call. Always local_shell_call."
                                                  }
                                                },
                                                "required": [
                                                  "action",
                                                  "call_id",
                                                  "id",
                                                  "status",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the local shell tool call generated by the model."
                                                  },
                                                  "output": {
                                                    "type": "string",
                                                    "description": "A JSON string of the output of the local shell tool call."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "local_shell_call_output",
                                                    "description": "The type of the local shell tool call output. Always local_shell_call_output."
                                                  },
                                                  "status": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "in_progress",
                                                          "completed",
                                                          "incomplete"
                                                        ]
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "description": "The status of the item."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "output",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the list."
                                                  },
                                                  "server_label": {
                                                    "type": "string",
                                                    "description": "The label of the MCP server."
                                                  },
                                                  "tools": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "input_schema": {},
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The name of the tool."
                                                        },
                                                        "annotations": {},
                                                        "description": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ],
                                                          "description": "The description of the tool."
                                                        }
                                                      },
                                                      "required": [
                                                        "name"
                                                      ],
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "mcp_list_tools",
                                                    "description": "The type of the item. Always mcp_list_tools."
                                                  },
                                                  "error": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "Error message if the server could not list tools."
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "server_label",
                                                  "tools",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "arguments": {
                                                    "type": "string",
                                                    "description": "A JSON string of arguments for the tool."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the approval request."
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "server_label": {
                                                    "type": "string",
                                                    "description": "The name of the tool to run."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "mcp_approval_request",
                                                    "description": "The type of the item. Always mcp_approval_request."
                                                  }
                                                },
                                                "required": [
                                                  "arguments",
                                                  "id",
                                                  "name",
                                                  "server_label",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "approval_request_id": {
                                                    "type": "string",
                                                    "description": "The ID of the approval request being answered."
                                                  },
                                                  "approve": {
                                                    "type": "boolean",
                                                    "description": "Whether the request was approved."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "mcp_approval_response",
                                                    "description": "The type of the item. Always mcp_approval_response."
                                                  },
                                                  "id": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The unique ID of the approval response"
                                                  },
                                                  "reason": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "Optional reason for the decision."
                                                  }
                                                },
                                                "required": [
                                                  "approval_request_id",
                                                  "approve",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "arguments": {
                                                    "type": "string",
                                                    "description": "A JSON string of the arguments passed to the tool."
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The unique ID of the tool call."
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the tool that was run."
                                                  },
                                                  "server_label": {
                                                    "type": "string",
                                                    "description": "The label of the MCP server running the tool."
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "const": "mcp_call",
                                                    "description": "The type of the item. Always mcp_call."
                                                  },
                                                  "error": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The error from the tool call, if any."
                                                  },
                                                  "output": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The output from the tool call."
                                                  }
                                                },
                                                "required": [
                                                  "arguments",
                                                  "id",
                                                  "name",
                                                  "server_label",
                                                  "type"
                                                ],
                                                "additionalProperties": false
                                              }
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "The ID of the item to reference."
                                              },
                                              "type": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "const": "item_reference"
                                                  },
                                                  {
                                                    "type": "null"
                                                  }
                                                ],
                                                "description": "The type of item to reference. Always item_reference."
                                              }
                                            },
                                            "required": [
                                              "id"
                                            ],
                                            "additionalProperties": false,
                                            "description": "An internal identifier for an item to reference."
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "max_output_tokens": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "metadata": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "model": {
                              "type": "string"
                            },
                            "object": {
                              "type": "string",
                              "const": "response"
                            },
                            "output": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "role": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/role"
                                      },
                                      "type": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/type"
                                      },
                                      "content": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/1/properties/content"
                                      }
                                    },
                                    "required": [
                                      "role",
                                      "type",
                                      "content"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/id"
                                      },
                                      "queries": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/queries"
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "in_progress",
                                          "searching",
                                          "incomplete",
                                          "failed",
                                          "completed"
                                        ]
                                      },
                                      "type": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/type"
                                      },
                                      "results": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/2/properties/results"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "queries",
                                      "status",
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/3"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/4"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/5"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/6"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/8"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/9"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/10"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/11"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/id"
                                      },
                                      "server_label": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/server_label"
                                      },
                                      "tools": {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/tools/items"
                                        }
                                      },
                                      "type": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/type"
                                      },
                                      "error": {
                                        "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/13/properties/error"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "server_label",
                                      "tools",
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/14"
                                  },
                                  {
                                    "$ref": "#/anyOf/9/properties/response/properties/instructions/anyOf/0/anyOf/1/items/anyOf/1/anyOf/16"
                                  }
                                ]
                              }
                            },
                            "output_text": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "parallel_tool_calls": {
                              "type": "boolean"
                            },
                            "previous_response_id": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "prompt": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "variables": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "additionalProperties": {}
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "version": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "reasoning": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "effort": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
                                    },
                                    "summary": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "auto",
                                            "concise",
                                            "detailed"
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process."
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "service_tier": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "completed",
                                "failed",
                                "in_progress",
                                "cancelled",
                                "queued",
                                "incomplete"
                              ]
                            },
                            "temperature": {
                              "anyOf": [
                                {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 2
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "text": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "format": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "text",
                                              "description": "The type of response format being defined. Always text."
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "Default response format. Used to generate text responses."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "json_object",
                                              "description": "The type of response format being defined. Always json_object."
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "An older method of generating JSON responses. Using json_schema is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                                            },
                                            "schema": {
                                              "type": "object",
                                              "additionalProperties": {},
                                              "description": "The schema for the response format, described as a JSON Schema object."
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "json_schema"
                                            },
                                            "strict": {
                                              "type": [
                                                "boolean",
                                                "null"
                                              ],
                                              "description": "Whether to enable strict schema adherence when generating the output. If set to True, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is True."
                                            },
                                            "description": {
                                              "type": "string",
                                              "description": "A description of what the response format is for, used by the model to determine how to respond in the format."
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "schema",
                                            "type"
                                          ],
                                          "additionalProperties": false,
                                          "description": "JSON Schema response format. Used to generate structured JSON responses."
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "tool_choice": {
                              "anyOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "auto",
                                        "required"
                                      ],
                                      "description": "Controls which (if any) tool is called by the model.\n\nnone means the model will not call any tool and instead generates a message.\n\nauto means the model can pick between generating a message or calling one or more tools.\n\nrequired means the model must call one or more tools."
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "web_search_preview",
                                            "web_search_preview_2025_03_11",
                                            "computer_use_preview",
                                            "code_interpreter",
                                            "mcp",
                                            "file_search",
                                            "image_generation"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "description": "Indicates that the model should use a built-in tool to generate a response."
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the function to call."
                                        },
                                        "type": {
                                          "type": "string",
                                          "const": "function",
                                          "description": "For function calling, the type is always function."
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "description": "Use this option to force the model to call a specific function."
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "tools": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "web_search_preview",
                                          "web_search_preview_2025_03_11"
                                        ],
                                        "description": "The type of the web search tool. One of web_search_preview or web_search_preview_2025_03_11."
                                      },
                                      "search_context_size": {
                                        "type": "string",
                                        "enum": [
                                          "low",
                                          "medium",
                                          "high"
                                        ],
                                        "description": "High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default."
                                      },
                                      "user_location": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "approximate",
                                                "description": "The type of location approximation. Always approximate."
                                              },
                                              "city": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Free text input for the city of the user, e.g. San Francisco."
                                              },
                                              "country": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "The two-letter ISO country code of the user, e.g. US."
                                              },
                                              "region": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Free text input for the region of the user, e.g. California."
                                              },
                                              "timezone": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "The IANA timezone of the user, e.g. America/Los_Angeles."
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "The user's location"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false,
                                    "description": "This tool searches the web for relevant results to use in a response."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "display_height": {
                                        "type": "integer",
                                        "description": "The height of the computer display."
                                      },
                                      "display_width": {
                                        "type": "integer",
                                        "description": "The width of the computer display."
                                      },
                                      "environment": {
                                        "type": "string",
                                        "enum": [
                                          "windows",
                                          "mac",
                                          "linux",
                                          "ubuntu",
                                          "browser"
                                        ],
                                        "description": "The type of computer environment to control."
                                      },
                                      "type": {
                                        "type": "string",
                                        "const": "computer_use_preview",
                                        "description": "The type of the computer use tool. Always computer_use_preview."
                                      }
                                    },
                                    "required": [
                                      "display_height",
                                      "display_width",
                                      "environment",
                                      "type"
                                    ],
                                    "additionalProperties": false,
                                    "description": "A tool that controls a virtual computer."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "server_label": {
                                        "type": "string",
                                        "description": "A label for this MCP server, used to identify it in tool calls."
                                      },
                                      "server_url": {
                                        "type": "string",
                                        "description": "The URL for the MCP server."
                                      },
                                      "type": {
                                        "type": "string",
                                        "const": "mcp",
                                        "description": "The type of the MCP tool. Always mcp."
                                      },
                                      "allowed_tools": {
                                        "anyOf": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "A string array of allowed tool names"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "tool_names": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "description": "List of allowed tool names."
                                                  }
                                                },
                                                "additionalProperties": false,
                                                "description": "A filter object to specify which tools are allowed."
                                              }
                                            ]
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "List of allowed tool names or a filter object."
                                      },
                                      "headers": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "Optional HTTP headers to send to the MCP server. Use for authentication or other purposes."
                                      },
                                      "require_approval": {
                                        "anyOf": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "always",
                                                  "never"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "always": {
                                                    "type": "object",
                                                    "properties": {
                                                      "tool_names": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "description": "List of tools that require approval."
                                                      }
                                                    },
                                                    "additionalProperties": false,
                                                    "description": "A list of tools that always require approval."
                                                  },
                                                  "never": {
                                                    "type": "object",
                                                    "properties": {
                                                      "tool_names": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "description": "List of tools that do not require approval."
                                                      }
                                                    },
                                                    "additionalProperties": false,
                                                    "description": "A list of tools that never require approval."
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            ]
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "Specify which of the MCP server's tools require approval."
                                      }
                                    },
                                    "required": [
                                      "server_label",
                                      "server_url",
                                      "type"
                                    ],
                                    "additionalProperties": false,
                                    "description": "Give the model access to additional tools via remote Model Context Protocol (MCP) servers."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "code_interpreter",
                                        "description": "The type of the code interpreter tool. Always code_interpreter."
                                      },
                                      "container": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "auto"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          }
                                        ],
                                        "description": "The container ID."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "container"
                                    ],
                                    "additionalProperties": false,
                                    "description": "A tool that runs Python code to help generate a response to a prompt."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "local_shell",
                                        "description": "The type of the local shell tool. Always local_shell."
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false,
                                    "description": "A tool that allows the model to execute shell commands in a local environment."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the function to call."
                                      },
                                      "parameters": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "additionalProperties": {}
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "A JSON schema object describing the parameters of the function."
                                      },
                                      "strict": {
                                        "type": [
                                          "boolean",
                                          "null"
                                        ],
                                        "description": "Whether to enforce strict parameter validation."
                                      },
                                      "type": {
                                        "type": "string",
                                        "const": "function",
                                        "description": "The type of the function tool. Always function."
                                      },
                                      "description": {
                                        "anyOf": [
                                          {
                                            "anyOf": [
                                              {
                                                "not": {}
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ],
                                        "description": "A description of the function. Used by the model to determine whether or not to call the function."
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "file_search"
                                      },
                                      "vector_store_ids": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "filters": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "eq",
                                                  "ne",
                                                  "gt",
                                                  "gte",
                                                  "lt",
                                                  "lte"
                                                ]
                                              },
                                              "value": {
                                                "type": [
                                                  "string",
                                                  "number",
                                                  "boolean"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "key",
                                              "type",
                                              "value"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "and",
                                                  "or"
                                                ]
                                              },
                                              "filters": {
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/anyOf/9/properties/response/properties/tools/items/anyOf/6/properties/filters/anyOf/0"
                                                    },
                                                    {
                                                      "$ref": "#/anyOf/9/properties/response/properties/tools/items/anyOf/6/properties/filters/anyOf/1"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "filters"
                                            ],
                                            "additionalProperties": false
                                          }
                                        ]
                                      },
                                      "max_num_results": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 50
                                      },
                                      "ranking_options": {
                                        "type": "object",
                                        "properties": {
                                          "ranker": {
                                            "type": "string",
                                            "enum": [
                                              "auto",
                                              "default-2024-11-15"
                                            ]
                                          },
                                          "score_threshold": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 1
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "vector_store_ids"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "image_generation"
                                      },
                                      "background": {
                                        "type": "string",
                                        "enum": [
                                          "transparent",
                                          "opaque",
                                          "auto"
                                        ]
                                      },
                                      "input_image_mask": {
                                        "type": "object",
                                        "properties": {
                                          "file_id": {
                                            "type": "string"
                                          },
                                          "image_url": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "model": {
                                        "type": "string",
                                        "const": "gpt-image-1"
                                      },
                                      "moderation": {
                                        "type": "string",
                                        "enum": [
                                          "auto",
                                          "low"
                                        ]
                                      },
                                      "output_compression": {
                                        "type": "number"
                                      },
                                      "output_format": {
                                        "type": "string",
                                        "enum": [
                                          "png",
                                          "webp",
                                          "jpeg"
                                        ]
                                      },
                                      "partial_images": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 3
                                      },
                                      "quality": {
                                        "type": "string",
                                        "enum": [
                                          "low",
                                          "medium",
                                          "high",
                                          "auto"
                                        ]
                                      },
                                      "size": {
                                        "type": "string",
                                        "enum": [
                                          "1024x1024",
                                          "1024x1536",
                                          "1536x1024",
                                          "auto"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "top_p": {
                              "type": [
                                "number",
                                "null"
                              ]
                            },
                            "truncation": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto",
                                    "disabled"
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "usage": {
                              "type": "object",
                              "properties": {
                                "input_tokens": {
                                  "type": "integer"
                                },
                                "input_tokens_details": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "cached_tokens": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "cached_tokens"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "output_tokens": {
                                  "type": "integer"
                                },
                                "output_tokens_details": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "reasoning_tokens": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "reasoning_tokens"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "total_tokens": {
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "input_tokens",
                                "output_tokens",
                                "total_tokens"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "created_at",
                            "id",
                            "model",
                            "object",
                            "output",
                            "parallel_tool_calls"
                          ],
                          "additionalProperties": false
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.completed"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "param": {
                          "type": "string"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "error"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "param",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.file_search_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.file_search_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.file_search_call.searching"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.function_call_arguments.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "arguments": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.function_call_arguments.done"
                        }
                      },
                      "required": [
                        "arguments",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.in_progress"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.failed"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.incomplete"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item": {
                          "$ref": "#/anyOf/9/properties/response/properties/output/items"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_item.added"
                        }
                      },
                      "required": [
                        "item",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item": {
                          "$ref": "#/anyOf/9/properties/response/properties/output/items"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_item.done"
                        }
                      },
                      "required": [
                        "item",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "summary_index": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_summary_text.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "summary_index",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "summary_index": {
                          "type": "number"
                        },
                        "text": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_summary_text.done"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "summary_index",
                        "text",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_text.delta"
                        }
                      },
                      "required": [
                        "content_index",
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "text": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_text.done"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "text",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.refusal.delta"
                        }
                      },
                      "required": [
                        "content_index",
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "refusal": {
                          "type": "string"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.refusal.done"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "output_index",
                        "refusal",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.web_search_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.web_search_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.web_search_call.searching"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.image_generation_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.image_generation_call.generating"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.image_generation_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "partial_image_b64": {
                          "type": "string"
                        },
                        "partial_image_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.image_generation_call.partial_image"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "partial_image_b64",
                        "partial_image_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call_arguments.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "arguments": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call_arguments.done"
                        }
                      },
                      "required": [
                        "arguments",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call.failed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_call.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_list_tools.completed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_list_tools.failed"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.mcp_list_tools.in_progress"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "annotation": {},
                        "annotation_index": {
                          "type": "number"
                        },
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_text.annotation.added"
                        }
                      },
                      "required": [
                        "annotation_index",
                        "content_index",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.queued"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.custom_tool_call_input.delta"
                        }
                      },
                      "required": [
                        "delta",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "input": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.custom_tool_call_input.done"
                        }
                      },
                      "required": [
                        "input",
                        "item_id",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "part": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "const": "summary_text"
                            }
                          },
                          "required": [
                            "text",
                            "type"
                          ],
                          "additionalProperties": false
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "summary_index": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_summary_part.done"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "part",
                        "sequence_number",
                        "summary_index",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "logprobs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "token": {
                                "type": "string"
                              },
                              "bytes": {
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "logprob": {
                                "type": "number"
                              },
                              "top_logprobs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "token": {
                                      "type": "string"
                                    },
                                    "bytes": {
                                      "type": "array",
                                      "items": {
                                        "type": "number"
                                      }
                                    },
                                    "logprob": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "token",
                                    "bytes",
                                    "logprob"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            "required": [
                              "token",
                              "bytes",
                              "logprob",
                              "top_logprobs"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "text": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_text.done"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "logprobs",
                        "output_index",
                        "sequence_number",
                        "text",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "part": {
                          "$ref": "#/anyOf/46/properties/part"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "summary_index": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.reasoning_summary_part.added"
                        }
                      },
                      "required": [
                        "item_id",
                        "output_index",
                        "part",
                        "sequence_number",
                        "summary_index",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "delta": {
                          "type": "string"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "logprobs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/anyOf/47/properties/logprobs/items"
                          }
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.output_text.delta"
                        }
                      },
                      "required": [
                        "content_index",
                        "delta",
                        "item_id",
                        "logprobs",
                        "output_index",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "part": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "file_id": {
                                            "type": "string"
                                          },
                                          "filename": {
                                            "type": "string"
                                          },
                                          "index": {
                                            "type": "number"
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "file_citation"
                                          }
                                        },
                                        "required": [
                                          "file_id",
                                          "filename",
                                          "index",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "end_index": {
                                            "type": "number"
                                          },
                                          "start_index": {
                                            "type": "number"
                                          },
                                          "title": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "url_citation"
                                          },
                                          "url": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "end_index",
                                          "start_index",
                                          "title",
                                          "type",
                                          "url"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "container_id": {
                                            "type": "string"
                                          },
                                          "end_index": {
                                            "type": "number"
                                          },
                                          "file_id": {
                                            "type": "string"
                                          },
                                          "filename": {
                                            "type": "string"
                                          },
                                          "start_index": {
                                            "type": "number"
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "container_file_citation"
                                          }
                                        },
                                        "required": [
                                          "container_id",
                                          "end_index",
                                          "file_id",
                                          "filename",
                                          "start_index",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "file_id": {
                                            "type": "string"
                                          },
                                          "index": {
                                            "type": "number"
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "file_path"
                                          }
                                        },
                                        "required": [
                                          "file_id",
                                          "index",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "text": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "const": "output_text"
                                },
                                "logprobs": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/anyOf/47/properties/logprobs/items"
                                  }
                                }
                              },
                              "required": [
                                "annotations",
                                "text",
                                "type",
                                "logprobs"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "refusal": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "const": "refusal"
                                }
                              },
                              "required": [
                                "refusal",
                                "type"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "const": "reasoning_text"
                                }
                              },
                              "required": [
                                "text",
                                "type"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.content_part.done"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "output_index",
                        "part",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "$ref": "#/anyOf/9/properties/response"
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.created"
                        }
                      },
                      "required": [
                        "response",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "content_index": {
                          "type": "number"
                        },
                        "item_id": {
                          "type": "string"
                        },
                        "output_index": {
                          "type": "number"
                        },
                        "part": {
                          "anyOf": [
                            {
                              "$ref": "#/anyOf/50/properties/part/anyOf/0"
                            },
                            {
                              "$ref": "#/anyOf/50/properties/part/anyOf/1"
                            },
                            {
                              "$ref": "#/anyOf/50/properties/part/anyOf/2"
                            }
                          ]
                        },
                        "sequence_number": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "const": "response.content_part.added"
                        }
                      },
                      "required": [
                        "content_index",
                        "item_id",
                        "output_index",
                        "part",
                        "sequence_number",
                        "type"
                      ],
                      "additionalProperties": false
                    }
                  ],
                  "$schema": "http://json-schema.org/draft-07/schema#"
                }
              }
            }
          }
        },
        "x-hideTryItPanel": true,
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "async function main() {\n  const response = await fetch('https://api.aimlapi.com/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer <YOUR_AIMLAPI_KEY>',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      model: 'openai/gpt-4o',\n      messages:[\n          {\n              role:'user',\n              content: 'Hello'\n          }\n      ],\n      modalities: ['text', 'audio'],\n      audio: { voice: 'alloy', format: 'pcm16' },\n    }),\n  });\n\n  const data = await response.json();\n  console.log(JSON.stringify(data, null, 2));\n}\n\nmain();"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    \"https://api.aimlapi.com/v1/chat/completions\",\n    headers={\n        \"Content-Type\":\"application/json\", \n        \"Authorization\":\"Bearer <YOUR_AIMLAPI_KEY>\",\n    },\n    json={\n        \"model\":\"openai/gpt-4o\",\n        \"messages\":[\n            {\n                \"role\":\"user\",\n                \"content\":\"Hello\"\n            }\n        ],\n        \"modalities\": [\"text\", \"audio\"],\n        \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n    }\n)\n\ndata = response.json()\nprint(data)"
          },
          {
            "lang": "cURL",
            "source": "curl -L \\\n  --request POST \\\n  --url 'https://api.aimlapi.com/v1/chat/completions' \\\n  --header 'Authorization: Bearer <YOUR_AIMLAPI_KEY>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"model\": \"openai/gpt-4o\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"hi\"\n      }\n    ],\n    \"modalities\": [\"text\", \"audio\"], \n    \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n  }'"
          },
          {
            "lang": "HTTP",
            "source": "POST /v1/chat/completions HTTP/1.1\nHost: api.aimlapi.com\nAuthorization: Bearer <YOUR_AIMLAPI_KEY>\nContent-Type: application/json\nAccept: */*\nContent-Length: 59\n\n{\n  \"model\": \"openai/gpt-4o\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"hi\"\n    }\n  ],\n  \"modalities\": [\"text\", \"audio\"], \n  \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n}"
          }
        ]
      }
    },
    "/v1/chat/completions": {
      "post": {
        "operationId": "_v1_chat_completions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "enum": [
                      "o1-pro",
                      "openai/o1-pro"
                    ]
                  },
                  "frequency_penalty": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2,
                        "maximum": 2
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim."
                  },
                  "logit_bias": {
                    "anyOf": [
                      {
                        "type": "object",
                        "additionalProperties": {
                          "type": "number",
                          "minimum": -100,
                          "maximum": 100
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Modify the likelihood of specified tokens appearing in the completion.\n  \n  Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token."
                  },
                  "logprobs": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Whether to return log probabilities of the output tokens or not. If True, returns the log probabilities of each output token returned in the content of message."
                  },
                  "top_logprobs": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 20
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to True if this parameter is used."
                  },
                  "max_tokens": {
                    "type": "number",
                    "minimum": 1,
                    "description": "The maximum number of tokens that can be generated in the chat completion. This value can be used to control costs for text generated via API."
                  },
                  "max_completion_tokens": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and reasoning tokens."
                  },
                  "n": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "minimum": 1
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs."
                  },
                  "prediction": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "content",
                        "description": "The type of the predicted content you want to provide."
                      },
                      "content": {
                        "anyOf": [
                          {
                            "type": "string",
                            "description": "The content used for a Predicted Output. This is often the text of a file you are regenerating with minor changes."
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "text",
                                  "description": "The type of the content part."
                                },
                                "text": {
                                  "type": "string",
                                  "description": "The text content."
                                }
                              },
                              "required": [
                                "type",
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            "description": "An array of content parts with a defined type. Supported options differ based on the model being used to generate the response. Can contain text inputs."
                          }
                        ],
                        "description": "The content that should be matched when generating a model response. If generated tokens would match this content, the entire model response can be returned much more quickly."
                      }
                    },
                    "required": [
                      "type",
                      "content"
                    ],
                    "additionalProperties": false,
                    "description": "Configuration for a Predicted Output, which can greatly improve response times when large parts of the model response are known ahead of time."
                  },
                  "presence_penalty": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2,
                        "maximum": 2
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics."
                  },
                  "seed": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result."
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "system",
                              "description": "The role of the author of the message — in this case, the system."
                            },
                            "content": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "text",
                                        "description": "The type of the content part."
                                      },
                                      "text": {
                                        "type": "string",
                                        "description": "The text content."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "text"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              ],
                              "description": "The contents of the system message."
                            },
                            "name": {
                              "type": "string",
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "role",
                            "content"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "user",
                              "description": "The role of the author of the message — in this case, the user"
                            },
                            "content": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "image_url"
                                          },
                                          "image_url": {
                                            "type": "object",
                                            "properties": {
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Either a URL of the image or the base64 encoded image data. "
                                              },
                                              "detail": {
                                                "type": "string",
                                                "enum": [
                                                  "low",
                                                  "high",
                                                  "auto"
                                                ],
                                                "description": "Specifies the detail level of the image. Currently supports JPG/JPEG, PNG, GIF, and WEBP formats."
                                              }
                                            },
                                            "required": [
                                              "url"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "image_url"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "$ref": "#/properties/messages/items/anyOf/0/properties/content/anyOf/1/items"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "input_audio",
                                            "description": "The type of the content part."
                                          },
                                          "input_audio": {
                                            "type": "object",
                                            "properties": {
                                              "data": {
                                                "type": "string",
                                                "description": "Base64 encoded audio data."
                                              },
                                              "format": {
                                                "type": "string",
                                                "enum": [
                                                  "wav",
                                                  "mp3"
                                                ],
                                                "description": "The format of the encoded audio data. Currently supports \"wav\" and \"mp3\"."
                                              }
                                            },
                                            "required": [
                                              "data",
                                              "format"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "input_audio"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "file",
                                            "description": "The type of the content part."
                                          },
                                          "file": {
                                            "type": "object",
                                            "properties": {
                                              "file_data": {
                                                "type": "string",
                                                "description": "The file data, encoded in base64 and passed to the model as a string. Only PDF format is supported.\n        - Maximum size per file: Up to 512 MB and up to 2 million tokens.\n        - Maximum number of files: Up to 20 files can be attached to a single GPT application or Assistant. This limit applies throughout the application's lifetime.\n        - Maximum total file storage per user: 10 GB."
                                              },
                                              "filename": {
                                                "type": "string",
                                                "description": "The file name specified by the user. This name can be used to reference the file when interacting with the model, especially if multiple files are uploaded."
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "file"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                }
                              ],
                              "description": "The contents of the user message."
                            },
                            "name": {
                              "type": "string",
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "role",
                            "content"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "tool",
                              "description": "The role of the author of the message — in this case, the tool."
                            },
                            "content": {
                              "type": "string",
                              "description": "The contents of the tool message."
                            },
                            "tool_call_id": {
                              "type": "string",
                              "description": "Tool call that this message is responding to."
                            },
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "role",
                            "content",
                            "tool_call_id"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "function"
                            },
                            "content": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role",
                            "content",
                            "name"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "assistant",
                              "description": "The role of the author of the message — in this case, the Assistant."
                            },
                            "content": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "description": "The contents of the Assistant message."
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "$ref": "#/properties/messages/items/anyOf/0/properties/content/anyOf/1/items"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "refusal": {
                                            "type": "string",
                                            "description": "The refusal message generated by the model."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "refusal",
                                            "description": "The type of the content part."
                                          }
                                        },
                                        "required": [
                                          "refusal",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  "description": "An array of content parts with a defined type. Can be one or more of type text, or exactly one of type refusal."
                                }
                              ],
                              "description": "The contents of the Assistant message. Required unless tool_calls or function_call is specified."
                            },
                            "tool_calls": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the tool call."
                                  },
                                  "type": {
                                    "type": "string",
                                    "const": "function",
                                    "description": "The type of the tool. Currently, only function is supported."
                                  },
                                  "function": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the function to call."
                                      },
                                      "arguments": {
                                        "type": "string",
                                        "description": "The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function."
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "arguments"
                                    ],
                                    "additionalProperties": false,
                                    "description": "The function that the model called."
                                  }
                                },
                                "required": [
                                  "id",
                                  "type",
                                  "function"
                                ],
                                "additionalProperties": false
                              },
                              "description": "The tool calls generated by the model, such as function calls."
                            },
                            "refusal": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The refusal message by the Assistant."
                            },
                            "audio": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Unique identifier for a previous audio response from the model."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "Data about a previous audio response from the model."
                            },
                            "name": {
                              "type": "string",
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "role"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "content": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/properties/messages/items/anyOf/0/properties/content/anyOf/1/items"
                                  }
                                }
                              ],
                              "description": "The contents of the developer message."
                            },
                            "role": {
                              "type": "string",
                              "const": "developer",
                              "description": "The role of the author of the message — in this case, the developer."
                            },
                            "name": {
                              "type": "string",
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "content",
                            "role"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "description": "A list of messages comprising the conversation so far. Depending on the model you use, different message types (modalities) are supported, like text, documents (txt, pdf), images, and audio."
                  },
                  "stream": {
                    "type": "boolean",
                    "default": false,
                    "description": "If set to True, the model response data will be streamed to the client as it is generated using server-sent events."
                  },
                  "stream_options": {
                    "type": "object",
                    "properties": {
                      "include_usage": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "include_usage"
                    ],
                    "additionalProperties": false
                  },
                  "top_p": {
                    "type": "number",
                    "minimum": 0.1,
                    "maximum": 1,
                    "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n  We generally recommend altering this or temperature but not both."
                  },
                  "temperature": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 2,
                    "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both."
                  },
                  "stop": {
                    "anyOf": [
                      {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence."
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "function",
                          "description": "The type of the tool. Currently, only function is supported."
                        },
                        "function": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "A description of what the function does, used by the model to choose when and how to call the function."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                            },
                            "parameters": {
                              "type": "object",
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "not": {}
                                  },
                                  {}
                                ],
                                "description": "The parameters the functions accepts, described as a JSON Schema object."
                              }
                            },
                            "strict": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Whether to enable strict schema adherence when generating the function call. If set to True, the model will follow the exact schema defined in the parameters field. Only a subset of JSON Schema is supported when strict is True."
                            }
                          },
                          "required": [
                            "name",
                            "parameters"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "type",
                        "function"
                      ],
                      "additionalProperties": false
                    },
                    "description": "A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported."
                  },
                  "tool_choice": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "none",
                          "auto",
                          "required"
                        ],
                        "description": "none means the model will not call any tool and instead generates a message. auto means the model can pick between generating a message or calling one or more tools. required means the model must call one or more tools."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "function"
                          },
                          "function": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "type",
                          "function"
                        ],
                        "additionalProperties": false,
                        "description": "Specifies a tool the model should use. Use to force the model to call a specific function."
                      }
                    ],
                    "description": "Controls which (if any) tool is called by the model. none means the model will not call any tool and instead generates a message. auto means the model can pick between generating a message or calling one or more tools. required means the model must call one or more tools. Specifying a particular tool via {\"type\": \"function\", \"function\": {\"name\": \"my_function\"}} forces the model to call that tool.\n  none is the default when no tools are present. auto is the default if tools are present."
                  },
                  "parallel_tool_calls": {
                    "type": "boolean",
                    "description": "Whether to enable parallel function calling during tool use."
                  },
                  "reasoning_effort": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ],
                    "description": "Constrains effort on reasoning for reasoning models. Currently supported values are low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
                  },
                  "response_format": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "text",
                            "description": "The type of response format being defined. Always text."
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false,
                        "description": "Default response format. Used to generate text responses."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "json_object",
                            "description": "The type of response format being defined. Always json_object."
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false,
                        "description": "An older method of generating JSON responses. Using json_schema is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "json_schema",
                            "description": "The type of response format being defined. Always json_schema."
                          },
                          "json_schema": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                              },
                              "schema": {
                                "type": "object",
                                "additionalProperties": {},
                                "description": "The schema for the response format, described as a JSON Schema object."
                              },
                              "strict": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Whether to enable strict schema adherence when generating the output. If set to True, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is True."
                              },
                              "description": {
                                "type": "string",
                                "description": "A description of what the response format is for, used by the model to determine how to respond in the format."
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "additionalProperties": false,
                            "description": "JSON Schema response format. Used to generate structured JSON responses."
                          }
                        },
                        "required": [
                          "type",
                          "json_schema"
                        ],
                        "additionalProperties": false,
                        "description": "JSON Schema response format. Used to generate structured JSON responses."
                      }
                    ],
                    "description": "An object specifying the format that the model must output."
                  },
                  "audio": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "format": {
                            "type": "string",
                            "enum": [
                              "wav",
                              "mp3",
                              "flac",
                              "opus",
                              "pcm16"
                            ],
                            "description": "Specifies the output audio format. Must be one of wav, mp3, flac, opus, or pcm16."
                          },
                          "voice": {
                            "type": "string",
                            "enum": [
                              "alloy",
                              "ash",
                              "ballad",
                              "coral",
                              "echo",
                              "fable",
                              "nova",
                              "onyx",
                              "sage",
                              "shimmer"
                            ],
                            "description": "The voice the model uses to respond. Supported voices are alloy, ash, ballad, coral, echo, fable, nova, onyx, sage, and shimmer."
                          }
                        },
                        "required": [
                          "format",
                          "voice"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Parameters for audio output. Required when audio output is requested with modalities: [\"audio\"]."
                  },
                  "modalities": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "text",
                            "audio"
                          ]
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Output types that you would like the model to generate. Most models are capable of generating text, which is the default:\n  \n  [\"text\"]\n  \n  The gpt-4o-audio-preview model can also be used to generate audio. To request that this model generate both text and audio responses, you can use:\n  \n  [\"text\", \"audio\"]"
                  },
                  "web_search_options": {
                    "type": "object",
                    "properties": {
                      "search_context_size": {
                        "type": "string",
                        "enum": [
                          "low",
                          "medium",
                          "high"
                        ],
                        "description": "High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default."
                      },
                      "user_location": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "approximate": {
                                "type": "object",
                                "properties": {
                                  "city": {
                                    "type": "string",
                                    "description": "Free text input for the city of the user, e.g. San Francisco."
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "The two-letter ISO country code of the user, e.g. US."
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "Free text input for the region of the user, e.g. California."
                                  },
                                  "timezone": {
                                    "type": "string",
                                    "description": "The IANA timezone of the user, e.g. America/Los_Angeles."
                                  }
                                },
                                "additionalProperties": false,
                                "description": "Approximate location parameters for the search."
                              },
                              "type": {
                                "type": "string",
                                "const": "approximate",
                                "description": "The type of location approximation. Always approximate."
                              }
                            },
                            "required": [
                              "approximate",
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "description": "Approximate location parameters for the search."
                      }
                    },
                    "additionalProperties": false,
                    "description": "This tool searches the web for relevant results to use in a response."
                  }
                },
                "required": [
                  "model",
                  "messages"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "o1-pro, openai/o1-pro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string",
                      "const": "chat.completion"
                    },
                    "created": {
                      "type": "number"
                    },
                    "choices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "number"
                          },
                          "message": {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              },
                              "refusal": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "annotations": {
                                "anyOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "url_citation"
                                        },
                                        "url_citation": {
                                          "type": "object",
                                          "properties": {
                                            "end_index": {
                                              "type": "integer"
                                            },
                                            "start_index": {
                                              "type": "integer"
                                            },
                                            "title": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "end_index",
                                            "start_index",
                                            "title",
                                            "url"
                                          ],
                                          "additionalProperties": false
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "url_citation"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "audio": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "string"
                                  },
                                  "transcript": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "id",
                                  "data",
                                  "transcript",
                                  "expires_at"
                                ],
                                "additionalProperties": false
                              },
                              "tool_calls": {
                                "anyOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "function"
                                            },
                                            "function": {
                                              "type": "object",
                                              "properties": {
                                                "arguments": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "arguments",
                                                "name"
                                              ],
                                              "additionalProperties": false
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "type",
                                            "function"
                                          ],
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "custom"
                                            },
                                            "custom": {
                                              "type": "object",
                                              "properties": {
                                                "input": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "input",
                                                "name"
                                              ],
                                              "additionalProperties": false
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "type",
                                            "custom"
                                          ],
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "role",
                              "content",
                              "audio"
                            ],
                            "additionalProperties": false
                          },
                          "finish_reason": {
                            "type": "string",
                            "enum": [
                              "stop",
                              "length",
                              "content_filter",
                              "tool_calls"
                            ]
                          },
                          "logprobs": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "bytes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer"
                                          }
                                        },
                                        "logprob": {
                                          "type": "number"
                                        },
                                        "token": {
                                          "type": "string"
                                        },
                                        "top_logprobs": {
                                          "anyOf": [
                                            {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "bytes": {
                                                    "anyOf": [
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "integer"
                                                        }
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ]
                                                  },
                                                  "logprob": {
                                                    "type": "number"
                                                  },
                                                  "token": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "logprob",
                                                  "token"
                                                ],
                                                "additionalProperties": false
                                              }
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "bytes",
                                        "logprob",
                                        "token"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "refusal": {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/properties/choices/items/properties/logprobs/anyOf/0/properties/content/items"
                                    }
                                  }
                                },
                                "required": [
                                  "content",
                                  "refusal"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "required": [
                          "index",
                          "message",
                          "finish_reason"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "model": {
                      "type": "string"
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "prompt_tokens": {
                          "type": "number"
                        },
                        "completion_tokens": {
                          "type": "number"
                        },
                        "total_tokens": {
                          "type": "number"
                        },
                        "completion_tokens_details": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "accepted_prediction_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "audio_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "reasoning_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "rejected_prediction_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "prompt_tokens_details": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "audio_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "cached_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      },
                      "required": [
                        "prompt_tokens",
                        "completion_tokens",
                        "total_tokens"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created",
                    "choices",
                    "model",
                    "usage"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "choices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "delta": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "refusal": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "user",
                                  "assistant",
                                  "developer",
                                  "system",
                                  "tool"
                                ]
                              },
                              "tool_calls": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "index": {
                                      "type": "number"
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "function": {
                                      "type": "object",
                                      "properties": {
                                        "arguments": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "arguments",
                                        "name"
                                      ],
                                      "additionalProperties": false
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "function"
                                    }
                                  },
                                  "required": [
                                    "index",
                                    "id",
                                    "function",
                                    "type"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            "required": [
                              "content",
                              "refusal",
                              "tool_calls"
                            ],
                            "additionalProperties": false
                          },
                          "finish_reason": {
                            "type": "string",
                            "enum": [
                              "length",
                              "function_call",
                              "stop",
                              "tool_calls",
                              "content_filter"
                            ]
                          },
                          "index": {
                            "type": "number"
                          },
                          "logprobs": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "token": {
                                      "type": "string"
                                    },
                                    "bytes": {
                                      "type": "array",
                                      "items": {
                                        "type": "number"
                                      }
                                    },
                                    "logprob": {
                                      "type": "number"
                                    },
                                    "top_logprobs": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "token": {
                                            "type": "string"
                                          },
                                          "bytes": {
                                            "type": "array",
                                            "items": {
                                              "type": "number"
                                            }
                                          },
                                          "logprob": {
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "token",
                                          "bytes",
                                          "logprob"
                                        ],
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "required": [
                                    "token",
                                    "bytes",
                                    "logprob",
                                    "top_logprobs"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "refusal": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/properties/choices/items/properties/logprobs/properties/content/items"
                                }
                              }
                            },
                            "required": [
                              "content",
                              "refusal"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "delta",
                          "finish_reason",
                          "index",
                          "logprobs"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "created": {
                      "type": "number"
                    },
                    "model": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string",
                      "const": "chat.completion.chunk"
                    },
                    "service_tier": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "auto",
                            "default",
                            "flex",
                            "scale",
                            "priority"
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "system_fingerprint": {
                      "type": "string"
                    },
                    "usage": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "completion_tokens": {
                              "type": "number"
                            },
                            "prompt_tokens": {
                              "type": "number"
                            },
                            "total_tokens": {
                              "type": "number"
                            },
                            "completion_tokens_details": {
                              "type": "object",
                              "properties": {
                                "accepted_prediction_tokens": {
                                  "type": "number"
                                },
                                "audio_tokens": {
                                  "type": "number"
                                },
                                "reasoning_tokens": {
                                  "type": "number"
                                },
                                "rejected_prediction_tokens": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "accepted_prediction_tokens",
                                "audio_tokens",
                                "reasoning_tokens",
                                "rejected_prediction_tokens"
                              ],
                              "additionalProperties": false
                            },
                            "prompt_tokens_details": {
                              "type": "object",
                              "properties": {
                                "audio_tokens": {
                                  "type": "number"
                                },
                                "cached_tokens": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "audio_tokens",
                                "cached_tokens"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "completion_tokens",
                            "prompt_tokens",
                            "total_tokens",
                            "completion_tokens_details",
                            "prompt_tokens_details"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "choices",
                    "created",
                    "model",
                    "object"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                }
              }
            }
          }
        },
        "x-hideTryItPanel": true,
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "async function main() {\n  const response = await fetch('https://api.aimlapi.com/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer <YOUR_AIMLAPI_KEY>',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      model: 'openai/gpt-4o',\n      messages:[\n          {\n              role:'user',\n              content: 'Hello'\n          }\n      ],\n      modalities: ['text', 'audio'],\n      audio: { voice: 'alloy', format: 'pcm16' },\n    }),\n  });\n\n  const data = await response.json();\n  console.log(JSON.stringify(data, null, 2));\n}\n\nmain();"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    \"https://api.aimlapi.com/v1/chat/completions\",\n    headers={\n        \"Content-Type\":\"application/json\", \n        \"Authorization\":\"Bearer <YOUR_AIMLAPI_KEY>\",\n    },\n    json={\n        \"model\":\"openai/gpt-4o\",\n        \"messages\":[\n            {\n                \"role\":\"user\",\n                \"content\":\"Hello\"\n            }\n        ],\n        \"modalities\": [\"text\", \"audio\"],\n        \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n    }\n)\n\ndata = response.json()\nprint(data)"
          },
          {
            "lang": "cURL",
            "source": "curl -L \\\n  --request POST \\\n  --url 'https://api.aimlapi.com/v1/chat/completions' \\\n  --header 'Authorization: Bearer <YOUR_AIMLAPI_KEY>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"model\": \"openai/gpt-4o\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"hi\"\n      }\n    ],\n    \"modalities\": [\"text\", \"audio\"], \n    \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n  }'"
          },
          {
            "lang": "HTTP",
            "source": "POST /v1/chat/completions HTTP/1.1\nHost: api.aimlapi.com\nAuthorization: Bearer <YOUR_AIMLAPI_KEY>\nContent-Type: application/json\nAccept: */*\nContent-Length: 59\n\n{\n  \"model\": \"openai/gpt-4o\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"hi\"\n    }\n  ],\n  \"modalities\": [\"text\", \"audio\"], \n  \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n}"
          }
        ]
      }
    },
    "/chat/completions": {
      "post": {
        "operationId": "_chat_completions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "enum": [
                      "o1-pro",
                      "openai/o1-pro"
                    ]
                  },
                  "frequency_penalty": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2,
                        "maximum": 2
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim."
                  },
                  "logit_bias": {
                    "anyOf": [
                      {
                        "type": "object",
                        "additionalProperties": {
                          "type": "number",
                          "minimum": -100,
                          "maximum": 100
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Modify the likelihood of specified tokens appearing in the completion.\n  \n  Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token."
                  },
                  "logprobs": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Whether to return log probabilities of the output tokens or not. If True, returns the log probabilities of each output token returned in the content of message."
                  },
                  "top_logprobs": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 20
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to True if this parameter is used."
                  },
                  "max_tokens": {
                    "type": "number",
                    "minimum": 1,
                    "description": "The maximum number of tokens that can be generated in the chat completion. This value can be used to control costs for text generated via API."
                  },
                  "max_completion_tokens": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and reasoning tokens."
                  },
                  "n": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "minimum": 1
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs."
                  },
                  "prediction": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "content",
                        "description": "The type of the predicted content you want to provide."
                      },
                      "content": {
                        "anyOf": [
                          {
                            "type": "string",
                            "description": "The content used for a Predicted Output. This is often the text of a file you are regenerating with minor changes."
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "text",
                                  "description": "The type of the content part."
                                },
                                "text": {
                                  "type": "string",
                                  "description": "The text content."
                                }
                              },
                              "required": [
                                "type",
                                "text"
                              ],
                              "additionalProperties": false
                            },
                            "description": "An array of content parts with a defined type. Supported options differ based on the model being used to generate the response. Can contain text inputs."
                          }
                        ],
                        "description": "The content that should be matched when generating a model response. If generated tokens would match this content, the entire model response can be returned much more quickly."
                      }
                    },
                    "required": [
                      "type",
                      "content"
                    ],
                    "additionalProperties": false,
                    "description": "Configuration for a Predicted Output, which can greatly improve response times when large parts of the model response are known ahead of time."
                  },
                  "presence_penalty": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2,
                        "maximum": 2
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics."
                  },
                  "seed": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result."
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "system",
                              "description": "The role of the author of the message — in this case, the system."
                            },
                            "content": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "text",
                                        "description": "The type of the content part."
                                      },
                                      "text": {
                                        "type": "string",
                                        "description": "The text content."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "text"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              ],
                              "description": "The contents of the system message."
                            },
                            "name": {
                              "type": "string",
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "role",
                            "content"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "user",
                              "description": "The role of the author of the message — in this case, the user"
                            },
                            "content": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "image_url"
                                          },
                                          "image_url": {
                                            "type": "object",
                                            "properties": {
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Either a URL of the image or the base64 encoded image data. "
                                              },
                                              "detail": {
                                                "type": "string",
                                                "enum": [
                                                  "low",
                                                  "high",
                                                  "auto"
                                                ],
                                                "description": "Specifies the detail level of the image. Currently supports JPG/JPEG, PNG, GIF, and WEBP formats."
                                              }
                                            },
                                            "required": [
                                              "url"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "image_url"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "$ref": "#/properties/messages/items/anyOf/0/properties/content/anyOf/1/items"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "input_audio",
                                            "description": "The type of the content part."
                                          },
                                          "input_audio": {
                                            "type": "object",
                                            "properties": {
                                              "data": {
                                                "type": "string",
                                                "description": "Base64 encoded audio data."
                                              },
                                              "format": {
                                                "type": "string",
                                                "enum": [
                                                  "wav",
                                                  "mp3"
                                                ],
                                                "description": "The format of the encoded audio data. Currently supports \"wav\" and \"mp3\"."
                                              }
                                            },
                                            "required": [
                                              "data",
                                              "format"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "input_audio"
                                        ],
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "file",
                                            "description": "The type of the content part."
                                          },
                                          "file": {
                                            "type": "object",
                                            "properties": {
                                              "file_data": {
                                                "type": "string",
                                                "description": "The file data, encoded in base64 and passed to the model as a string. Only PDF format is supported.\n        - Maximum size per file: Up to 512 MB and up to 2 million tokens.\n        - Maximum number of files: Up to 20 files can be attached to a single GPT application or Assistant. This limit applies throughout the application's lifetime.\n        - Maximum total file storage per user: 10 GB."
                                              },
                                              "filename": {
                                                "type": "string",
                                                "description": "The file name specified by the user. This name can be used to reference the file when interacting with the model, especially if multiple files are uploaded."
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "file"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                }
                              ],
                              "description": "The contents of the user message."
                            },
                            "name": {
                              "type": "string",
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "role",
                            "content"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "tool",
                              "description": "The role of the author of the message — in this case, the tool."
                            },
                            "content": {
                              "type": "string",
                              "description": "The contents of the tool message."
                            },
                            "tool_call_id": {
                              "type": "string",
                              "description": "Tool call that this message is responding to."
                            },
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "role",
                            "content",
                            "tool_call_id"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "function"
                            },
                            "content": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role",
                            "content",
                            "name"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "const": "assistant",
                              "description": "The role of the author of the message — in this case, the Assistant."
                            },
                            "content": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "description": "The contents of the Assistant message."
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "$ref": "#/properties/messages/items/anyOf/0/properties/content/anyOf/1/items"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "refusal": {
                                            "type": "string",
                                            "description": "The refusal message generated by the model."
                                          },
                                          "type": {
                                            "type": "string",
                                            "const": "refusal",
                                            "description": "The type of the content part."
                                          }
                                        },
                                        "required": [
                                          "refusal",
                                          "type"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  "description": "An array of content parts with a defined type. Can be one or more of type text, or exactly one of type refusal."
                                }
                              ],
                              "description": "The contents of the Assistant message. Required unless tool_calls or function_call is specified."
                            },
                            "tool_calls": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the tool call."
                                  },
                                  "type": {
                                    "type": "string",
                                    "const": "function",
                                    "description": "The type of the tool. Currently, only function is supported."
                                  },
                                  "function": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the function to call."
                                      },
                                      "arguments": {
                                        "type": "string",
                                        "description": "The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function."
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "arguments"
                                    ],
                                    "additionalProperties": false,
                                    "description": "The function that the model called."
                                  }
                                },
                                "required": [
                                  "id",
                                  "type",
                                  "function"
                                ],
                                "additionalProperties": false
                              },
                              "description": "The tool calls generated by the model, such as function calls."
                            },
                            "refusal": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The refusal message by the Assistant."
                            },
                            "audio": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Unique identifier for a previous audio response from the model."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "Data about a previous audio response from the model."
                            },
                            "name": {
                              "type": "string",
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "role"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "content": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/properties/messages/items/anyOf/0/properties/content/anyOf/1/items"
                                  }
                                }
                              ],
                              "description": "The contents of the developer message."
                            },
                            "role": {
                              "type": "string",
                              "const": "developer",
                              "description": "The role of the author of the message — in this case, the developer."
                            },
                            "name": {
                              "type": "string",
                              "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
                            }
                          },
                          "required": [
                            "content",
                            "role"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "description": "A list of messages comprising the conversation so far. Depending on the model you use, different message types (modalities) are supported, like text, documents (txt, pdf), images, and audio."
                  },
                  "stream": {
                    "type": "boolean",
                    "default": false,
                    "description": "If set to True, the model response data will be streamed to the client as it is generated using server-sent events."
                  },
                  "stream_options": {
                    "type": "object",
                    "properties": {
                      "include_usage": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "include_usage"
                    ],
                    "additionalProperties": false
                  },
                  "top_p": {
                    "type": "number",
                    "minimum": 0.1,
                    "maximum": 1,
                    "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n  We generally recommend altering this or temperature but not both."
                  },
                  "temperature": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 2,
                    "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both."
                  },
                  "stop": {
                    "anyOf": [
                      {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence."
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "function",
                          "description": "The type of the tool. Currently, only function is supported."
                        },
                        "function": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "A description of what the function does, used by the model to choose when and how to call the function."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                            },
                            "parameters": {
                              "type": "object",
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "not": {}
                                  },
                                  {}
                                ],
                                "description": "The parameters the functions accepts, described as a JSON Schema object."
                              }
                            },
                            "strict": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Whether to enable strict schema adherence when generating the function call. If set to True, the model will follow the exact schema defined in the parameters field. Only a subset of JSON Schema is supported when strict is True."
                            }
                          },
                          "required": [
                            "name",
                            "parameters"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "type",
                        "function"
                      ],
                      "additionalProperties": false
                    },
                    "description": "A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported."
                  },
                  "tool_choice": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "none",
                          "auto",
                          "required"
                        ],
                        "description": "none means the model will not call any tool and instead generates a message. auto means the model can pick between generating a message or calling one or more tools. required means the model must call one or more tools."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "function"
                          },
                          "function": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "type",
                          "function"
                        ],
                        "additionalProperties": false,
                        "description": "Specifies a tool the model should use. Use to force the model to call a specific function."
                      }
                    ],
                    "description": "Controls which (if any) tool is called by the model. none means the model will not call any tool and instead generates a message. auto means the model can pick between generating a message or calling one or more tools. required means the model must call one or more tools. Specifying a particular tool via {\"type\": \"function\", \"function\": {\"name\": \"my_function\"}} forces the model to call that tool.\n  none is the default when no tools are present. auto is the default if tools are present."
                  },
                  "parallel_tool_calls": {
                    "type": "boolean",
                    "description": "Whether to enable parallel function calling during tool use."
                  },
                  "reasoning_effort": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ],
                    "description": "Constrains effort on reasoning for reasoning models. Currently supported values are low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response."
                  },
                  "response_format": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "text",
                            "description": "The type of response format being defined. Always text."
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false,
                        "description": "Default response format. Used to generate text responses."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "json_object",
                            "description": "The type of response format being defined. Always json_object."
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false,
                        "description": "An older method of generating JSON responses. Using json_schema is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "json_schema",
                            "description": "The type of response format being defined. Always json_schema."
                          },
                          "json_schema": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
                              },
                              "schema": {
                                "type": "object",
                                "additionalProperties": {},
                                "description": "The schema for the response format, described as a JSON Schema object."
                              },
                              "strict": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Whether to enable strict schema adherence when generating the output. If set to True, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is True."
                              },
                              "description": {
                                "type": "string",
                                "description": "A description of what the response format is for, used by the model to determine how to respond in the format."
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "additionalProperties": false,
                            "description": "JSON Schema response format. Used to generate structured JSON responses."
                          }
                        },
                        "required": [
                          "type",
                          "json_schema"
                        ],
                        "additionalProperties": false,
                        "description": "JSON Schema response format. Used to generate structured JSON responses."
                      }
                    ],
                    "description": "An object specifying the format that the model must output."
                  },
                  "audio": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "format": {
                            "type": "string",
                            "enum": [
                              "wav",
                              "mp3",
                              "flac",
                              "opus",
                              "pcm16"
                            ],
                            "description": "Specifies the output audio format. Must be one of wav, mp3, flac, opus, or pcm16."
                          },
                          "voice": {
                            "type": "string",
                            "enum": [
                              "alloy",
                              "ash",
                              "ballad",
                              "coral",
                              "echo",
                              "fable",
                              "nova",
                              "onyx",
                              "sage",
                              "shimmer"
                            ],
                            "description": "The voice the model uses to respond. Supported voices are alloy, ash, ballad, coral, echo, fable, nova, onyx, sage, and shimmer."
                          }
                        },
                        "required": [
                          "format",
                          "voice"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Parameters for audio output. Required when audio output is requested with modalities: [\"audio\"]."
                  },
                  "modalities": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "text",
                            "audio"
                          ]
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Output types that you would like the model to generate. Most models are capable of generating text, which is the default:\n  \n  [\"text\"]\n  \n  The gpt-4o-audio-preview model can also be used to generate audio. To request that this model generate both text and audio responses, you can use:\n  \n  [\"text\", \"audio\"]"
                  },
                  "web_search_options": {
                    "type": "object",
                    "properties": {
                      "search_context_size": {
                        "type": "string",
                        "enum": [
                          "low",
                          "medium",
                          "high"
                        ],
                        "description": "High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default."
                      },
                      "user_location": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "approximate": {
                                "type": "object",
                                "properties": {
                                  "city": {
                                    "type": "string",
                                    "description": "Free text input for the city of the user, e.g. San Francisco."
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "The two-letter ISO country code of the user, e.g. US."
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "Free text input for the region of the user, e.g. California."
                                  },
                                  "timezone": {
                                    "type": "string",
                                    "description": "The IANA timezone of the user, e.g. America/Los_Angeles."
                                  }
                                },
                                "additionalProperties": false,
                                "description": "Approximate location parameters for the search."
                              },
                              "type": {
                                "type": "string",
                                "const": "approximate",
                                "description": "The type of location approximation. Always approximate."
                              }
                            },
                            "required": [
                              "approximate",
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "description": "Approximate location parameters for the search."
                      }
                    },
                    "additionalProperties": false,
                    "description": "This tool searches the web for relevant results to use in a response."
                  }
                },
                "required": [
                  "model",
                  "messages"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "o1-pro, openai/o1-pro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string",
                      "const": "chat.completion"
                    },
                    "created": {
                      "type": "number"
                    },
                    "choices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "number"
                          },
                          "message": {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              },
                              "refusal": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "annotations": {
                                "anyOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "url_citation"
                                        },
                                        "url_citation": {
                                          "type": "object",
                                          "properties": {
                                            "end_index": {
                                              "type": "integer"
                                            },
                                            "start_index": {
                                              "type": "integer"
                                            },
                                            "title": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "end_index",
                                            "start_index",
                                            "title",
                                            "url"
                                          ],
                                          "additionalProperties": false
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "url_citation"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "audio": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "string"
                                  },
                                  "transcript": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "id",
                                  "data",
                                  "transcript",
                                  "expires_at"
                                ],
                                "additionalProperties": false
                              },
                              "tool_calls": {
                                "anyOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "function"
                                            },
                                            "function": {
                                              "type": "object",
                                              "properties": {
                                                "arguments": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "arguments",
                                                "name"
                                              ],
                                              "additionalProperties": false
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "type",
                                            "function"
                                          ],
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "custom"
                                            },
                                            "custom": {
                                              "type": "object",
                                              "properties": {
                                                "input": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "input",
                                                "name"
                                              ],
                                              "additionalProperties": false
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "type",
                                            "custom"
                                          ],
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "role",
                              "content",
                              "audio"
                            ],
                            "additionalProperties": false
                          },
                          "finish_reason": {
                            "type": "string",
                            "enum": [
                              "stop",
                              "length",
                              "content_filter",
                              "tool_calls"
                            ]
                          },
                          "logprobs": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "bytes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer"
                                          }
                                        },
                                        "logprob": {
                                          "type": "number"
                                        },
                                        "token": {
                                          "type": "string"
                                        },
                                        "top_logprobs": {
                                          "anyOf": [
                                            {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "bytes": {
                                                    "anyOf": [
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "integer"
                                                        }
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ]
                                                  },
                                                  "logprob": {
                                                    "type": "number"
                                                  },
                                                  "token": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "logprob",
                                                  "token"
                                                ],
                                                "additionalProperties": false
                                              }
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "bytes",
                                        "logprob",
                                        "token"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "refusal": {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/properties/choices/items/properties/logprobs/anyOf/0/properties/content/items"
                                    }
                                  }
                                },
                                "required": [
                                  "content",
                                  "refusal"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "required": [
                          "index",
                          "message",
                          "finish_reason"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "model": {
                      "type": "string"
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "prompt_tokens": {
                          "type": "number"
                        },
                        "completion_tokens": {
                          "type": "number"
                        },
                        "total_tokens": {
                          "type": "number"
                        },
                        "completion_tokens_details": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "accepted_prediction_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "audio_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "reasoning_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "rejected_prediction_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "prompt_tokens_details": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "audio_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "cached_tokens": {
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      },
                      "required": [
                        "prompt_tokens",
                        "completion_tokens",
                        "total_tokens"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created",
                    "choices",
                    "model",
                    "usage"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "choices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "delta": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "refusal": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "user",
                                  "assistant",
                                  "developer",
                                  "system",
                                  "tool"
                                ]
                              },
                              "tool_calls": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "index": {
                                      "type": "number"
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "function": {
                                      "type": "object",
                                      "properties": {
                                        "arguments": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "arguments",
                                        "name"
                                      ],
                                      "additionalProperties": false
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "function"
                                    }
                                  },
                                  "required": [
                                    "index",
                                    "id",
                                    "function",
                                    "type"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            "required": [
                              "content",
                              "refusal",
                              "tool_calls"
                            ],
                            "additionalProperties": false
                          },
                          "finish_reason": {
                            "type": "string",
                            "enum": [
                              "length",
                              "function_call",
                              "stop",
                              "tool_calls",
                              "content_filter"
                            ]
                          },
                          "index": {
                            "type": "number"
                          },
                          "logprobs": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "token": {
                                      "type": "string"
                                    },
                                    "bytes": {
                                      "type": "array",
                                      "items": {
                                        "type": "number"
                                      }
                                    },
                                    "logprob": {
                                      "type": "number"
                                    },
                                    "top_logprobs": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "token": {
                                            "type": "string"
                                          },
                                          "bytes": {
                                            "type": "array",
                                            "items": {
                                              "type": "number"
                                            }
                                          },
                                          "logprob": {
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "token",
                                          "bytes",
                                          "logprob"
                                        ],
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "required": [
                                    "token",
                                    "bytes",
                                    "logprob",
                                    "top_logprobs"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "refusal": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/properties/choices/items/properties/logprobs/properties/content/items"
                                }
                              }
                            },
                            "required": [
                              "content",
                              "refusal"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "delta",
                          "finish_reason",
                          "index",
                          "logprobs"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "created": {
                      "type": "number"
                    },
                    "model": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string",
                      "const": "chat.completion.chunk"
                    },
                    "service_tier": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "auto",
                            "default",
                            "flex",
                            "scale",
                            "priority"
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "system_fingerprint": {
                      "type": "string"
                    },
                    "usage": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "completion_tokens": {
                              "type": "number"
                            },
                            "prompt_tokens": {
                              "type": "number"
                            },
                            "total_tokens": {
                              "type": "number"
                            },
                            "completion_tokens_details": {
                              "type": "object",
                              "properties": {
                                "accepted_prediction_tokens": {
                                  "type": "number"
                                },
                                "audio_tokens": {
                                  "type": "number"
                                },
                                "reasoning_tokens": {
                                  "type": "number"
                                },
                                "rejected_prediction_tokens": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "accepted_prediction_tokens",
                                "audio_tokens",
                                "reasoning_tokens",
                                "rejected_prediction_tokens"
                              ],
                              "additionalProperties": false
                            },
                            "prompt_tokens_details": {
                              "type": "object",
                              "properties": {
                                "audio_tokens": {
                                  "type": "number"
                                },
                                "cached_tokens": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "audio_tokens",
                                "cached_tokens"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "completion_tokens",
                            "prompt_tokens",
                            "total_tokens",
                            "completion_tokens_details",
                            "prompt_tokens_details"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "choices",
                    "created",
                    "model",
                    "object"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                }
              }
            }
          }
        },
        "x-hideTryItPanel": true,
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "async function main() {\n  const response = await fetch('https://api.aimlapi.com/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer <YOUR_AIMLAPI_KEY>',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      model: 'openai/gpt-4o',\n      messages:[\n          {\n              role:'user',\n              content: 'Hello'\n          }\n      ],\n      modalities: ['text', 'audio'],\n      audio: { voice: 'alloy', format: 'pcm16' },\n    }),\n  });\n\n  const data = await response.json();\n  console.log(JSON.stringify(data, null, 2));\n}\n\nmain();"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nresponse = requests.post(\n    \"https://api.aimlapi.com/v1/chat/completions\",\n    headers={\n        \"Content-Type\":\"application/json\", \n        \"Authorization\":\"Bearer <YOUR_AIMLAPI_KEY>\",\n    },\n    json={\n        \"model\":\"openai/gpt-4o\",\n        \"messages\":[\n            {\n                \"role\":\"user\",\n                \"content\":\"Hello\"\n            }\n        ],\n        \"modalities\": [\"text\", \"audio\"],\n        \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n    }\n)\n\ndata = response.json()\nprint(data)"
          },
          {
            "lang": "cURL",
            "source": "curl -L \\\n  --request POST \\\n  --url 'https://api.aimlapi.com/v1/chat/completions' \\\n  --header 'Authorization: Bearer <YOUR_AIMLAPI_KEY>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"model\": \"openai/gpt-4o\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"hi\"\n      }\n    ],\n    \"modalities\": [\"text\", \"audio\"], \n    \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n  }'"
          },
          {
            "lang": "HTTP",
            "source": "POST /v1/chat/completions HTTP/1.1\nHost: api.aimlapi.com\nAuthorization: Bearer <YOUR_AIMLAPI_KEY>\nContent-Type: application/json\nAccept: */*\nContent-Length: 59\n\n{\n  \"model\": \"openai/gpt-4o\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"hi\"\n    }\n  ],\n  \"modalities\": [\"text\", \"audio\"], \n  \"audio\": {\"voice\": \"alloy\", \"format\": \"pcm16\"}\n}"
          }
        ]
      }
    }
  }
}
